{"version":3,"file":"index.00ce6c56b9874eb303aa.js","mappings":"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","sources":["webpack://@qtpiofficial/qtwc/./src/components/qt-sound/styles.css","webpack://@qtpiofficial/qtwc/./node_modules/css-loader/dist/runtime/api.js","webpack://@qtpiofficial/qtwc/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://@qtpiofficial/qtwc/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://@qtpiofficial/qtwc/webpack/bootstrap","webpack://@qtpiofficial/qtwc/webpack/runtime/compat get default export","webpack://@qtpiofficial/qtwc/webpack/runtime/define property getters","webpack://@qtpiofficial/qtwc/webpack/runtime/hasOwnProperty shorthand","webpack://@qtpiofficial/qtwc/./src/components/qt-board/qtboard.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/bleconstants.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/utils/callcallback.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/utils/parseData.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/ble.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/qtboardble.js","webpack://@qtpiofficial/qtwc/./src/components/qt-board-ble/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-led/qtled.js","webpack://@qtpiofficial/qtwc/./src/components/qt-led/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-argb/qtargb.js","webpack://@qtpiofficial/qtwc/./src/components/qt-argb/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-buzzer/qtbuzzer.js","webpack://@qtpiofficial/qtwc/./src/components/qt-buzzer/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-apds/qtapds.js","webpack://@qtpiofficial/qtwc/./src/components/qt-apds/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ir/qtir.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ir/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ldr/qtldr.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ldr/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-limitswitch/qtlimitswitch.js","webpack://@qtpiofficial/qtwc/./src/components/qt-limitswitch/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-motor/qtmotor.js","webpack://@qtpiofficial/qtwc/./src/components/qt-motor/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-rgb/qtrgb.js","webpack://@qtpiofficial/qtwc/./src/components/qt-rgb/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-servo/qtservo.js","webpack://@qtpiofficial/qtwc/./src/components/qt-servo/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-temperature/qttemperature.js","webpack://@qtpiofficial/qtwc/./src/components/qt-temperature/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ultrasonic/qtultrasonic.js","webpack://@qtpiofficial/qtwc/./src/components/qt-ultrasonic/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-gv/qtgv.js","webpack://@qtpiofficial/qtwc/./src/components/qt-gv/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-alexa/qtalexa.js","webpack://@qtpiofficial/qtwc/./src/components/qt-alexa/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-gas/qtgas.js","webpack://@qtpiofficial/qtwc/./src/components/qt-gas/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-humidity/qthumidity.js","webpack://@qtpiofficial/qtwc/./src/components/qt-humidity/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-mpu6050/qtmpu6050.js","webpack://@qtpiofficial/qtwc/./src/components/qt-mpu6050/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-tof/qttof.js","webpack://@qtpiofficial/qtwc/./src/components/qt-tof/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-pumpmotor/qtpumpmotor.js","webpack://@qtpiofficial/qtwc/./src/components/qt-pumpmotor/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-pose/qtpose.js","webpack://@qtpiofficial/qtwc/./src/components/qt-pose/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-image/qtimage.js","webpack://@qtpiofficial/qtwc/./src/components/qt-image/index.js","webpack://@qtpiofficial/qtwc/./src/components/qt-sound/styles.css?ad7b","webpack://@qtpiofficial/qtwc/./src/components/qt-sound/qtsound.js","webpack://@qtpiofficial/qtwc/./src/components/qt-sound/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\\\"\\\"}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif,BlinkMacSystemFont,Helvetica Neue,Arial,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}a{color:inherit;text-decoration:inherit}b{font-weight:bolder}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,select{color:inherit;font-family:inherit;font-size:100%;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}p{margin:0}fieldset{margin:0}fieldset,legend{padding:0}input::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder{color:#9ca3af;opacity:1}input::-moz-placeholder, textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder, textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}audio,canvas,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent;--tw-shadow:0 0 transparent;--tw-shadow-colored:0 0 transparent;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.invisible{visibility:hidden}.static{position:static}.absolute{position:absolute}.relative{position:relative}.right-0{right:0}.top-0{top:0}.z-10{z-index:10}.-mr-2{margin-right:-.5rem}.-mt-2{margin-top:-.5rem}.mr-2{margin-right:.5rem}.box-border{box-sizing:border-box}.box-content{box-sizing:content-box}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.hidden{display:none}.h-auto{height:auto}.h-20{height:5rem}.h-2{height:.5rem}.h-24{height:6rem}.h-10{height:2.5rem}.h-16{height:4rem}.h-full{height:100%}.w-full{width:100%}.w-auto{width:auto}.w-20{width:5rem}.w-16{width:4rem}.w-2{width:.5rem}.w-48{width:12rem}.w-10{width:2.5rem}.w-32{width:8rem}.w-36{width:9rem}.w-52{width:13rem}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.content-center{align-content:center}.items-center{align-items:center}.justify-center{justify-content:center}.gap-4{gap:1rem}.gap-3{gap:.75rem}.gap-6{gap:1.5rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.gap-x-16{-moz-column-gap:4rem;column-gap:4rem}.gap-x-3{-moz-column-gap:.75rem;column-gap:.75rem}.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}.place-self-end{align-self:end;justify-self:end;place-self:end}.place-self-center{align-self:center;justify-self:center;place-self:center}.overflow-hidden{overflow:hidden}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-l{border-bottom-left-radius:.25rem}.rounded-l,.rounded-t{border-top-left-radius:.25rem}.rounded-r,.rounded-t{border-top-right-radius:.25rem}.rounded-r{border-bottom-right-radius:.25rem}.border{border-width:1px}.border-4{border-width:4px}.border-b{border-bottom-width:1px}.bg-gray-300{--tw-bg-opacity:1;background-color:rgba(209,213,219,var(--tw-bg-opacity))}.bg-indigo-300{--tw-bg-opacity:1;background-color:rgba(165,180,252,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(59,130,246,var(--tw-bg-opacity))}.bg-gray-400{--tw-bg-opacity:1;background-color:rgba(156,163,175,var(--tw-bg-opacity))}.bg-yellow-400{--tw-bg-opacity:1;background-color:rgba(250,204,21,var(--tw-bg-opacity))}.bg-gray-600{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}.bg-purple-400{--tw-bg-opacity:1;background-color:rgba(192,132,252,var(--tw-bg-opacity))}.bg-green-400{--tw-bg-opacity:1;background-color:rgba(74,222,128,var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity))}.bg-pink-600{--tw-bg-opacity:1;background-color:rgba(219,39,119,var(--tw-bg-opacity))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.from-blue-300{--tw-gradient-from:#93c5fd;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(147,197,253,0))}.from-green-300{--tw-gradient-from:#86efac;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(134,239,172,0))}.from-red-400{--tw-gradient-from:#f87171;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,hsla(0,91%,71%,0))}.from-indigo-500{--tw-gradient-from:#6366f1;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(99,102,241,0))}.via-blue-300{--tw-gradient-stops:var(--tw-gradient-from),#93c5fd,var(--tw-gradient-to,rgba(147,197,253,0))}.via-pink-600{--tw-gradient-stops:var(--tw-gradient-from),#db2777,var(--tw-gradient-to,rgba(219,39,119,0))}.to-green-400{--tw-gradient-to:#4ade80}.to-yellow-400{--tw-gradient-to:#facc15}.to-purple-300{--tw-gradient-to:#d8b4fe}.to-blue-300{--tw-gradient-to:#93c5fd}.p-4{padding:1rem}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-10{padding:2.5rem}.p-8{padding:2rem}.p-9{padding:2.25rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-6{padding-bottom:1.5rem;padding-top:1.5rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.py-10{padding-bottom:2.5rem;padding-top:2.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.text-left{text-align:left}.text-center{text-align:center}.text-justify{text-align:justify}.align-middle{vertical-align:middle}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif,BlinkMacSystemFont,Helvetica Neue,Arial,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.text-2xl{font-size:1.5rem;line-height:2rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-medium{font-weight:500}.uppercase{text-transform:uppercase}.leading-tight{line-height:1.25}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:0 0 transparent,0 0 transparent,var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.outline{outline-style:solid}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-text-decoration-color,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-text-decoration-color,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-200{transition-duration:.2s}.duration-150{transition-duration:.15s}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}.hover\\\\:bg-gray-400:hover{--tw-bg-opacity:1;background-color:rgba(156,163,175,var(--tw-bg-opacity))}.hover\\\\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(29,78,216,var(--tw-bg-opacity))}.hover\\\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:0 0 transparent,0 0 transparent,var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.focus\\\\:bg-blue-700:focus{--tw-bg-opacity:1;background-color:rgba(29,78,216,var(--tw-bg-opacity))}.focus\\\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:0 0 transparent,0 0 transparent,var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.focus\\\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),0 0 transparent;box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent)}.active\\\\:bg-blue-800:active{--tw-bg-opacity:1;background-color:rgba(30,64,175,var(--tw-bg-opacity))}.active\\\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:0 0 transparent,0 0 transparent,var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}@media (min-width:768px){.md\\\\:box-content{box-sizing:content-box}.md\\\\:grid-flow-col{grid-auto-flow:column}.md\\\\:text-base{font-size:1rem;line-height:1.5rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/qt-sound/styles.css\",\"webpack://./src/components/qt-sound/%3Cinput%20css%20MKvQkV%3E\",\"<no source>\"],\"names\":[],\"mappings\":\"AAAA,gEAAc,CAAd,iBCWE,sBAAwD,CAHxD,qBDRY,CAAd,eCgBE,eDhBY,CAAd,KC4BE,6BAA8B,CAG9B,iNAAsP,CAJtP,eAAgB,CAEhB,eAAgB,CAChB,aAAW,CAAX,UD9BY,CAAd,KCyCE,mBAAoB,CADpB,QDxCY,CAAd,ECmFE,aAAc,CACd,uBDpFY,CAAd,EC6FE,kBD7FY,CAAd,QC2HE,aAAc,CACd,aAAc,CACd,iBAAkB,CAClB,uBD9HY,CAAd,ICkIE,aDlIY,CAAd,ICsIE,SDtIY,CAAd,MCkJE,wBAAyB,CADzB,oBAAqB,CADrB,aDhJY,CAAd,oBCmKE,aAAc,CAHd,mBAAoB,CACpB,cAAe,CACf,mBAAoB,CAEpB,QAAS,CACT,SDrKY,CAAd,cC8KE,mBD9KY,CAAd,gDC0LE,yBAA0B,CAC1B,4BAA6B,CAC7B,qBD5LY,CAAd,SCoNE,uBDpNY,CAAd,wDC6NE,WD7NY,CAAd,cCsOE,4BAA6B,CAC7B,mBDvOY,CAAd,4BC+OE,uBD/OY,CAAd,6BCwPE,yBAA0B,CAC1B,YDzPY,CAAd,ECqRE,QDrRY,CAAd,SCyRE,QDzRY,CAAd,gBC0RE,SD1RY,CAAd,wBCyTE,aAAwC,CADxC,SDxTY,CAAd,4BCyTE,aAAwC,CADxC,SDxTY,CAAd,oDCyTE,aAAwC,CADxC,SDxTY,CAAd,4DCyTE,aAAwC,CADxC,SDxTY,CAAd,mBCyTE,aAAwC,CADxC,SDxTY,CAAd,qBCkUE,cDlUY,CAAd,kCC0VE,aAAc,CACd,qBD3VY,CAAd,UCqWE,WAAY,CADZ,cDpWY,CAAd,SC6WE,YD7WY,CEAd,iBAAA,mBAAA,mBAAA,cAAA,cAAA,cAAA,eAAA,eAAA,aAAA,aAAA,kBAAA,sCAAA,eAAA,oBAAA,sBAAA,uBAAA,wBAAA,kBAAA,2BAAA,4BAAA,oCAAA,wCAAA,iCAAA,4BAAA,oCAAA,YAAA,kBAAA,gBAAA,iBAAA,kBAAA,cAAA,gBAAA,aAAA,mBAAA,qBAAA,2BAAA,yBAAA,0BAAA,2BAAA,uBAAA,wBAAA,yBAAA,sBAAA,AFEA,WEFA,iBFEmB,CAAnB,QEFA,eFEmB,CAAnB,UEFA,iBFEmB,CAAnB,UEFA,iBFEmB,CAAnB,SEFA,OFEmB,CAAnB,OEFA,KFEmB,CAAnB,MEFA,UFEmB,CAAnB,OEFA,mBFEmB,CAAnB,OEFA,iBFEmB,CAAnB,MEFA,kBFEmB,CAAnB,YEFA,qBFEmB,CAAnB,aEFA,sBFEmB,CAAnB,OEFA,aFEmB,CAAnB,cEFA,oBFEmB,CAAnB,MEFA,YFEmB,CAAnB,aEFA,mBFEmB,CAAnB,MEFA,YFEmB,CAAnB,QEFA,YFEmB,CAAnB,QEFA,WFEmB,CAAnB,MEFA,WFEmB,CAAnB,KEFA,YFEmB,CAAnB,MEFA,WFEmB,CAAnB,MEFA,aFEmB,CAAnB,MEFA,WFEmB,CAAnB,QEFA,WFEmB,CAAnB,QEFA,UFEmB,CAAnB,QEFA,UFEmB,CAAnB,MEFA,UFEmB,CAAnB,MEFA,UFEmB,CAAnB,KEFA,WFEmB,CAAnB,MEFA,WFEmB,CAAnB,MEFA,YFEmB,CAAnB,MEFA,UFEmB,CAAnB,MEFA,UFEmB,CAAnB,MEFA,WFEmB,CAAnB,WEFA,6LFEmB,CAAnB,gBEFA,cFEmB,CAAnB,aEFA,yBAAA,sBAAA,qBAAA,gBFEmB,CAAnB,iBEFA,wBAAA,qBAAA,eFEmB,CAAnB,aEFA,6CFEmB,CAAnB,aEFA,6CFEmB,CAAnB,aEFA,6CFEmB,CAAnB,aEFA,6CFEmB,CAAnB,UEFA,kBFEmB,CAAnB,UEFA,qBFEmB,CAAnB,WEFA,cFEmB,CAAnB,gBEFA,oBFEmB,CAAnB,cEFA,kBFEmB,CAAnB,gBEFA,sBFEmB,CAAnB,OEFA,QFEmB,CAAnB,OEFA,UFEmB,CAAnB,OEFA,UFEmB,CAAnB,OEFA,UFEmB,CAAnB,OEFA,SFEmB,CAAnB,SEFA,qBAAA,eFEmB,CAAnB,UEFA,qBAAA,eFEmB,CAAnB,SEFA,uBAAA,iBFEmB,CAAnB,SEFA,qBAAA,eFEmB,CAAnB,gBEFA,eAAA,iBAAA,cFEmB,CAAnB,mBEFA,kBAAA,oBAAA,iBFEmB,CAAnB,iBEFA,eFEmB,CAAnB,YEFA,qBFEmB,CAAnB,SEFA,oBFEmB,CAAnB,cEFA,oBFEmB,CAAnB,WEFA,gCFEmB,CAAnB,sBEFA,6BFEmB,CAAnB,sBEFA,8BFEmB,CAAnB,WEFA,iCFEmB,CAAnB,QEFA,gBFEmB,CAAnB,UEFA,gBFEmB,CAAnB,UEFA,uBFEmB,CAAnB,aEFA,kBAAA,uDFEmB,CAAnB,eEFA,kBAAA,uDFEmB,CAAnB,UEFA,kBAAA,uDFEmB,CAAnB,aEFA,kBAAA,sDFEmB,CAAnB,aEFA,kBAAA,uDFEmB,CAAnB,eEFA,kBAAA,sDFEmB,CAAnB,aEFA,kBAAA,oDFEmB,CAAnB,eEFA,kBAAA,uDFEmB,CAAnB,cEFA,kBAAA,sDFEmB,CAAnB,aEFA,kBAAA,qDFEmB,CAAnB,aEFA,kBAAA,sDFEmB,CAAnB,kBEFA,mEFEmB,CAAnB,eEFA,2BAAA,qFFEmB,CAAnB,gBEFA,2BAAA,qFFEmB,CAAnB,cEFA,2BAAA,mFFEmB,CAAnB,iBEFA,2BAAA,oFFEmB,CAAnB,cEFA,6FFEmB,CAAnB,cEFA,4FFEmB,CAAnB,cEFA,wBFEmB,CAAnB,eEFA,wBFEmB,CAAnB,eEFA,wBFEmB,CAAnB,aEFA,wBFEmB,CAAnB,KEFA,YFEmB,CAAnB,KEFA,cFEmB,CAAnB,KEFA,aFEmB,CAAnB,MEFA,cFEmB,CAAnB,KEFA,YFEmB,CAAnB,KEFA,eFEmB,CAAnB,MEFA,sBAAA,kBFEmB,CAAnB,MEFA,mBAAA,mBFEmB,CAAnB,MEFA,qBAAA,iBFEmB,CAAnB,MEFA,oBAAA,oBFEmB,CAAnB,MEFA,qBAAA,qBFEmB,CAAnB,MEFA,sBAAA,kBFEmB,CAAnB,MEFA,sBAAA,kBFEmB,CAAnB,OEFA,sBAAA,kBFEmB,CAAnB,MEFA,oBAAA,oBFEmB,CAAnB,WEFA,eFEmB,CAAnB,aEFA,iBFEmB,CAAnB,cEFA,kBFEmB,CAAnB,cEFA,qBFEmB,CAAnB,WEFA,iNFEmB,CAAnB,UEFA,iBAAA,gBFEmB,CAAnB,SEFA,kBAAA,mBFEmB,CAAnB,SEFA,kBAAA,mBFEmB,CAAnB,SEFA,iBAAA,gBFEmB,CAAnB,WEFA,eFEmB,CAAnB,eEFA,eFEmB,CAAnB,aEFA,eFEmB,CAAnB,WEFA,wBFEmB,CAAnB,eEFA,gBFEmB,CAAnB,YEFA,oBAAA,8CFEmB,CAAnB,eEFA,oBAAA,2CFEmB,CAAnB,WEFA,0EAAA,iGFEmB,CAAnB,sBEFA,4DAAA,8GFEmB,CAAnB,WEFA,wEAAA,+FFEmB,CAAnB,SEFA,mBFEmB,CAAnB,QEFA,gLFEmB,CAAnB,YEFA,yBAAA,8JAAA,8IAAA,oMAAA,kDFEmB,CAAnB,cEFA,uBFEmB,CAAnB,cEFA,wBFEmB,CAAnB,SEFA,iDFEmB,CAAnB,aEFA,kDFEmB,CAFnB,0BEAA,kBAAA,wDAAA,AFAA,0BEAA,kBAAA,sDAAA,AFAA,wBEAA,0EAAA,kGAAA,4DAAA,+GAAA,AFAA,0BEAA,kBAAA,sDAAA,AFAA,wBEAA,0EAAA,kGAAA,4DAAA,+GAAA,AFAA,2BEAA,8BAAA,mBAAA,AFAA,qBEAA,2GAAA,mGAAA,8EAAA,+FAAA,AFAA,4BEAA,kBAAA,sDAAA,AFAA,0BEAA,0EAAA,kGAAA,4DAAA,+GAAA,AFAA,yBEAA,iBAAA,uBAAA,mBAAA,sBAAA,eAAA,eAAA,mBAAA,CAAA\",\"sourcesContent\":[\"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\",\"/*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n*/\\n\\nhtml {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  tab-size: 4; /* 3 */\\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"); /* 4 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font family by default.\\n2. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace); /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: theme('colors.gray.400', #9ca3af); /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/*\\nEnsure the default browser behavior of the `hidden` attribute.\\n*/\\n\\n[hidden] {\\n  display: none;\\n}\\n\",null],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* eslint-disable new-cap */\n/* eslint-disable no-undef */\nconst boardtemplate = document.createElement('template');\nboardtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<style>\n\n  .toggle-checkbox:checked {\n        @apply: right-0 border-green-400;\n        right: 0;\n        border-color: #68D391;\n    }\n    .toggle-checkbox:checked + .toggle-label {\n        @apply: bg-green-400;\n        background-color: #68D391;\n    }\n    .loader {\n        border: 5px solid #f3f3f3; /* Light grey */\n        border-top: 5px solid green; /* Blue */\n        border-radius: 50%;\n        width: 30px;\n        height: 30px;\n        animation: spin 2s linear infinite;\n      }\n\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n</style>\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto p-4\" style=\"display: block; background-color:#00CCFF\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto\" style=\"background-color:#FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">QtBOARD Classic</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center px-5\">\n      <legend class=\"font-bold\">Connect/Disconnect</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" id=\"state\" name=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n    <div class=\"font-bold align-center text-justify\">\n      <p class=\"text-center\">State</p>\n      <p id=\"boardstatus\" class=\"py-2\">Disconnected</p>\n    </div>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n  </div>\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">COM Port</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"comport\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Board Type</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:85px; overflow:hidden\" id=\"board-type\">\n        <option value=\"veda\" selected>VEDA</option>\n        <option value=\"veda-esp32\" selected>VEDA V2</option>\n        <option value=\"rio\">RIO</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Board Name</legend>\n      <input class=\"form-input rounded-md box-border w-32\" id=\"board-name\" />\n    </div>\n    <br />\n  </div>\n</div>\n\n`;\n/**\n * See {@link QtBoard} webcomponent <qt-board>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/boardble.html|Board BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/board.html Board BlueTooth}.\n */\nexport class QtBoard extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'comport', 'board-type', 'board-name', 'ccs', 'state']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(boardtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#comport').value = this.getAttribute('comport');\n    this.state = this.getAttribute('state'); // connect/disconnect\n    if (this.state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    }\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  updateState (e) {\n    console.log('Update state: ', e.target);\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n      // this.connect();\n    } else {\n      this.setAttribute('state', 'off');\n      this.disconnectCb();\n    }\n  }\n\n  portsCb (data) {\n    console.log('ports ==> ', data);\n    const event = new CustomEvent('boardPorts',\n      { detail: data }\n    );\n    window.dispatchEvent(event);\n  }\n\n  getBoardType () {\n    const elem = this.shadowRoot.getElementById('board-type');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    return elem.options[selectedIndex].value;\n  }\n\n  connectCb (boardData) {\n    console.log('connectCb  received ', boardData);\n    let boards = window.boards;\n    this.board = boardData;\n\n    if (boards && boards[this.getAttribute('board-name')] != null) {\n      console.log('connectCb already board object in window');\n      const event = new CustomEvent('boardConnected',\n        {\n          detail: this.board,\n          type: this.getBoardType()\n        }\n      );\n      window.dispatchEvent(event);\n      const self = this;\n      console.log('Board is ', this.board);\n      if (this.board !== null) {\n        this.board.ports().list(function (data) {\n          self.portsCb(data);\n        });\n      }\n    } else {\n      boards = {};\n      boards[this.getAttribute('board-name')] = this.board;\n      window.boards = boards;\n      console.log('boards: ', window.boards);\n      console.log('connectCb new board added', this.board);\n      // create and dispatch the event\n      const event = new CustomEvent('boardConnected',\n        {\n          detail: this.board,\n          type: this.getBoardType()\n        }\n      );\n      window.dispatchEvent(event);\n      const self = this;\n      console.log('Board is ', this.board);\n      if (this.board !== null) {\n        this.board.ports().list(function (data) {\n          self.portsCb(data);\n        });\n      }\n    }\n    // console.log(window.boards, this.getAttribute('board-name'));\n    // eslint-disable-next-line no-unused-expressions\n    window[this.getAttribute('onConnected')];\n    console.log(this.shadowRoot.querySelector('#boardstatus').innerHTML = 'Connected');\n  }\n\n  disconnectCb () {\n    console.log('disconnected cb');\n    const boards = window.boards || {};\n    if (boards) {\n      const board = boards[this.getAttribute('board-name')];\n      const event = new CustomEvent('boardDisConnected',\n        {\n          detail: board,\n          type: this.getBoardType()\n        }\n      );\n      window.dispatchEvent(event);\n      delete boards[this.getAttribute('board-name')];\n    }\n    this.board = null;\n    this.getAttribute('onDisConnected') && window[this.getAttribute('onDisConnected')]();\n\n    console.log(this.shadowRoot.querySelector('#boardstatus').innerHTML = 'Disconnected');\n  }\n\n  connect () {\n    const elem = this.shadowRoot.getElementById('comport');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const cName = elem.options[selectedIndex].value;\n\n    // var board = window.boards && window.boards[this.getAttribute('board-name')]; //TODO change get it dynamically\n    const self = this;\n    console.log('CALLED Connect METHOD', cName, this.getAttribute('board-type'));\n    const loadingIcon = '<div class=\"loader\"></div> ' + cName;\n    this.shadowRoot.querySelector('#boardstatus').innerHTML = loadingIcon;\n    console.log('set the loading icon');\n    const commName = cName || '';\n    const bType = self.getAttribute('board-type') || '';\n    console.log('creating the board', commName, bType);\n    this.board = p5.board(commName, bType, function (boardData) { self.connectCb(boardData); }, function () { self.disconnectCb(); });\n    console.log('=========> this.board', this.board);\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#comport').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#board-type').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) {});\n\n    window.removeEventListener('boardConnected', function (e) {});\n    window.removeEventListener('boardDisConnected', function (e) {});\n  }\n\n  connectedCallback () {\n    console.log('Board Connected callback');\n    const self = this;\n    this.shadowRoot.querySelector('#comport').addEventListener('change', function (e) {\n      self.updateComPort(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardName(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-type').addEventListener('change', function (e) {\n      self.updateBoardType(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.updateState(e);\n    }, false);\n    const serial = new p5.serial();\n    serial.list(function (data) { self.createCOMPort(data); });\n    // console.log(serial.list(self.createCOMPort));\n  }\n\n  createCOMPort (data) {\n    console.log('Create comport: ', data, this);\n    if (data.length === 0) {\n      this.shadowRoot.getElementById('comport').innerHTML = \"<option value='simulated'>simulated</option>\";\n      this.boardType = 'simulated';\n    } else {\n      let comOptions = '';\n      for (let i = 0; i < data.length; i++) {\n        console.log('portName', data[i].portName);\n        comOptions += \"<option value='\" + data[i].portName + \"'>\" + data[i].portName + '</option>';\n      }\n\n      this.shadowRoot.getElementById('comport').innerHTML = comOptions;\n    }\n  }\n\n  updateComPort (e) {\n    console.log('comport', e.target.value, this);\n    this.setAttribute('comport', e.target.value);\n    // this.connect();\n  }\n\n  updateBoardName (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateBoardType (e) {\n    console.log('board-type', e.target.value);\n    this.setAttribute('board-type', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n        this.connect();\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n      }\n    }\n  }\n}\n","import { QtBoard } from './qtboard.js';\nif (!window.customElements.get('qt-board')) {\n  window.customElements.define('qt-board', QtBoard);\n}\n","export const QtBLEConstants = {\n  SERVICE: '1011',\n  APDS: '00001001-0000-1000-8000-00805f9b34fb',\n  GAS: '00001002-0000-1000-8000-00805f9b34fb',\n  IR: '00001003-0000-1000-8000-00805f9b34fb',\n  LDR: '00001004-0000-1000-8000-00805f9b34fb',\n  LS: '00001005-0000-1000-8000-00805f9b34fb',\n  TEMP: '00001006-0000-1000-8000-00805f9b34fb',\n  US: '00001007-0000-1000-8000-00805f9b34fb',\n  MPU: '00001008-0000-1000-8000-00805f9b34fb',\n  ARGB: '00001009-0000-1000-8000-00805f9b34fb',\n  BUZZER: '0000100a-0000-1000-8000-00805f9b34fb',\n  DISPLAY: '0000100b-0000-1000-8000-00805f9b34fb',\n  LED: '0000100c-0000-1000-8000-00805f9b34fb',\n  MOTOR: '0000100d-0000-1000-8000-00805f9b34fb',\n  PUMPMOTOR: '0000100e-0000-1000-8000-00805f9b34fb',\n  RGB: '0000100f-0000-1000-8000-00805f9b34fb',\n  SERVO: '00001010-0000-1000-8000-00805f9b34fb',\n  JS: '00001012-0000-1000-8000-00805f9b34fb',\n  TOF: '00001013-0000-1000-8000-00805f9b34fb'\n};\n","// Copyright (c) 2018 p5ble\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\nexport default function callCallback (promise, callback) {\n  if (callback) {\n    promise\n      .then((result) => {\n        callback(undefined, result);\n        return result;\n      })\n      .catch((error) => {\n        console.log(error.stack);\n        callback(error);\n        return error;\n      });\n  }\n  return promise;\n}\n","// Copyright (c) 2018 p5ble\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\nexport default function parseData (data, t, encoding) {\n  const type = t ? t.toLowerCase() : 'unit8';\n  let result;\n  let decoder;\n  switch (type) {\n    case 'unit8':\n      result = data.getUint8(0);\n      break;\n\n    case 'uint16':\n      result = data.getUint16(0);\n      break;\n\n    case 'uint32':\n      result = data.getUint32(0);\n      break;\n\n    case 'int8':\n      result = data.getInt8(0);\n      break;\n\n    case 'int16':\n      result = data.getInt16(0);\n      break;\n\n    case 'int32':\n      result = data.getInt32(0);\n      break;\n\n    case 'float32':\n      result = data.getFloat32(0, true); // littleEndian\n      break;\n\n    case 'float32-bigEndian':\n      result = data.getFloat32(0); // BigEndian\n      break;\n\n    case 'float64':\n      result = data.getFloat64(0, true); // littleEndian\n      break;\n\n    case 'float64-bigEndian':\n      result = data.getFloat64(0); // BigEndian\n      break;\n\n    case 'string':\n      // TODO: have the ability to choose different string encoding: like utf16\n      decoder = new TextDecoder(encoding || 'utf8');\n      result = decoder.decode(data).trim();\n      break;\n\n    case 'custom':\n      // let the user do the parsing\n      result = data;\n      break;\n\n    default:\n      result = data.getUint8(0);\n      break;\n  }\n  return result;\n}\n","import { QtBLEConstants } from './bleconstants.js';\nimport callCallback from './utils/callcallback.js';\nimport parseData from './utils/parseData.js';\n\n/**\n * See {@link QtBLE}\n * {@link QtBLE internal class}.\n */\nexport class QtBLE {\n  constructor () {\n    this.device = null;\n    this.server = null;\n    this.service = null;\n    this.characteristics = [];\n    this.handleNotifications = null;\n    this.pinState = { 32: 'LOW', 33: 'LOW', 23: 'LOW', 12: 'LOW', 27: 'LOW' };\n    this.BreakException = {};\n  }\n\n  /**\n   * connect to a service uuid\n   *\n   * @param   {string/object}  serviceUuidOrOptions\n   * @param   {function}  callback\n   *\n   */\n  connect (serviceUuidOrOptions, callback) {\n    let options = {};\n    let serviceUuid;\n    console.log('connect method with arg', typeof serviceUuidOrOptions, serviceUuidOrOptions);\n    if (typeof serviceUuidOrOptions === 'string') {\n      serviceUuid = serviceUuidOrOptions.toLowerCase();\n      options = {\n        // acceptAllDevices: true,\n        // filters: [{namePrefix: \"qtble\"}]\n        filters: [{\n          services: [serviceUuid]\n        }]\n      };\n    } else if (typeof serviceUuidOrOptions === 'object' && serviceUuidOrOptions.filters) {\n      const servicesArray = serviceUuidOrOptions.filters.find(f => f.services);\n      if (servicesArray && servicesArray.services && servicesArray.services[0]) {\n        serviceUuid = servicesArray.services[0].toLowerCase();\n        options.filters = serviceUuidOrOptions.filters.map((f) => {\n          if (f.services) {\n            const newF = {};\n            newF.services = f.services.map(s => s.toLowerCase());\n            return newF;\n          }\n          return f;\n        });\n      } else {\n        console.error('Please pass an option object in this format: options = { filters: [{ services: [serviceUuid] }]} ');\n      }\n    } else {\n      console.error('Please pass in a serviceUuid string or option object, e.g. options = { filters: [{ services: [serviceUuid] }]} ');\n    }\n\n    console.log('Requesting Bluetooth Device...', options, navigator, navigator.bluetooth);\n\n    return callCallback(navigator.bluetooth.requestDevice(options)\n      .then((device) => {\n        this.device = device;\n        console.log(`Got device ${device.name}`);\n        return device.gatt.connect();\n      })\n      .then((server) => {\n        this.server = server;\n        console.log('Getting Service...');\n        return server.getPrimaryService(serviceUuid);\n      })\n      .then((service) => {\n        this.service = service;\n        console.log('Getting Characteristics...');\n        return service.getCharacteristics();\n      })\n      .then((characteristics) => {\n        this.characteristics = characteristics;\n        console.log('Got Characteristic', characteristics);\n        return characteristics;\n      })\n      .catch((error) => {\n        console.error(`Error: ${error}`);\n      }), callback);\n  }\n\n  /**\n   * getCharacteristics print the characteristics for service\n   *\n   * @param   uuid string\n   *\n   */\n  getCharacteristics (uuid) {\n    console.log(this.findAllMethods(this.service));\n    console.log(JSON.stringify(this.service));\n    this.service.getCharacteristics(uuid).then((characteristics) => {\n      console.log('Got Characteristic', characteristics);\n    }).catch((error) => {\n      console.error(`Error: ${error}`);\n    });\n  }\n\n  findAllMethods (obj) {\n    return Object.getOwnPropertyNames(obj).filter(function (property) {\n      return typeof obj[property] === 'function';\n    });\n  }\n\n  delayPromise (ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async read (characteristic, dataTypeOrcallback, cb) {\n    let callback;\n    let dataType;\n    if (typeof dataTypeOrcallback === 'function') {\n      callback = dataTypeOrcallback;\n    } else if (typeof dataTypeOrcallback === 'string') {\n      dataType = dataTypeOrcallback;\n    }\n    if (typeof cb === 'function') {\n      callback = cb;\n    }\n\n    if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n    const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n    if (!validChar) return console.error('The characteristic does not exist.');\n    try {\n      // var data = await characteristic.readValue();\n      // var pData = parseData(data, dataType);\n      // callback(undefined, pData);\n      callCallback(characteristic.readValue().then(value => parseData(value, dataType)), callback);\n    } catch (error) {\n      console.log(error.stack);\n    }\n\n    // return callCallback(characteristic.readValue()\n    //   .then(value => parseData(value, dataType)), callback);\n  }\n\n  /**\n   * writeWithRetries write to ble with retries with response\n   *\n   * @param   characteristic\n   * @param   value\n   * @param   leftTries\n   *\n   */\n  writeWithRetries (characteristic, inputValue, leftTries) {\n    console.log('writeWithRetries inside', leftTries);\n    if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n    const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n    if (!validChar) return console.error('The characteristic does not exist.');\n    const bufferToSend = new Uint8Array(inputValue);\n    return characteristic.writeValueWithoutResponse(bufferToSend)\n      .catch(error => {\n        leftTries--;\n        if (leftTries > 0) {\n          this.delayPromise(500);\n          return this.writeWithRetries(characteristic, inputValue, leftTries);\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  concatTypedArrays (a, b) { // a, b TypedArray of same type\n    const c = new (a.constructor)(a.length + b.length);\n    c.set(a, 0);\n    c.set(b, a.length);\n    return c;\n  }\n\n  concatBytes (ui8a, byte) {\n    const b = new Uint8Array(1);\n    b[0] = byte;\n    return this.concatTypedArrays(ui8a, b);\n  }\n\n  /**\n   * write write values without response\n   *\n   * @param   characteristic\n   * @param   inputValue\n   *\n   */\n  write (characteristic, inputValue) {\n    if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n    const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n    if (!validChar) return console.error('The characteristic does not exist.');\n\n    const bufferToSend = new Uint8Array(inputValue);\n\n    console.log(`Writing ${bufferToSend} to Characteristic...`);\n\n    try {\n      characteristic.writeValueWithoutResponse(bufferToSend)\n        .catch(() => {\n          console.log('DOMException: GATT operation already in progress.');\n          return Promise.resolve()\n            .then(() => this.delayPromise(500))\n            .then(() => { characteristic.writeValueWithoutResponse(bufferToSend); });\n        });\n    } catch (error) {\n      return this.writeWithRetries(characteristic, inputValue, 2);\n    }\n  }\n\n  /**\n   * startNotifications start the notification for characteristics\n   *\n   * @param   characteristic\n   * @param   onData callback\n   * @param   dataType\n   *\n   */\n  async startNotifications (characteristic, onData, dataType) {\n    if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n    const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n    if (!validChar) return console.error('The characteristic does not exist.');\n\n    let buffer = '';\n    this.handleNotifications = (event) => {\n      const { value } = event.target;\n      const pData = parseData(value, dataType);\n      for (let index = 0; index < pData.length; index++) {\n        const char = pData[index];\n        if (char === String.fromCharCode(2)) { // start of text\n          buffer = '';\n        } else if (char === String.fromCharCode(3)) { // end of text\n          onData(buffer);\n        } else {\n          buffer = buffer + char;\n        }\n      }\n    };\n    await characteristic.startNotifications();\n\n    characteristic.addEventListener('characteristicvaluechanged', this.handleNotifications);\n    console.log('> Notifications started', characteristic.uuid);\n    return true;\n  }\n\n  /**\n   * stopNotifications stop Notification\n   *\n   * @param   characteristic\n   *\n   */\n  async stopNotifications (characteristic) {\n    if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n    const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n    if (!validChar) return console.error('The characteristic does not exist.');\n\n    try {\n      await characteristic.stopNotifications();\n\n      if (this.handleNotifications) {\n        console.log('> Notifications stopped');\n        return characteristic.removeEventListener('characteristicvaluechanged', this.handleNotifications);\n      }\n    } catch (error) {\n      return console.error(`Error: ${error}`);\n    }\n  }\n\n  /**\n   * disconnect disconnect the ble\n   *\n   */\n  disconnect () {\n    if (!this.device) return;\n    console.log('Disconnecting from Bluetooth Device...');\n    if (this.device.gatt.connected) {\n      this.device.gatt.disconnect();\n    } else {\n      console.log('> Bluetooth Device is already disconnected');\n    }\n  }\n\n  /**\n   * onDisconnected event\n   *\n   * @param   handleDisconnected\n   *\n   */\n  onDisconnected (handleDisconnected) {\n    if (!this.device) return console.error('There is no device connected.');\n    return this.device.addEventListener('gattserverdisconnected', handleDisconnected);\n  }\n\n  /**\n   * isConnected\n   *  true/false\n   */\n  isConnected () {\n    if (!this.device) return false;\n    if (this.device.gatt.connected) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * [ledOn LED On]\n   *\n   * @param   portNumber\n   *\n   */\n  ledOn (portNumber) {\n    const self = this;\n    if (this.blink) {\n      clearInterval(this.blink);\n    }\n    for (let index = 0; index < this.characteristics.length; index++) {\n      const element = this.characteristics[index];\n      if (element.uuid === QtBLEConstants.LED) {\n        const commandJson = '{\"s\":{\"s\":1,\"v\":512,\"p\":' + portNumber + '}}\\0';\n        const buffer = self.convertToArray(commandJson);\n        this.write(element, buffer);\n        break;\n      }\n    }\n  }\n\n  /**\n   * ledOff led off\n   *\n   * @param   portNumber\n   *\n   */\n  ledOff (portNumber) {\n    const self = this;\n    if (this.blink) {\n      clearInterval(this.blink);\n    }\n\n    // this.characteristics.forEach(element => {\n    for (let index = 0; index < this.characteristics.length; index++) {\n      const element = this.characteristics[index];\n      if (element.uuid === QtBLEConstants.LED) {\n        const commandJson = '{\"s\":{\"s\":0,\"v\":0,\"p\":' + portNumber + '}}\\0';\n        const buffer = self.convertToArray(commandJson);\n        this.write(element, buffer);\n        break;\n      }\n    }\n  }\n\n  /**\n   * ledBlink blinking led\n   *\n   * @param   portNumber\n   * @param   blinkInterval\n   *\n   */\n  ledBlink (portNumber, blinkInterval) {\n    const self = this;\n\n    if (this.blink) {\n      clearInterval(this.blink);\n    }\n    for (let index = 0; index < this.characteristics.length; index++) {\n      const element = this.characteristics[index];\n      console.log('INSIDE ledBlink', element.uuid, blinkInterval);\n      if (element.uuid === QtBLEConstants.LED) {\n        this.blink = setInterval(function () {\n          console.log('Inside blinking ');\n          if (self.pinState[portNumber] === 'LOW') {\n            const commandJson = '{\"s\":{\"s\":1,\"v\":512,\"p\":' + portNumber + '}}\\0';\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n            self.pinState[portNumber] = 'HIGH';\n          } else {\n            const commandJson = '{\"s\":{\"s\":0,\"v\":0,\"p\":' + portNumber + '}}\\0';\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n            self.pinState[portNumber] = 'LOW';\n          }\n        }, blinkInterval);\n        break;\n      }\n    }\n  }\n\n  /**\n   * stopMotor stop motor\n   *\n   * @param   portNumber\n   *\n   */\n  stopMotor (portNumber) {\n    const self = this;\n    try {\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.MOTOR) {\n          const commandJson = '{\"s\":{\"s\":' + Number(0) + ',\"d\":0,\"p\":' + portNumber + '}}\\0';\n          const buffer = self.convertToArray(commandJson);\n          this.write(element, buffer);\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * runMotor\n   *\n   * @param   portNumber\n   * @param   speed\n   * @param   direction\n   *\n   */\n  runMotor (portNumber, speed, direction) {\n    if (typeof (direction) === 'undefined' && direction === null) {\n      direction = 'clockwise';\n    }\n    const self = this;\n    try {\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.MOTOR) {\n          if (direction === 'anticlockwise') {\n            const commandJson = '{\"s\":{\"s\":' + Number(speed * 4) + ',\"d\":0,\"p\":' + portNumber + '}}\\0';\n            console.log('anticlockwise', commandJson);\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n          } else if (direction === 'clockwise') {\n            const commandJson = '{\"s\":{\"s\":' + Number(speed * 4) + ',\"d\":1,\"p\":' + portNumber + '}}\\0';\n            console.log('clockwise', commandJson);\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n          }\n          console.log('runMotor', portNumber, direction, 'speed => ', speed);\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * runPumpMotor run pump motor\n   *\n   * @param   portNumber\n   * @param   speed\n   * @param   direction\n   *\n   */\n  runPumpMotor (portNumber, speed, direction) {\n    const self = this;\n\n    try {\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.PUMPMOTOR) {\n          if (direction === 'clockwise') {\n            const commandJson = '{\"s\":{\"s\":' + Number(speed * 4) + ',\"d\":1,\"p\":' + portNumber + '}}\\0';\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n          }\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * stopPumpMotor stop the motor\n   *\n   * @param   portNumber\n   *\n   */\n  stopPumpMotor (portNumber) {\n    const self = this;\n    try {\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.PUMPMOTOR) {\n          const commandJson = '{\"s\":{\"s\":' + Number(0) + ',\"d\":0,\"p\":' + portNumber + '}}\\0';\n          const buffer = self.convertToArray(commandJson);\n          this.write(element, buffer);\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * writeARGB description\n   * @example {s:{\"p\":4,\"ps\":[1,2,3,4],\"r\":255,\"g\":128,:\"b\":128}}\n   * @param   portNumber\n   * @param   state\n   * @param   index\n   * @param   red\n   * @param   green\n   * @param   blue\n   *\n   */\n  writeARGB (portNumber, state, onIndexesStr, offIndexesStr, red, green, blue) {\n    const self = this;\n    try {\n      console.log('writeARGB for port', portNumber, state, red, green, blue);\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.ARGB) {\n          if (offIndexesStr !== '') {\n            const commandJson = '{\"s\":{\"p\":' + portNumber + ',\"ps\":[' + offIndexesStr + '],\"cl\":true}}\\0';\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n          }\n          if (onIndexesStr !== '') {\n            const commandJson = '{\"s\":{\"p\":' + portNumber + ',\"ps\":[' + onIndexesStr + '],\"r\":' + red + ',\"g\":' + green + ',\"b\":' + blue + ',\"d\":true}}\\0';\n            const buffer = self.convertToArray(commandJson);\n            self.write(element, buffer);\n          }\n\n          // throw self.BreakException;\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * buzz\n   * @example {\"s\":{\"p\":5,\"v\":2,\"s\":2}} buzz for 2 seconds\n   * @param   portNumber\n   * @param   state\n   * @param   interval\n   *\n   */\n  buzz (portNumber, state, interval) {\n    const self = this;\n    try {\n      console.log('buzz for port', portNumber, state, interval);\n      let value = 0;\n      switch (state) {\n        case 'on':\n          value = 1;\n          break;\n        case 'off':\n          value = 0;\n          break;\n        case 'buzz':\n          value = 2;\n          break;\n      }\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.BUZZER) {\n          const commandJson = '{\"s\":{\"p\":' + portNumber + ',\"v\":' + value + ',\"s\":' + Number(interval) + '}}\\0';\n          const buffer = self.convertToArray(commandJson);\n          self.write(element, buffer);\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * servoSweep description\n   * @example {\"s\": {\"p\": 1, \"t\": \"s\", \"sp\": 20, \"ep\": 90,\"st\":10, \"d\":0.05 } }\n   * sweep from 20 to 90 by 10 steps at atime with delay of 0.05 sec\n   * @param   portNumber\n   * @param   start\n   * @param   end\n   *\n   */\n  servoSweep (portNumber, start, end) {\n    const self = this;\n    try {\n      console.log('servoSweep port', portNumber, 'start', start, 'end', end);\n      for (let index = 0; index < this.characteristics.length; index++) {\n        const element = this.characteristics[index];\n        if (element.uuid === QtBLEConstants.SERVO) {\n          const commandJson = '{\"s\": {\"p\": ' + portNumber + ', \"t\": \"s\", \"sp\": ' + start + ', \"ep\": ' + end + ' } }\\0';\n          const buffer = self.convertToArray(commandJson);\n          this.write(element, buffer);\n          break;\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * writeAPDS description\n   * @example {\"e\":[\"g\",\"p\",\"l\"]}\n   * @param   newState\n   * @param   property\n   *\n   */\n  writeAPDS (newState, property) {\n    console.log('APDS', newState, property);\n    const self = this;\n    try {\n      if (this.isConnected()) {\n        for (let index = 0; index < this.characteristics.length; index++) {\n          const element = this.characteristics[index];\n          if (element.uuid === QtBLEConstants.APDS) {\n            if (newState) {\n              let commandJson = '{}';\n              switch (property) {\n                case 'color':\n                {\n                  commandJson = '{\"e\": { \"l\": true} }\\0';\n                  break;\n                }\n                case 'proximity':\n                {\n                  commandJson = '{\"e\": { \"p\": true} }\\0';\n                  break;\n                }\n                case 'gesture':\n                {\n                  commandJson = '{\"e\": { \"g\": true} }\\0';\n                  break;\n                }\n              }\n              console.log(commandJson);\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            } else {\n              let commandJson = '{}';\n              switch (property) {\n                case 'color':\n                {\n                  commandJson = '{\"d\": { \"l\": true} }\\0';\n                  break;\n                }\n                case 'proximity':\n                {\n                  commandJson = '{\"d\": { \"p\": true} }\\0';\n                  break;\n                }\n                case 'gesture':\n                {\n                  commandJson = '{\"d\": { \"g\": true} }\\0';\n                  break;\n                }\n              }\n              console.log(commandJson);\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            }\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * writeMPU\n   * @example {\"e\":[\"g\",\"a\",\"t\"]}\n   * @param   newState\n   * @param   property\n   *\n   */\n  writeMPU (newState, property) {\n    console.log('MPU', newState, property);\n    const self = this;\n    try {\n      if (this.isConnected()) {\n        for (let index = 0; index < this.characteristics.length; index++) {\n          const element = this.characteristics[index];\n          if (element.uuid === QtBLEConstants.MPU) {\n            if (newState) {\n              let commandJson = '{}';\n              switch (property) {\n                case 'mpu':\n                {\n                  commandJson = '{\"e\": { \"g\": true,\"a\":true,\"t\":true} }\\0';\n                  break;\n                }\n              }\n\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            } else {\n              let commandJson = '{}';\n              switch (property) {\n                case 'mpu':\n                {\n                  commandJson = '{\"d\": { \"g\": true,\"a\":true,\"t\":true} }\\0';\n                  break;\n                }\n              }\n\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            }\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * writeUS description\n   * @example {\"e\":{\"p\":1}}\n   * @param   newState\n   * @param   property\n   *\n   */\n  writeUS (newState, port) {\n    console.log('US', newState, port);\n    const self = this;\n    try {\n      if (this.isConnected()) {\n        for (let index = 0; index < this.characteristics.length; index++) {\n          const element = this.characteristics[index];\n          if (element.uuid === QtBLEConstants.US) {\n            if (newState) {\n              let commandJson = '{}';\n              commandJson = '{\"e\": { \"p\":' + port + ' }\\0';\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            } else {\n              let commandJson = '{}';\n              commandJson = '{\"d\": { \"p\":' + port + ' }\\0';\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            }\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  /**\n   * writeTOF description\n   * @example {\"e\":{\"p\":1}}\n   * @param   newState\n   * @param   property\n   *\n   */\n  writeTOF (newState, port) {\n    console.log('TOF', newState, port);\n    const self = this;\n    try {\n      if (this.isConnected()) {\n        for (let index = 0; index < this.characteristics.length; index++) {\n          const element = this.characteristics[index];\n          if (element.uuid === QtBLEConstants.TOF) {\n            if (newState) {\n              let commandJson = '{}';\n              commandJson = '{\"e\": { \"p\":' + port + ' }\\0';\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            } else {\n              let commandJson = '{}';\n              commandJson = '{\"d\": { \"p\":' + port + ' }\\0';\n              const buffer = self.convertToArray(commandJson);\n              this.write(element, buffer);\n            }\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      if (e !== self.BreakException) throw e;\n    }\n  }\n\n  convertToArray (msg) {\n    const arr = [];\n    for (let i = 0; i < msg.length; i++) {\n      arr.push(msg.charCodeAt(i));\n    }\n    arr.push();\n    return arr;\n  }\n}\n","import { QtBLE } from './ble.js';\n/* eslint-disable new-cap */\nimport { QtBLEConstants } from './bleconstants.js';\nconst boardtemplate = document.createElement('template');\n\nboardtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n<style>\n\n  .toggle-checkbox:checked {\n        @apply: right-0 border-green-400;\n        right: 0;\n        border-color: #68D391;\n    }\n    .toggle-checkbox:checked + .toggle-label {\n        @apply: bg-green-400;\n        background-color: #68D391;\n    }\n    .loader {\n        border: 5px solid #f3f3f3; /* Light grey */\n        border-top: 5px solid green; /* Blue */\n        border-radius: 50%;\n        width: 30px;\n        height: 30px;\n        animation: spin 2s linear infinite;\n      }\n\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n</style>\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto p-4\" style=\"display: block; background-color:#33CC99\">\n  <div class=\"grid grid-cols-1 gap-2\">\n    <div class=\"box-content rounded-md h-auto\" style=\"background-color:#FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">QtBOARD BLE</p>\n    </div>\n  </div>\n\n  <div class=\"flex flex-col gap-2\" style=\"display: block;\">\n    <div class=\"flex flex-row gap-x-16\">\n      <fieldset class=\"flex justify-center text-center\">\n        <legend class=\"font-bold\">Connect</legend>\n        <div class=\"relative inline-block w-16 mr-2 align-middle select-none transition duration-200 ease-in\">\n          <input type=\"checkbox\" id=\"state\" name=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n          <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n        </div>\n      </fieldset>\n      <div class=\"font-bold align-center text-justify\">\n        <p class=\"text-center\">State</p>\n        <p id=\"boardstatus\" class=\"py-2 text-center\">Off</p>\n      </div>\n      <button>\n        <legend class=\"font-bold\">Config</legend>\n        <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"></path></svg>\n      </button>\n    </div>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex flex-col gap-2\" style=\"display: block;\">\n    <div class=\"flex flex-row gap-x-3\">\n      <div class=\"font-bold align-center text-justify\">\n        <p class=\"text-center\">Type</p>\n        <select class=\"form-select rounded-md box-border\" style=\"width:70px; overflow:hidden\" id=\"board-type\">\n          <option value=\"qtneo\" selected>QtNEO</option>\n        </select>\n      </div>\n\n      <div class=\"font-bold align-center text-justify\">\n        <p class=\"text-center\">Name</p>\n        <input class=\"form-input rounded-md box-border\" style=\"width:110px\" id=\"board-name\" />\n      </div>\n\n      <div class=\"font-bold align-center text-justify\">\n        <p class=\"text-center\">UUID</p>\n        <input class=\"form-input rounded-md box-border\" style=\"width:130px\" id=\"service-uuid\" />\n      </div>\n    </div>\n  </div>\n</div>\n\n`;\n\n/**\n * qt-board-ble component\n *  {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/boardble.html Click Here for Tutorial}\n */\nexport class QtBoardBLE extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'board-type', 'type', 'board-name', 'name', 'service-uuid', 'uuid', 'ccs', 'state']; // required for v1\n  }\n\n  /**\n   * QtBoardBLE Constructor\n   * This component help us to communicate wit BLE boards\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.serviceUUIDTemplate = '0000xxxx-0000-1000-8000-00805f9b34fb';\n    this.shadowRoot.appendChild(boardtemplate.content.cloneNode(true));\n    console.log('board-type', this.getAttribute('board-type'), 'board-name', this.getAttribute('board-name'), 'service-uuid', this.getAttribute('service-uuid'));\n    this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#service-uuid').value = this.getAttribute('service-uuid');\n    this.connectionType = 'ble';\n    this.state = this.getAttribute('state'); // connect/disconnect\n    this.board = null;\n    this.blink = null;\n    if (this.state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    }\n    this.connected = false;\n  }\n\n  /**\n   * get the state of the connection\n   *\n   * @return  {String}  return connection status\n   */\n  get state () {\n    return this.getAttribute('state');\n  }\n\n  /**\n   * set the state to connect to attempt connection\n   *\n   * @param   {String}  newState  on/off\n   *\n   */\n  set state (newState) {\n    this.setAttribute('state', newState);\n  }\n\n  get type () {\n    return this.getAttribute('board-type');\n  }\n\n  /**\n   * set the board type\n   *\n   * @param   {String}  newType  qtneo\n   *\n   */\n  set type (newType) {\n    this.setAttribute('board-type', newType);\n  }\n\n  get name () {\n    return this.getAttribute('board-name');\n  }\n\n  /**\n   * set the board name\n   *\n   * @param   {String}  newName  ex:rccar\n   *\n   */\n  set name (newName) {\n    this.setAttribute('board-name', newName);\n  }\n\n  /**\n   * get the service UUID used to connect with this component\n   *\n   * @return  {String}  returns service uuid\n   */\n  get uuid () {\n    return this.getAttribute('service-uuid');\n  }\n\n  /**\n   * set the service uuid to connect with ble peripheral\n   *\n   * @param   {String}  service uuid to set to board component\n   *\n   */\n  set uuid (uuidStr) {\n    this.setAttribute('service-uuid', uuidStr);\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  /**\n   * set the ccs\n   *\n   * @param   {String} true or false\n   *\n   */\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  /**\n   * ccsShow config control simulation show\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  /**\n   * ccsHide config control simulation hide\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  updateState (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n  }\n\n  connectCb () {\n    let boards = window.boards;\n    if (boards && boards[this.getAttribute('board-name')] != null) {\n      console.log('connectCb already board object in window');\n      const board = {\n        name: this.getAttribute('board-name'),\n        type: this.getBoardType(),\n        board: this.board,\n        connectionType: this.connectionType\n      };\n      // create and dispatch the event\n      const event = new CustomEvent('boardConnected', { detail: board });\n      window.dispatchEvent(event);\n    } else {\n      boards = {};\n      boards[this.getAttribute('board-name')] = this.board;\n      window.boards = boards;\n      console.log('boards: ', window.boards);\n      const board = {\n        name: this.getAttribute('board-name'),\n        type: this.getBoardType(),\n        board: this.board,\n        connectionType: this.connectionType\n      };\n      // create and dispatch the event\n      const event = new CustomEvent('boardConnected', { detail: board });\n      window.dispatchEvent(event);\n    }\n    // eslint-disable-next-line no-unused-expressions\n    window[this.getAttribute('onConnected')];\n    this.shadowRoot.querySelector('#boardstatus').innerHTML = 'Connected';\n  }\n\n  onDisConnected () {\n    this.shadowRoot.querySelector('#state').checked = this.board.isConnected();\n    const boards = window.boards || {};\n    if (boards) {\n      const board = {\n        name: this.getAttribute('board-name'),\n        type: this.getBoardType(),\n        board: boards[this.getAttribute('board-name')]\n      };\n      const event = new CustomEvent('boardDisConnected', { detail: board });\n      window.dispatchEvent(event);\n      delete boards[this.getAttribute('board-name')];\n    }\n    this.board = null;\n    this.getAttribute('onDisConnected') && window[this.getAttribute('onDisConnected')]();\n    this.shadowRoot.querySelector('#boardstatus').innerHTML = 'Disconnected';\n  }\n\n  // handleNotification (value) {\n  //     console.log(\"handleNotification data: \", value);\n  //     try {\n  //         var obj = JSON.parse(value);\n  //         console.log(\"Notification data: \", obj);\n\n  //     } catch (err) {\n  //         console.log(\"errr\", err);\n  //     }\n  // }\n  characteristicsCB (error, characteristics) {\n    if (error) { console.log('characteristicsCB error: ', error); }\n\n    this.shadowRoot.querySelector('#state').checked = true;\n    this.connected = this.board.isConnected();\n    this.board.onDisconnected(this.onDisconnected);\n    // console.log(\"characteristics: \", characteristics);\n    if (characteristics && characteristics.length > 0) {\n      for (let index = 0; index < characteristics.length; index++) {\n        // console.log(characteristics[index].uuid);\n        switch (characteristics[index].uuid) {\n          case QtBLEConstants.APDS:\n            console.log('APDS ...');\n            break;\n          case QtBLEConstants.ARGB:\n            console.log('ARGB ...');\n            break;\n          case QtBLEConstants.BUZZER:\n            console.log('Buzzer ...');\n            break;\n          case QtBLEConstants.DISPLAY:\n            console.log('DISPLAY ...');\n            break;\n          case QtBLEConstants.GAS:\n            console.log('Gas ...');\n            break;\n          case QtBLEConstants.IR:\n            console.log('InfraRed ...');\n            break;\n          case QtBLEConstants.LDR:\n            console.log('LDR ...');\n            break;\n          case QtBLEConstants.LED:\n            console.log('LED ....');\n            break;\n          case QtBLEConstants.LS:\n            console.log('Limit Switch ...');\n            break;\n          case QtBLEConstants.MOTOR:\n            console.log('Motor ...');\n            break;\n          case QtBLEConstants.MPU:\n            console.log('MPU ...');\n            break;\n          case QtBLEConstants.PUMPMOTOR:\n            console.log('Pump Motor ...');\n            break;\n          case QtBLEConstants.RGB:\n            console.log('RGB ...');\n            break;\n          case QtBLEConstants.SERVO:\n            console.log('Servo ...');\n            break;\n          case QtBLEConstants.TEMP:\n            console.log('Temp ...');\n            break;\n          case QtBLEConstants.TOF:\n            console.log('TOF ...');\n            break;\n          case QtBLEConstants.US:\n            console.log('Ultra Sonic ...');\n            break;\n\n          default:\n            console.log('uuid no handle', characteristics[index].uuid);\n        }\n      }\n    }\n  }\n\n  getBoardType () {\n    const elem = this.shadowRoot.getElementById('board-type');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    return elem.options[selectedIndex].value;\n  }\n\n  /**\n   * connect method to connect to the ble board\n   * This will generate boardConnected event\n   */\n  connect () {\n    const cName = this.getBoardType();\n    const self = this;\n    if (cName === 'qtneo') {\n      let uuid = this.shadowRoot.querySelector('#service-uuid').value;\n\n      if (uuid === null) {\n        uuid = '1011';\n      }\n      const serviceUUID = this.serviceUUIDTemplate.replace('xxxx', uuid);\n      console.log('cName', cName, 'uuid', uuid, 'serviceUUID', serviceUUID);\n      this.board = new QtBLE();\n      this.board.connect(serviceUUID, function (err, chars) {\n        if (self.board.isConnected()) {\n          self.connectCb();\n          self.characteristicsCB(err, chars);\n        } else {\n          console.log(err);\n        }\n      });\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#board-type').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#service-uuid').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) { });\n    window.removeEventListener('boardConnected', function (e) { });\n    window.removeEventListener('boardDisConnected', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#service-uuid').value = this.getAttribute('service-uuid');\n\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardName(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-type').addEventListener('change', function (e) {\n      self.updateBoardType(e);\n    }, false);\n    this.shadowRoot.querySelector('#service-uuid').addEventListener('change', function (e) {\n      self.updateServiceUUID(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.updateState(e);\n    }, false);\n  }\n\n  updateBoardName (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateBoardType (e) {\n    this.setAttribute('board-type', e.target.value);\n  }\n\n  updateServiceUUID (e) {\n    this.setAttribute('service-uuid', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.connect();\n      } else {\n        // Disonnect to the device\n        this.board.disconnect();\n        // Check if board ble is connected\n        this.shadowRoot.querySelector('#state').checked = this.board.isConnected();\n      }\n    }\n  }\n}\n","import { QtBoardBLE } from './qtboardble.js';\nif (!window.customElements.get('qt-board-ble')) {\n  window.customElements.define('qt-board-ble', QtBoardBLE);\n}\n","import { setProperty } from '../util.js';\n\nconst qtledtemplate = document.createElement('template');\nqtledtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  input:checked + label {\n        background-color: LightSeaGreen;\n    }\n    .animationledon{\n        fill: rgb(255, 0,0);\n    }\n    .animationledoff{\n        fill: rgb(255, 255, 255);\n    }\n    .animationblink{\n        animation: ledchangeColor 1s infinite;\n    }\n    @keyframes ledchangeColor {\n        0% {\n            fill: rgb(255,0,255);\n        }\n        50%{\n            fill: rgb(0,0,0);\n        }\n        100% {\n            fill: rgb(255, 255, 0);\n        }\n    }\n</style>\n<div class=\"box-content rounded-md h-auto w-auto p-4\" id=\"ledmain\" style=\"display: block;background-color:#00CCFF\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">LED</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Control</legend>\n      <div class=\"inline-flex\" id=\"state\">\n        <input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-d\" />\n        <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-l\" for=\"on\">ON</label>\n        <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-d\" checked=\"checked\" />\n        <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer\" for=\"off\">OFF</label>\n        <input class=\"hidden\" type=\"radio\" id=\"blink\" value=\"blink\" name=\"state-d\" />\n        <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-r\" for=\"blink\">BLINK</label>\n      </div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <br />\n\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Interval</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"blink-interval\" value=\"100\"/>\n    </div>\n\n    <br />\n  </div>\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24 flex items-center\">\n      <svg style=\"margin: auto;\" width=\"95\" height=\"95\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path id=\"ledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n        <path id=\"ledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n        <path id=\"ledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n        <path id=\"ledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n        <path id=\"ledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n        <path id=\"Bulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n      </svg>\n    </div>\n  </div>\n</div>\n<br />\n<svg s-class=\"\" id=\"canvassimulation\" width=\"150\" height=\"150\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none\">\n  <path id=\"SimulationBulb_Ray_1\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"black\" />\n  <path id=\"SimulationBulb_Ray_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"black\" />\n  <path id=\"SimulationBulb_Ray_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"black\" />\n  <path id=\"SimulationBulb_Ray_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"black\" />\n  <path id=\"SimulationBulb_Ray_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"black\" />\n  <path id=\"SimulationBulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"black\" />\n</svg>\n\n`;\n/**\n * See {@link QtLED} webcomponent <qt-led>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/ledble.html|LED BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/led.html LED BlueTooth}.\n */\nexport class QtLED extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'simulation', 'ccs', 'width', 'height', 'rotate', 's-style', 's-class'];\n  }\n\n  /**\n   * LED constructor - Light Emitting Diode\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtledtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#blink-interval').value = this.getAttribute('blink-interval');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.state = this.getAttribute('state');\n    if (this.state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    }\n    this.ccs_state = this.getAttribute('ccs');\n    this.blinkInterval = null;\n    this.simBlinkInterval = null;\n    this.pinState = 'HIGH';\n    this.led(this.state);\n    this.ccs_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    this.setAttribute('s-style', newValue);\n  }\n\n  get class () {\n    return this.getAttribute('s-class');\n  }\n\n  set class (newValue) {\n    this.setAttribute('s-class', newValue);\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  togglePropsDisplay () {\n    this.shadowRoot.getElementById('props').classList.toggle('qt-led-props-hide');\n  }\n\n  updateStateValue (e) {\n    this.setAttribute('state', e.target.value);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('ledmain').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('ledmain').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * setBlinkInterval\n   *\n   * @param   int newValue in millis\n   *\n   */\n  setBlinkInterval (newValue) {\n    this.setAttribute('blink-interval', newValue);\n  }\n\n  getBlinkInterval (newValue) {\n    return this.getAttribute('blink-interval');\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  animateLed (state, newValue) {\n    if (this.shadowRoot.getElementById('canvassimulation').style.display === 'block') {\n      this.shadowRoot.getElementById('SimulationBulb_Ray_1').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb_Ray_2').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb_Ray_3').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb_Ray_4').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb_Ray_5').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb').setAttribute('class', newValue);\n    } else {\n      this.shadowRoot.getElementById('ledblink').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('ledblink_2').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('ledblink_3').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('ledblink_4').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('ledblink_5').setAttribute('class', newValue);\n      this.shadowRoot.getElementById('SimulationBulb').setAttribute('class', newValue);\n    }\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  /**\n   * @example\n   * led(\"on\")\n   *\n   * to change the state of LED - On/Off/Blink\n   * @param {*} newState - the state of the led\n   */\n  led (newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    const self = this;\n    if (this.blinkInterval) {\n      clearInterval(this.blinkInterval);\n    }\n    if (this.simBlinkInterval) {\n      clearInterval(this.simBlinkInterval);\n    }\n    if (board) {\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n      const boardType = this.getAttribute('boardType');\n      if (newState === 'on') {\n        if (boardType === 'qtneo' && board.isConnected()) {\n          board.ledOn(portNumber);\n        } else if (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32') {\n          // var pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'OUTPUT');\n          pin.write('HIGH');\n        } else {\n          console.log('unknown board', boardType);\n        }\n      } else if (newState === 'off') {\n        if (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32') {\n          pin.write('LOW');\n        } else if (boardType === 'qtneo' && board.isConnected()) {\n          board.ledOff(portNumber);\n        }\n      } else if (newState === 'blink') {\n        if (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32') {\n          this.blinkInterval = setInterval(function () {\n            if (this.pinState === 'LOW') {\n              this.pinState = 'HIGH';\n              pin.write('HIGH');\n            } else {\n              this.pinState = 'LOW';\n              pin.write('LOW');\n            }\n          }, this.getAttribute('blink-interval'));\n        } else if (boardType === 'qtneo' && board.isConnected()) {\n          const interval = parseInt(this.getAttribute('blink-interval'));\n          board.ledBlink(portNumber, interval);\n        }\n      }\n    }\n    if (newState === 'on') {\n      this.shadowRoot.querySelector('#on').checked = true;\n      this.animateLed('on', 'animationledon');\n      this.state = 'on';\n    } else if (newState === 'blink') {\n      this.state = 'blink';\n      this.shadowRoot.querySelector('#blink').checked = true;\n\n      this.simBlinkInterval = setInterval(function () {\n        if (this.simState === 'LOW') {\n          self.animateLed('blink', 'animationblink');\n          this.simState = 'HIGH';\n        } else {\n          self.animateLed('blink', 'animationblink');\n          this.simState = 'LOW';\n        }\n      }, this.getAttribute('blink-interval'));\n    } else {\n      this.shadowRoot.querySelector('#off').checked = true;\n      this.state = 'off';\n      this.animateLed('off', 'animationledoff');\n    }\n    this.state = newState;\n    this.executeOnStateChange(newState);\n    return true;\n  }\n\n  convertToArray (msg) {\n    const arr = [];\n    for (let i = 0; i < msg.length; i++) {\n      arr.push(msg.charCodeAt(i));\n    }\n    arr.push();\n    return arr;\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#blink-interval').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#blink-interval').addEventListener('change', function (e) {\n      self.updateBlinkIntervalValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.updateStateValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n\n    window.addEventListener('boardConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n      self.led(self.state);\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    let boardOptions = '';\n    for (const value in keys) {\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateBlinkIntervalValue (e) {\n    this.setAttribute('blink-interval', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  setWidth (value) {\n    this.getElementById('canvasled').style.width = value;\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'width') {\n      this.shadowRoot.getElementById('canvassimulation').style.width = newValue;\n    } else if (name === 'height') {\n      this.shadowRoot.getElementById('canvassimulation').style.height = newValue;\n    } else if (name === 'rotate') {\n      const temp = 'rotate(' + newValue + 'deg)';\n      this.shadowRoot.getElementById('canvassimulation').style.transform = temp;\n    } else if (name === 's-style') {\n      // const newCCS = newValue;\n    } else if (name === 's-class') {\n      // TODO: apply style class\n    } else {\n      if (oldValue !== newValue) {\n        this.led(newValue);\n      }\n    }\n  }\n}\nexport { setProperty };\n","import { QtLED } from './qtled.js';\nif (!window.customElements.get('qt-led')) {\n  window.customElements.define('qt-led', QtLED);\n}\n","const qtargbtemplate = document.createElement('template');\r\nqtargbtemplate.innerHTML = `\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\r\n<style>\r\n  input:checked + label {\r\n      background-color: LightSeaGreen;\r\n  }\r\n  .animationledon{\r\n      fill: rgb(255, 0,0);\r\n  }\r\n  .animationledoff{\r\n      fill: rgb(255, 255, 255);\r\n  }\r\n  .animationblink{\r\n      animation: ledchangeColor 1s infinite;\r\n  }\r\n  @keyframes ledchangeColor {\r\n      0% {\r\n          fill: rgb(255,0,255);\r\n      }\r\n      50%{\r\n          fill: rgb(0,0,0);\r\n      }\r\n      100% {\r\n          fill: rgb(255, 255, 0);\r\n      }\r\n  }\r\n</style>\r\n<div id=\"show-hide\" style=\"display: block\" class=\"bg-gradient-to-r from-blue-300 to-green-400 box-content rounded-md h-auto w-auto p-4\">\r\n  <div class=\"grid grid-cols-1 gap-4\">\r\n    <div class=\"bg-gradient-to-r from-red-400 via-pink-600 to-blue-300 box-content rounded-md h-auto w-full bg-yellow-400\">\r\n      <p class=\"text-2xl text-center font-sans font-bold\">ARGB</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex flex-wrap gap-3\">\r\n    <fieldset class=\"flex justify-center text-center\">\r\n      <legend class=\"font-bold\">Control</legend>\r\n      <div class=\"inline-flex\" id=\"state\"><input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-d\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-l\" for=\"on\">ON</label> <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-d\" checked=\"checked\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer\" for=\"off\">OFF</label></div>\r\n    </fieldset>\r\n    <button>\r\n      <legend class=\"font-bold\">Config</legend>\r\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\r\n    </button>\r\n    <button>\r\n      <legend class=\"font-bold\">Simulation</legend>\r\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\r\n    </button>\r\n  </div>\r\n  <br />\r\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\r\n    <div>\r\n      <legend class=\"font-bold\">Board</legend>\r\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\r\n        <option value=\"\" disabled selected>Select</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <legend class=\"font-bold\">Port</legend>\r\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:70px; overflow:hidden\">\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <legend class=\"font-bold\">Pin</legend>\r\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\r\n    </div>\r\n\r\n    <div>\r\n      <legend class=\"font-bold\">Red</legend>\r\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"r\" />\r\n      <span id=\"red_val\">127</span>\r\n    </div>\r\n    <div>\r\n      <legend class=\"font-bold\">Green</legend>\r\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"g\" />\r\n      <span id=\"green_val\">127</span>\r\n    </div>\r\n    <div>\r\n      <legend class=\"font-bold\">Blue</legend>\r\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"b\" />\r\n      <span id=\"blue_val\">127</span>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"grid grid-cols-4 gap-1\">\r\n      <label class=\"font-bold\">0<input type=\"checkbox\" value=\"0\" id=\"ind-0\" /></label>\r\n      <label class=\"font-bold\">1<input type=\"checkbox\" value=\"1\" id=\"ind-1\" /></label>\r\n      <label class=\"font-bold\">2<input type=\"checkbox\" value=\"2\" id=\"ind-2\" /></label>\r\n      <label class=\"font-bold\">3<input type=\"checkbox\" value=\"3\" id=\"ind-3\" /></label>\r\n      <label class=\"font-bold\">4<input type=\"checkbox\" value=\"4\" id=\"ind-4\" /></label>\r\n      <label class=\"font-bold\">5<input type=\"checkbox\" value=\"5\" id=\"ind-5\" /></label>\r\n      <label class=\"font-bold\">6<input type=\"checkbox\" value=\"6\" id=\"ind-6\" /></label>\r\n      <label class=\"font-bold\">7<input type=\"checkbox\" value=\"7\" id=\"ind-7\" /></label>\r\n    </div>\r\n  </div>\r\n  <br />\r\n\r\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\r\n    <div class=\"rounded-t bg-blue-500\">\r\n      <div class=\"relative py-3 px-2 flex\">\r\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\r\n        <!--<div class=\"absolute right-0 top-0 -mr-2 -mt-2 border cursor-pointer shadow-lg bg-white z-10 p-1 rounded-full p-2\">\r\n                <img src=\"https://image.flaticon.com/icons/svg/151/151882.svg\"/ class=\"w-2 h-2\">\r\n            </div>-->\r\n      </div>\r\n    </div>\r\n    <div class=\"flex flex-wrap content-center bg-gray-600 md:text-base text-sm border-b h-24\">\r\n      <svg style=\"display: block; margin: auto;\" width=\"400\" height=\"98\" viewBox=\"0 0 1285 594\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g id=\"Frame 2\">\r\n          <path id=\"group_0_1\" d=\"M137.021 245.936C132.268 245.874 128.372 249.669 128.31 254.421L128.083 271.617C128.021 276.37 131.816 280.266 136.568 280.328C141.321 280.391 145.217 276.596 145.279 271.844L145.506 254.647C145.568 249.895 141.773 245.999 137.021 245.936Z\" fill=\"null\" />\r\n          <path id=\"group_0_2\" d=\"M9.29504 149.661L26.4911 149.887C31.2435 149.95 35.1397 146.155 35.2022 141.403C35.2647 136.65 31.4698 132.754 26.7173 132.691L9.52131 132.465C4.76889 132.403 0.87269 136.198 0.810157 140.95C0.747624 145.702 4.54262 149.599 9.29504 149.661Z\" fill=\"null\" />\r\n          <path id=\"group_0_3\" d=\"M241.555 144.118C241.492 148.87 245.287 152.766 250.039 152.829L267.235 153.055C271.988 153.118 275.884 149.323 275.947 144.57C276.009 139.818 272.214 135.922 267.462 135.859L250.266 135.633C245.513 135.57 241.617 139.365 241.555 144.118Z\" fill=\"null\" />\r\n          <path id=\"group_0_4\" d=\"M58.4216 212.158C56.2217 212.129 54.0107 212.939 52.3093 214.597L39.9912 226.595C36.5884 229.909 36.5169 235.35 39.8313 238.753C43.1457 242.156 48.5866 242.227 51.9894 238.913L64.3075 226.915C67.7103 223.6 67.7819 218.159 64.4675 214.757C62.8103 213.055 60.6214 212.187 58.4215 212.158L58.4216 212.158Z\" fill=\"null\" />\r\n          <path id=\"group_0_5\" d=\"M222.533 216.836C220.876 215.135 218.687 214.266 216.487 214.237C214.287 214.208 212.076 215.019 210.375 216.676C206.972 219.991 206.9 225.432 210.215 228.835L222.213 241.153C225.527 244.555 230.968 244.627 234.371 241.313C237.774 237.998 237.845 232.557 234.531 229.154L222.533 216.836L222.533 216.836Z\" fill=\"null\" />\r\n          <path id=\"Bulb\" d=\"M35.5512 91.0959L52.7487 91.1083L52.7117 142.701C52.6777 190.112 91.2268 228.716 138.638 228.75C186.048 228.784 224.653 190.235 224.687 142.824L224.724 91.2316L241.921 91.2439C246.674 91.2474 250.523 87.4042 250.526 82.6514C250.53 77.8985 246.687 74.0498 241.934 74.0464L190.341 74.0094L190.372 31.0157C190.375 26.2628 186.532 22.4141 181.779 22.4107C177.027 22.4073 173.178 26.2505 173.174 31.0033L173.144 73.9971L104.354 73.9478L104.397 13.7565C104.4 9.00363 100.557 5.15494 95.8042 5.15153C91.0514 5.14813 87.2027 8.9913 87.1993 13.7441L87.1561 73.9354L35.5636 73.8984C30.8107 73.895 26.9621 77.7382 26.9586 82.491C26.9552 87.2438 30.7984 91.0925 35.5512 91.0959ZM207.526 91.2193L207.489 142.812C207.468 172.944 187.952 198.259 160.976 207.545C178.644 195.106 190.269 174.649 190.286 151.398L190.329 91.2069L207.526 91.2193Z\" fill=\"white\" />\r\n          <path id=\"group_1_1\" d=\"M473.021 240.936C468.268 240.874 464.372 244.669 464.31 249.421L464.083 266.617C464.021 271.37 467.816 275.266 472.568 275.328C477.321 275.391 481.217 271.596 481.279 266.844L481.506 249.647C481.568 244.895 477.773 240.999 473.021 240.936Z\" fill=\"null\" />\r\n          <path id=\"group_1_2\" d=\"M345.295 144.661L362.491 144.887C367.243 144.95 371.14 141.155 371.202 136.403C371.265 131.65 367.47 127.754 362.717 127.691L345.521 127.465C340.769 127.403 336.873 131.198 336.81 135.95C336.748 140.702 340.543 144.599 345.295 144.661Z\" fill=\"null\" />\r\n          <path id=\"group_1_3\" d=\"M577.555 139.118C577.492 143.87 581.287 147.766 586.039 147.829L603.235 148.055C607.988 148.118 611.884 144.323 611.947 139.57C612.009 134.818 608.214 130.922 603.462 130.859L586.266 130.633C581.513 130.57 577.617 134.365 577.555 139.118Z\" fill=\"null\" />\r\n          <path id=\"group_1_4\" d=\"M394.422 207.158C392.222 207.129 390.011 207.939 388.309 209.597L375.991 221.595C372.588 224.909 372.517 230.35 375.831 233.753C379.146 237.156 384.587 237.227 387.989 233.913L400.307 221.915C403.71 218.6 403.782 213.159 400.467 209.757C398.81 208.055 396.621 207.187 394.422 207.158L394.422 207.158Z\" fill=\"null\" />\r\n          <path id=\"group_1_5\" d=\"M558.533 211.836C556.876 210.135 554.687 209.266 552.487 209.237C550.287 209.208 548.076 210.019 546.375 211.676C542.972 214.991 542.9 220.432 546.215 223.835L558.213 236.153C561.527 239.555 566.968 239.627 570.371 236.313C573.774 232.998 573.845 227.557 570.531 224.154L558.533 211.836L558.533 211.836Z\" fill=\"null\" />\r\n          <path id=\"Bulb_2\" d=\"M371.551 86.0959L388.749 86.1083L388.712 137.701C388.678 185.112 427.227 223.716 474.638 223.75C522.048 223.784 560.653 185.235 560.687 137.824L560.724 86.2316L577.921 86.2439C582.674 86.2474 586.523 82.4042 586.526 77.6514C586.53 72.8985 582.686 69.0498 577.934 69.0464L526.341 69.0094L526.372 26.0157C526.375 21.2628 522.532 17.4141 517.779 17.4107C513.027 17.4073 509.178 21.2505 509.174 26.0033L509.144 68.9971L440.354 68.9478L440.397 8.75645C440.4 4.00363 436.557 0.154943 431.804 0.151534C427.051 0.148125 423.203 3.9913 423.199 8.74412L423.156 68.9354L371.564 68.8984C366.811 68.895 362.962 72.7382 362.959 77.491C362.955 82.2438 366.798 86.0925 371.551 86.0959ZM543.526 86.2193L543.489 137.812C543.468 167.944 523.952 193.259 496.976 202.545C514.644 190.106 526.269 169.649 526.286 146.398L526.329 86.2069L543.526 86.2193Z\" fill=\"white\" />\r\n          <path id=\"group_2_1\" d=\"M809.021 240.936C804.268 240.874 800.372 244.669 800.31 249.421L800.083 266.617C800.021 271.37 803.816 275.266 808.568 275.328C813.321 275.391 817.217 271.596 817.279 266.844L817.506 249.647C817.568 244.895 813.773 240.999 809.021 240.936Z\" fill=\"null\" />\r\n          <path id=\"group_2_2\" d=\"M681.295 144.661L698.491 144.887C703.244 144.95 707.14 141.155 707.202 136.403C707.265 131.65 703.47 127.754 698.717 127.691L681.521 127.465C676.769 127.403 672.873 131.198 672.81 135.95C672.748 140.702 676.543 144.599 681.295 144.661Z\" fill=\"null\" />\r\n          <path id=\"group_2_3\" d=\"M913.555 139.118C913.492 143.87 917.287 147.766 922.039 147.829L939.235 148.055C943.988 148.118 947.884 144.323 947.947 139.57C948.009 134.818 944.214 130.922 939.462 130.859L922.266 130.633C917.513 130.57 913.617 134.365 913.555 139.118Z\" fill=\"null\" />\r\n          <path id=\"group_2_4\" d=\"M730.422 207.158C728.222 207.129 726.011 207.939 724.309 209.597L711.991 221.595C708.589 224.909 708.517 230.35 711.831 233.753C715.146 237.156 720.587 237.227 723.989 233.913L736.308 221.915C739.71 218.6 739.782 213.159 736.468 209.757C734.81 208.055 732.621 207.187 730.422 207.158L730.422 207.158Z\" fill=\"null\" />\r\n          <path id=\"group_2_5\" d=\"M894.533 211.836C892.876 210.135 890.687 209.266 888.487 209.237C886.287 209.208 884.076 210.019 882.375 211.676C878.972 214.991 878.9 220.432 882.215 223.835L894.213 236.153C897.527 239.555 902.968 239.627 906.371 236.313C909.774 232.998 909.845 227.557 906.531 224.154L894.533 211.836L894.533 211.836Z\" fill=\"null\" />\r\n          <path id=\"Bulb_3\" d=\"M707.551 86.0959L724.749 86.1083L724.712 137.701C724.678 185.112 763.227 223.716 810.638 223.75C858.048 223.784 896.653 185.235 896.687 137.824L896.724 86.2316L913.921 86.2439C918.674 86.2474 922.523 82.4042 922.526 77.6514C922.53 72.8985 918.687 69.0498 913.934 69.0464L862.341 69.0094L862.372 26.0157C862.375 21.2628 858.532 17.4141 853.779 17.4107C849.027 17.4073 845.178 21.2505 845.175 26.0033L845.144 68.9971L776.354 68.9478L776.397 8.75645C776.4 4.00363 772.557 0.154943 767.804 0.151534C763.051 0.148125 759.203 3.9913 759.199 8.74412L759.156 68.9354L707.564 68.8984C702.811 68.895 698.962 72.7382 698.959 77.491C698.955 82.2438 702.798 86.0925 707.551 86.0959ZM879.526 86.2193L879.489 137.812C879.468 167.944 859.952 193.259 832.976 202.545C850.644 190.106 862.269 169.649 862.286 146.398L862.329 86.2069L879.526 86.2193Z\" fill=\"white\" />\r\n          <path id=\"group_3_1\" d=\"M1145.02 244.014C1140.27 243.952 1136.37 247.747 1136.31 252.499L1136.08 269.695C1136.02 274.447 1139.82 278.344 1144.57 278.406C1149.32 278.469 1153.22 274.674 1153.28 269.921L1153.51 252.725C1153.57 247.973 1149.77 244.077 1145.02 244.014Z\" fill=\"null\" />\r\n          <path id=\"group_3_2\" d=\"M1017.3 147.739L1034.49 147.965C1039.24 148.028 1043.14 144.233 1043.2 139.48C1043.26 134.728 1039.47 130.832 1034.72 130.769L1017.52 130.543C1012.77 130.48 1008.87 134.275 1008.81 139.028C1008.75 143.78 1012.54 147.676 1017.3 147.739Z\" fill=\"null\" />\r\n          <path id=\"group_3_3\" d=\"M1249.55 142.196C1249.49 146.948 1253.29 150.844 1258.04 150.907L1275.24 151.133C1279.99 151.196 1283.88 147.401 1283.95 142.648C1284.01 137.896 1280.21 134 1275.46 133.937L1258.27 133.711C1253.51 133.648 1249.62 137.443 1249.55 142.196Z\" fill=\"null\" />\r\n          <path id=\"group_3_4\" d=\"M1066.42 210.235C1064.22 210.206 1062.01 211.017 1060.31 212.674L1047.99 224.673C1044.59 227.987 1044.52 233.428 1047.83 236.831C1051.15 240.233 1056.59 240.305 1059.99 236.991L1072.31 224.992C1075.71 221.678 1075.78 216.237 1072.47 212.834C1070.81 211.133 1068.62 210.264 1066.42 210.235L1066.42 210.235Z\" fill=\"null\" />\r\n          <path id=\"group_3_5\" d=\"M1230.53 214.914C1228.88 213.213 1226.69 212.344 1224.49 212.315C1222.29 212.286 1220.08 213.097 1218.37 214.754C1214.97 218.069 1214.9 223.509 1218.21 226.912L1230.21 239.23C1233.53 242.633 1238.97 242.705 1242.37 239.39C1245.77 236.076 1245.85 230.635 1242.53 227.232L1230.53 214.914L1230.53 214.914Z\" fill=\"null\" />\r\n          <path id=\"Bulb_4\" d=\"M1041.7 89.0715L1058.89 89.0839L1058.86 140.676C1058.82 188.087 1097.37 226.692 1144.78 226.726C1192.19 226.76 1230.8 188.211 1230.83 140.8L1230.87 89.2072L1248.07 89.2196C1252.82 89.223 1256.67 85.3798 1256.67 80.627C1256.68 75.8742 1252.83 72.0255 1248.08 72.0221L1196.49 71.985L1196.52 28.9913C1196.52 24.2384 1192.68 20.3898 1187.93 20.3863C1183.17 20.3829 1179.32 24.2261 1179.32 28.9789L1179.29 71.9727L1110.5 71.9234L1110.54 11.7321C1110.55 6.97925 1106.7 3.13056 1101.95 3.12715C1097.2 3.12374 1093.35 6.96691 1093.35 11.7197L1093.3 71.911L1041.71 71.874C1036.96 71.8706 1033.11 75.7138 1033.1 80.4666C1033.1 85.2194 1036.94 89.0681 1041.7 89.0715ZM1213.67 89.1949L1213.64 140.787C1213.61 170.92 1194.1 196.235 1167.12 205.521C1184.79 193.081 1196.42 172.625 1196.43 149.374L1196.48 89.1826L1213.67 89.1949Z\" fill=\"white\" />\r\n          <path id=\"group_4_1\" d=\"M137.021 347.202C132.268 347.265 128.372 343.47 128.31 338.717L128.083 321.521C128.021 316.769 131.816 312.873 136.568 312.81C141.321 312.748 145.217 316.543 145.279 321.295L145.506 338.491C145.568 343.243 141.773 347.14 137.021 347.202Z\" fill=\"null\" />\r\n          <path id=\"group_4_2\" d=\"M9.29504 443.477L26.4911 443.251C31.2435 443.189 35.1397 446.984 35.2022 451.736C35.2647 456.488 31.4698 460.385 26.7173 460.447L9.52131 460.673C4.76889 460.736 0.87269 456.941 0.810157 452.189C0.747624 447.436 4.54262 443.54 9.29504 443.477Z\" fill=\"null\" />\r\n          <path id=\"group_4_3\" d=\"M241.555 449.021C241.492 444.268 245.287 440.372 250.039 440.31L267.235 440.083C271.988 440.021 275.884 443.816 275.947 448.568C276.009 453.321 272.214 457.217 267.462 457.279L250.266 457.506C245.513 457.568 241.617 453.773 241.555 449.021Z\" fill=\"null\" />\r\n          <path id=\"group_4_4\" d=\"M58.4216 380.981C56.2217 381.01 54.0107 380.199 52.3093 378.542L39.9912 366.544C36.5884 363.229 36.5169 357.789 39.8313 354.386C43.1457 350.983 48.5866 350.911 51.9894 354.226L64.3075 366.224C67.7103 369.538 67.7819 374.979 64.4675 378.382C62.8103 380.083 60.6214 380.952 58.4215 380.981L58.4216 380.981Z\" fill=\"null\" />\r\n          <path id=\"group_4_5\" d=\"M222.533 376.302C220.876 378.004 218.687 378.872 216.487 378.901C214.287 378.93 212.076 378.119 210.375 376.462C206.972 373.148 206.9 367.707 210.215 364.304L222.213 351.986C225.527 348.583 230.968 348.512 234.371 351.826C237.774 355.14 237.845 360.581 234.531 363.984L222.533 376.302L222.533 376.302Z\" fill=\"null\" />\r\n          <path id=\"Bulb_5\" d=\"M35.5512 502.043L52.7487 502.03L52.7117 450.438C52.6777 403.027 91.2268 364.423 138.638 364.389C186.048 364.355 224.653 402.904 224.687 450.315L224.724 501.907L241.921 501.895C246.674 501.891 250.523 505.734 250.526 510.487C250.53 515.24 246.687 519.089 241.934 519.092L190.341 519.129L190.372 562.123C190.375 566.876 186.532 570.725 181.779 570.728C177.027 570.731 173.178 566.888 173.174 562.135L173.144 519.142L104.354 519.191L104.397 579.382C104.4 584.135 100.557 587.984 95.8042 587.987C91.0514 587.991 87.2027 584.147 87.1993 579.395L87.1561 519.203L35.5636 519.24C30.8107 519.244 26.9621 515.4 26.9586 510.648C26.9552 505.895 30.7984 502.046 35.5512 502.043ZM207.526 501.919L207.489 450.327C207.468 420.194 187.952 394.879 160.976 385.594C178.644 398.033 190.269 418.49 190.286 441.74L190.329 501.932L207.526 501.919Z\" fill=\"white\" />\r\n          <path id=\"group_5_1\" d=\"M473.021 352.202C468.268 352.265 464.372 348.47 464.31 343.717L464.083 326.521C464.021 321.769 467.816 317.873 472.568 317.81C477.321 317.748 481.217 321.543 481.279 326.295L481.506 343.491C481.568 348.243 477.773 352.14 473.021 352.202Z\" fill=\"null\" />\r\n          <path id=\"group_5_2\" d=\"M345.295 448.477L362.491 448.251C367.243 448.189 371.14 451.984 371.202 456.736C371.265 461.488 367.47 465.385 362.717 465.447L345.521 465.673C340.769 465.736 336.873 461.941 336.81 457.189C336.748 452.436 340.543 448.54 345.295 448.477Z\" fill=\"null\" />\r\n          <path id=\"group_5_3\" d=\"M577.555 454.021C577.492 449.268 581.287 445.372 586.039 445.31L603.235 445.083C607.988 445.021 611.884 448.816 611.947 453.568C612.009 458.321 608.214 462.217 603.462 462.279L586.266 462.506C581.513 462.568 577.617 458.773 577.555 454.021Z\" fill=\"null\" />\r\n          <path id=\"group_5_4\" d=\"M394.422 385.981C392.222 386.01 390.011 385.199 388.309 383.542L375.991 371.544C372.588 368.229 372.517 362.789 375.831 359.386C379.146 355.983 384.587 355.911 387.989 359.226L400.307 371.224C403.71 374.538 403.782 379.979 400.467 383.382C398.81 385.083 396.621 385.952 394.422 385.981L394.422 385.981Z\" fill=\"null\" />\r\n          <path id=\"group_5_5\" d=\"M558.533 381.302C556.876 383.004 554.687 383.872 552.487 383.901C550.287 383.93 548.076 383.119 546.375 381.462C542.972 378.148 542.9 372.707 546.215 369.304L558.213 356.986C561.527 353.583 566.968 353.512 570.371 356.826C573.774 360.14 573.845 365.581 570.531 368.984L558.533 381.302L558.533 381.302Z\" fill=\"null\" />\r\n          <path id=\"Bulb_6\" d=\"M371.551 507.043L388.749 507.03L388.712 455.438C388.678 408.027 427.227 369.423 474.638 369.389C522.048 369.355 560.653 407.904 560.687 455.315L560.724 506.907L577.921 506.895C582.674 506.891 586.523 510.734 586.526 515.487C586.53 520.24 582.686 524.089 577.934 524.092L526.341 524.129L526.372 567.123C526.375 571.876 522.532 575.725 517.779 575.728C513.027 575.731 509.178 571.888 509.174 567.135L509.144 524.142L440.354 524.191L440.397 584.382C440.4 589.135 436.557 592.984 431.804 592.987C427.051 592.991 423.203 589.147 423.199 584.395L423.156 524.203L371.564 524.24C366.811 524.244 362.962 520.4 362.959 515.648C362.955 510.895 366.798 507.046 371.551 507.043ZM543.526 506.919L543.489 455.327C543.468 425.194 523.952 399.879 496.976 390.594C514.644 403.033 526.269 423.49 526.286 446.74L526.329 506.932L543.526 506.919Z\" fill=\"white\" />\r\n          <path id=\"group_6_1\" d=\"M809.021 352.202C804.268 352.265 800.372 348.47 800.31 343.717L800.083 326.521C800.021 321.769 803.816 317.873 808.568 317.81C813.321 317.748 817.217 321.543 817.279 326.295L817.506 343.491C817.568 348.243 813.773 352.14 809.021 352.202Z\" fill=\"null\" />\r\n          <path id=\"group_6_2\" d=\"M681.295 448.477L698.491 448.251C703.244 448.189 707.14 451.984 707.202 456.736C707.265 461.488 703.47 465.385 698.717 465.447L681.521 465.673C676.769 465.736 672.873 461.941 672.81 457.189C672.748 452.436 676.543 448.54 681.295 448.477Z\" fill=\"null\" />\r\n          <path id=\"group_6_3\" d=\"M913.555 454.021C913.492 449.268 917.287 445.372 922.039 445.31L939.235 445.083C943.988 445.021 947.884 448.816 947.947 453.568C948.009 458.321 944.214 462.217 939.462 462.279L922.266 462.506C917.513 462.568 913.617 458.773 913.555 454.021Z\" fill=\"null\" />\r\n          <path id=\"group_6_4\" d=\"M730.422 385.981C728.222 386.01 726.011 385.199 724.309 383.542L711.991 371.544C708.589 368.229 708.517 362.789 711.831 359.386C715.146 355.983 720.587 355.911 723.989 359.226L736.308 371.224C739.71 374.538 739.782 379.979 736.468 383.382C734.81 385.083 732.621 385.952 730.422 385.981L730.422 385.981Z\" fill=\"null\" />\r\n          <path id=\"group_6_5\" d=\"M894.533 381.302C892.876 383.004 890.687 383.872 888.487 383.901C886.287 383.93 884.076 383.119 882.375 381.462C878.972 378.148 878.9 372.707 882.215 369.304L894.213 356.986C897.527 353.583 902.968 353.512 906.371 356.826C909.774 360.14 909.845 365.581 906.531 368.984L894.533 381.302L894.533 381.302Z\" fill=\"null\" />\r\n          <path id=\"Bulb_7\" d=\"M707.551 507.043L724.749 507.03L724.712 455.438C724.678 408.027 763.227 369.423 810.638 369.389C858.048 369.355 896.653 407.904 896.687 455.315L896.724 506.907L913.921 506.895C918.674 506.891 922.523 510.734 922.526 515.487C922.53 520.24 918.687 524.089 913.934 524.092L862.341 524.129L862.372 567.123C862.375 571.876 858.532 575.725 853.779 575.728C849.027 575.731 845.178 571.888 845.175 567.135L845.144 524.142L776.354 524.191L776.397 584.382C776.4 589.135 772.557 592.984 767.804 592.987C763.051 592.991 759.203 589.147 759.199 584.395L759.156 524.203L707.564 524.24C702.811 524.244 698.962 520.4 698.959 515.648C698.955 510.895 702.798 507.046 707.551 507.043ZM879.526 506.919L879.489 455.327C879.468 425.194 859.952 399.879 832.976 390.594C850.644 403.033 862.269 423.49 862.286 446.74L862.329 506.932L879.526 506.919Z\" fill=\"white\" />\r\n          <path id=\"group_7_1\" d=\"M1145.02 349.124C1140.27 349.187 1136.37 345.392 1136.31 340.64L1136.08 323.444C1136.02 318.691 1139.82 314.795 1144.57 314.732C1149.32 314.67 1153.22 318.465 1153.28 323.217L1153.51 340.413C1153.57 345.166 1149.77 349.062 1145.02 349.124Z\" fill=\"null\" />\r\n          <path id=\"group_7_2\" d=\"M1017.3 445.4L1034.49 445.173C1039.24 445.111 1043.14 448.906 1043.2 453.658C1043.26 458.411 1039.47 462.307 1034.72 462.369L1017.52 462.596C1012.77 462.658 1008.87 458.863 1008.81 454.111C1008.75 449.358 1012.54 445.462 1017.3 445.4Z\" fill=\"null\" />\r\n          <path id=\"group_7_3\" d=\"M1249.55 450.943C1249.49 446.191 1253.29 442.294 1258.04 442.232L1275.24 442.006C1279.99 441.943 1283.88 445.738 1283.95 450.49C1284.01 455.243 1280.21 459.139 1275.46 459.202L1258.27 459.428C1253.51 459.49 1249.62 455.695 1249.55 450.943Z\" fill=\"null\" />\r\n          <path id=\"group_7_4\" d=\"M1066.42 382.903C1064.22 382.932 1062.01 382.121 1060.31 380.464L1047.99 368.466C1044.59 365.152 1044.52 359.711 1047.83 356.308C1051.15 352.905 1056.59 352.834 1059.99 356.148L1072.31 368.146C1075.71 371.461 1075.78 376.901 1072.47 380.304C1070.81 382.006 1068.62 382.874 1066.42 382.903L1066.42 382.903Z\" fill=\"null\" />\r\n          <path id=\"group_7_5\" d=\"M1230.53 378.224C1228.88 379.926 1226.69 380.794 1224.49 380.823C1222.29 380.852 1220.08 380.042 1218.37 378.384C1214.97 375.07 1214.9 369.629 1218.21 366.226L1230.21 353.908C1233.53 350.505 1238.97 350.434 1242.37 353.748C1245.77 357.063 1245.85 362.504 1242.53 365.906L1230.53 378.224L1230.53 378.224Z\" fill=\"null\" />\r\n          <path id=\"Bulb_8\" d=\"M1041.7 504.067L1058.89 504.055L1058.86 452.462C1058.82 405.051 1097.37 366.447 1144.78 366.413C1192.19 366.379 1230.8 404.928 1230.83 452.339L1230.87 503.931L1248.07 503.919C1252.82 503.916 1256.67 507.759 1256.67 512.512C1256.68 517.264 1252.83 521.113 1248.08 521.117L1196.49 521.154L1196.52 564.147C1196.52 568.9 1192.68 572.749 1187.93 572.752C1183.17 572.756 1179.32 568.913 1179.32 564.16L1179.29 521.166L1110.5 521.215L1110.54 581.407C1110.55 586.159 1106.7 590.008 1101.95 590.011C1097.2 590.015 1093.35 586.172 1093.35 581.419L1093.3 521.228L1041.71 521.265C1036.96 521.268 1033.11 517.425 1033.1 512.672C1033.1 507.919 1036.94 504.071 1041.7 504.067ZM1213.67 503.944L1213.64 452.351C1213.61 422.219 1194.1 396.904 1167.12 387.618C1184.79 400.057 1196.42 420.514 1196.43 443.765L1196.48 503.956L1213.67 503.944Z\" fill=\"white\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n</div>\r\n<br />\r\n<div class=\"flex items-center h-auto w-48 md:box-content rounded\" id=\"canvassimulation\" style=\"display: none\">\r\n  <div class=\"flex rounded items-center md:text-base text-sm\">\r\n    <svg style=\"display: block; margin: auto;\" width=\"400\" height=\"98\" viewBox=\"0 0 1285 594\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"Frame 2\">\r\n        <path id=\"group_0_1\" d=\"M137.021 245.936C132.268 245.874 128.372 249.669 128.31 254.421L128.083 271.617C128.021 276.37 131.816 280.266 136.568 280.328C141.321 280.391 145.217 276.596 145.279 271.844L145.506 254.647C145.568 249.895 141.773 245.999 137.021 245.936Z\" fill=\"null\" />\r\n        <path id=\"group_0_2\" d=\"M9.29504 149.661L26.4911 149.887C31.2435 149.95 35.1397 146.155 35.2022 141.403C35.2647 136.65 31.4698 132.754 26.7173 132.691L9.52131 132.465C4.76889 132.403 0.87269 136.198 0.810157 140.95C0.747624 145.702 4.54262 149.599 9.29504 149.661Z\" fill=\"null\" />\r\n        <path id=\"group_0_3\" d=\"M241.555 144.118C241.492 148.87 245.287 152.766 250.039 152.829L267.235 153.055C271.988 153.118 275.884 149.323 275.947 144.57C276.009 139.818 272.214 135.922 267.462 135.859L250.266 135.633C245.513 135.57 241.617 139.365 241.555 144.118Z\" fill=\"null\" />\r\n        <path id=\"group_0_4\" d=\"M58.4216 212.158C56.2217 212.129 54.0107 212.939 52.3093 214.597L39.9912 226.595C36.5884 229.909 36.5169 235.35 39.8313 238.753C43.1457 242.156 48.5866 242.227 51.9894 238.913L64.3075 226.915C67.7103 223.6 67.7819 218.159 64.4675 214.757C62.8103 213.055 60.6214 212.187 58.4215 212.158L58.4216 212.158Z\" fill=\"null\" />\r\n        <path id=\"group_0_5\" d=\"M222.533 216.836C220.876 215.135 218.687 214.266 216.487 214.237C214.287 214.208 212.076 215.019 210.375 216.676C206.972 219.991 206.9 225.432 210.215 228.835L222.213 241.153C225.527 244.555 230.968 244.627 234.371 241.313C237.774 237.998 237.845 232.557 234.531 229.154L222.533 216.836L222.533 216.836Z\" fill=\"null\" />\r\n        <path id=\"Bulb\" d=\"M35.5512 91.0959L52.7487 91.1083L52.7117 142.701C52.6777 190.112 91.2268 228.716 138.638 228.75C186.048 228.784 224.653 190.235 224.687 142.824L224.724 91.2316L241.921 91.2439C246.674 91.2474 250.523 87.4042 250.526 82.6514C250.53 77.8985 246.687 74.0498 241.934 74.0464L190.341 74.0094L190.372 31.0157C190.375 26.2628 186.532 22.4141 181.779 22.4107C177.027 22.4073 173.178 26.2505 173.174 31.0033L173.144 73.9971L104.354 73.9478L104.397 13.7565C104.4 9.00363 100.557 5.15494 95.8042 5.15153C91.0514 5.14813 87.2027 8.9913 87.1993 13.7441L87.1561 73.9354L35.5636 73.8984C30.8107 73.895 26.9621 77.7382 26.9586 82.491C26.9552 87.2438 30.7984 91.0925 35.5512 91.0959ZM207.526 91.2193L207.489 142.812C207.468 172.944 187.952 198.259 160.976 207.545C178.644 195.106 190.269 174.649 190.286 151.398L190.329 91.2069L207.526 91.2193Z\" fill=\"white\" />\r\n        <path id=\"group_1_1\" d=\"M473.021 240.936C468.268 240.874 464.372 244.669 464.31 249.421L464.083 266.617C464.021 271.37 467.816 275.266 472.568 275.328C477.321 275.391 481.217 271.596 481.279 266.844L481.506 249.647C481.568 244.895 477.773 240.999 473.021 240.936Z\" fill=\"null\" />\r\n        <path id=\"group_1_2\" d=\"M345.295 144.661L362.491 144.887C367.243 144.95 371.14 141.155 371.202 136.403C371.265 131.65 367.47 127.754 362.717 127.691L345.521 127.465C340.769 127.403 336.873 131.198 336.81 135.95C336.748 140.702 340.543 144.599 345.295 144.661Z\" fill=\"null\" />\r\n        <path id=\"group_1_3\" d=\"M577.555 139.118C577.492 143.87 581.287 147.766 586.039 147.829L603.235 148.055C607.988 148.118 611.884 144.323 611.947 139.57C612.009 134.818 608.214 130.922 603.462 130.859L586.266 130.633C581.513 130.57 577.617 134.365 577.555 139.118Z\" fill=\"null\" />\r\n        <path id=\"group_1_4\" d=\"M394.422 207.158C392.222 207.129 390.011 207.939 388.309 209.597L375.991 221.595C372.588 224.909 372.517 230.35 375.831 233.753C379.146 237.156 384.587 237.227 387.989 233.913L400.307 221.915C403.71 218.6 403.782 213.159 400.467 209.757C398.81 208.055 396.621 207.187 394.422 207.158L394.422 207.158Z\" fill=\"null\" />\r\n        <path id=\"group_1_5\" d=\"M558.533 211.836C556.876 210.135 554.687 209.266 552.487 209.237C550.287 209.208 548.076 210.019 546.375 211.676C542.972 214.991 542.9 220.432 546.215 223.835L558.213 236.153C561.527 239.555 566.968 239.627 570.371 236.313C573.774 232.998 573.845 227.557 570.531 224.154L558.533 211.836L558.533 211.836Z\" fill=\"null\" />\r\n        <path id=\"Bulb_2\" d=\"M371.551 86.0959L388.749 86.1083L388.712 137.701C388.678 185.112 427.227 223.716 474.638 223.75C522.048 223.784 560.653 185.235 560.687 137.824L560.724 86.2316L577.921 86.2439C582.674 86.2474 586.523 82.4042 586.526 77.6514C586.53 72.8985 582.686 69.0498 577.934 69.0464L526.341 69.0094L526.372 26.0157C526.375 21.2628 522.532 17.4141 517.779 17.4107C513.027 17.4073 509.178 21.2505 509.174 26.0033L509.144 68.9971L440.354 68.9478L440.397 8.75645C440.4 4.00363 436.557 0.154943 431.804 0.151534C427.051 0.148125 423.203 3.9913 423.199 8.74412L423.156 68.9354L371.564 68.8984C366.811 68.895 362.962 72.7382 362.959 77.491C362.955 82.2438 366.798 86.0925 371.551 86.0959ZM543.526 86.2193L543.489 137.812C543.468 167.944 523.952 193.259 496.976 202.545C514.644 190.106 526.269 169.649 526.286 146.398L526.329 86.2069L543.526 86.2193Z\" fill=\"white\" />\r\n        <path id=\"group_2_1\" d=\"M809.021 240.936C804.268 240.874 800.372 244.669 800.31 249.421L800.083 266.617C800.021 271.37 803.816 275.266 808.568 275.328C813.321 275.391 817.217 271.596 817.279 266.844L817.506 249.647C817.568 244.895 813.773 240.999 809.021 240.936Z\" fill=\"null\" />\r\n        <path id=\"group_2_2\" d=\"M681.295 144.661L698.491 144.887C703.244 144.95 707.14 141.155 707.202 136.403C707.265 131.65 703.47 127.754 698.717 127.691L681.521 127.465C676.769 127.403 672.873 131.198 672.81 135.95C672.748 140.702 676.543 144.599 681.295 144.661Z\" fill=\"null\" />\r\n        <path id=\"group_2_3\" d=\"M913.555 139.118C913.492 143.87 917.287 147.766 922.039 147.829L939.235 148.055C943.988 148.118 947.884 144.323 947.947 139.57C948.009 134.818 944.214 130.922 939.462 130.859L922.266 130.633C917.513 130.57 913.617 134.365 913.555 139.118Z\" fill=\"null\" />\r\n        <path id=\"group_2_4\" d=\"M730.422 207.158C728.222 207.129 726.011 207.939 724.309 209.597L711.991 221.595C708.589 224.909 708.517 230.35 711.831 233.753C715.146 237.156 720.587 237.227 723.989 233.913L736.308 221.915C739.71 218.6 739.782 213.159 736.468 209.757C734.81 208.055 732.621 207.187 730.422 207.158L730.422 207.158Z\" fill=\"null\" />\r\n        <path id=\"group_2_5\" d=\"M894.533 211.836C892.876 210.135 890.687 209.266 888.487 209.237C886.287 209.208 884.076 210.019 882.375 211.676C878.972 214.991 878.9 220.432 882.215 223.835L894.213 236.153C897.527 239.555 902.968 239.627 906.371 236.313C909.774 232.998 909.845 227.557 906.531 224.154L894.533 211.836L894.533 211.836Z\" fill=\"null\" />\r\n        <path id=\"Bulb_3\" d=\"M707.551 86.0959L724.749 86.1083L724.712 137.701C724.678 185.112 763.227 223.716 810.638 223.75C858.048 223.784 896.653 185.235 896.687 137.824L896.724 86.2316L913.921 86.2439C918.674 86.2474 922.523 82.4042 922.526 77.6514C922.53 72.8985 918.687 69.0498 913.934 69.0464L862.341 69.0094L862.372 26.0157C862.375 21.2628 858.532 17.4141 853.779 17.4107C849.027 17.4073 845.178 21.2505 845.175 26.0033L845.144 68.9971L776.354 68.9478L776.397 8.75645C776.4 4.00363 772.557 0.154943 767.804 0.151534C763.051 0.148125 759.203 3.9913 759.199 8.74412L759.156 68.9354L707.564 68.8984C702.811 68.895 698.962 72.7382 698.959 77.491C698.955 82.2438 702.798 86.0925 707.551 86.0959ZM879.526 86.2193L879.489 137.812C879.468 167.944 859.952 193.259 832.976 202.545C850.644 190.106 862.269 169.649 862.286 146.398L862.329 86.2069L879.526 86.2193Z\" fill=\"white\" />\r\n        <path id=\"group_3_1\" d=\"M1145.02 244.014C1140.27 243.952 1136.37 247.747 1136.31 252.499L1136.08 269.695C1136.02 274.447 1139.82 278.344 1144.57 278.406C1149.32 278.469 1153.22 274.674 1153.28 269.921L1153.51 252.725C1153.57 247.973 1149.77 244.077 1145.02 244.014Z\" fill=\"null\" />\r\n        <path id=\"group_3_2\" d=\"M1017.3 147.739L1034.49 147.965C1039.24 148.028 1043.14 144.233 1043.2 139.48C1043.26 134.728 1039.47 130.832 1034.72 130.769L1017.52 130.543C1012.77 130.48 1008.87 134.275 1008.81 139.028C1008.75 143.78 1012.54 147.676 1017.3 147.739Z\" fill=\"null\" />\r\n        <path id=\"group_3_3\" d=\"M1249.55 142.196C1249.49 146.948 1253.29 150.844 1258.04 150.907L1275.24 151.133C1279.99 151.196 1283.88 147.401 1283.95 142.648C1284.01 137.896 1280.21 134 1275.46 133.937L1258.27 133.711C1253.51 133.648 1249.62 137.443 1249.55 142.196Z\" fill=\"null\" />\r\n        <path id=\"group_3_4\" d=\"M1066.42 210.235C1064.22 210.206 1062.01 211.017 1060.31 212.674L1047.99 224.673C1044.59 227.987 1044.52 233.428 1047.83 236.831C1051.15 240.233 1056.59 240.305 1059.99 236.991L1072.31 224.992C1075.71 221.678 1075.78 216.237 1072.47 212.834C1070.81 211.133 1068.62 210.264 1066.42 210.235L1066.42 210.235Z\" fill=\"null\" />\r\n        <path id=\"group_3_5\" d=\"M1230.53 214.914C1228.88 213.213 1226.69 212.344 1224.49 212.315C1222.29 212.286 1220.08 213.097 1218.37 214.754C1214.97 218.069 1214.9 223.509 1218.21 226.912L1230.21 239.23C1233.53 242.633 1238.97 242.705 1242.37 239.39C1245.77 236.076 1245.85 230.635 1242.53 227.232L1230.53 214.914L1230.53 214.914Z\" fill=\"null\" />\r\n        <path id=\"Bulb_4\" d=\"M1041.7 89.0715L1058.89 89.0839L1058.86 140.676C1058.82 188.087 1097.37 226.692 1144.78 226.726C1192.19 226.76 1230.8 188.211 1230.83 140.8L1230.87 89.2072L1248.07 89.2196C1252.82 89.223 1256.67 85.3798 1256.67 80.627C1256.68 75.8742 1252.83 72.0255 1248.08 72.0221L1196.49 71.985L1196.52 28.9913C1196.52 24.2384 1192.68 20.3898 1187.93 20.3863C1183.17 20.3829 1179.32 24.2261 1179.32 28.9789L1179.29 71.9727L1110.5 71.9234L1110.54 11.7321C1110.55 6.97925 1106.7 3.13056 1101.95 3.12715C1097.2 3.12374 1093.35 6.96691 1093.35 11.7197L1093.3 71.911L1041.71 71.874C1036.96 71.8706 1033.11 75.7138 1033.1 80.4666C1033.1 85.2194 1036.94 89.0681 1041.7 89.0715ZM1213.67 89.1949L1213.64 140.787C1213.61 170.92 1194.1 196.235 1167.12 205.521C1184.79 193.081 1196.42 172.625 1196.43 149.374L1196.48 89.1826L1213.67 89.1949Z\" fill=\"white\" />\r\n        <path id=\"group_4_1\" d=\"M137.021 347.202C132.268 347.265 128.372 343.47 128.31 338.717L128.083 321.521C128.021 316.769 131.816 312.873 136.568 312.81C141.321 312.748 145.217 316.543 145.279 321.295L145.506 338.491C145.568 343.243 141.773 347.14 137.021 347.202Z\" fill=\"null\" />\r\n        <path id=\"group_4_2\" d=\"M9.29504 443.477L26.4911 443.251C31.2435 443.189 35.1397 446.984 35.2022 451.736C35.2647 456.488 31.4698 460.385 26.7173 460.447L9.52131 460.673C4.76889 460.736 0.87269 456.941 0.810157 452.189C0.747624 447.436 4.54262 443.54 9.29504 443.477Z\" fill=\"null\" />\r\n        <path id=\"group_4_3\" d=\"M241.555 449.021C241.492 444.268 245.287 440.372 250.039 440.31L267.235 440.083C271.988 440.021 275.884 443.816 275.947 448.568C276.009 453.321 272.214 457.217 267.462 457.279L250.266 457.506C245.513 457.568 241.617 453.773 241.555 449.021Z\" fill=\"null\" />\r\n        <path id=\"group_4_4\" d=\"M58.4216 380.981C56.2217 381.01 54.0107 380.199 52.3093 378.542L39.9912 366.544C36.5884 363.229 36.5169 357.789 39.8313 354.386C43.1457 350.983 48.5866 350.911 51.9894 354.226L64.3075 366.224C67.7103 369.538 67.7819 374.979 64.4675 378.382C62.8103 380.083 60.6214 380.952 58.4215 380.981L58.4216 380.981Z\" fill=\"null\" />\r\n        <path id=\"group_4_5\" d=\"M222.533 376.302C220.876 378.004 218.687 378.872 216.487 378.901C214.287 378.93 212.076 378.119 210.375 376.462C206.972 373.148 206.9 367.707 210.215 364.304L222.213 351.986C225.527 348.583 230.968 348.512 234.371 351.826C237.774 355.14 237.845 360.581 234.531 363.984L222.533 376.302L222.533 376.302Z\" fill=\"null\" />\r\n        <path id=\"Bulb_5\" d=\"M35.5512 502.043L52.7487 502.03L52.7117 450.438C52.6777 403.027 91.2268 364.423 138.638 364.389C186.048 364.355 224.653 402.904 224.687 450.315L224.724 501.907L241.921 501.895C246.674 501.891 250.523 505.734 250.526 510.487C250.53 515.24 246.687 519.089 241.934 519.092L190.341 519.129L190.372 562.123C190.375 566.876 186.532 570.725 181.779 570.728C177.027 570.731 173.178 566.888 173.174 562.135L173.144 519.142L104.354 519.191L104.397 579.382C104.4 584.135 100.557 587.984 95.8042 587.987C91.0514 587.991 87.2027 584.147 87.1993 579.395L87.1561 519.203L35.5636 519.24C30.8107 519.244 26.9621 515.4 26.9586 510.648C26.9552 505.895 30.7984 502.046 35.5512 502.043ZM207.526 501.919L207.489 450.327C207.468 420.194 187.952 394.879 160.976 385.594C178.644 398.033 190.269 418.49 190.286 441.74L190.329 501.932L207.526 501.919Z\" fill=\"white\" />\r\n        <path id=\"group_5_1\" d=\"M473.021 352.202C468.268 352.265 464.372 348.47 464.31 343.717L464.083 326.521C464.021 321.769 467.816 317.873 472.568 317.81C477.321 317.748 481.217 321.543 481.279 326.295L481.506 343.491C481.568 348.243 477.773 352.14 473.021 352.202Z\" fill=\"null\" />\r\n        <path id=\"group_5_2\" d=\"M345.295 448.477L362.491 448.251C367.243 448.189 371.14 451.984 371.202 456.736C371.265 461.488 367.47 465.385 362.717 465.447L345.521 465.673C340.769 465.736 336.873 461.941 336.81 457.189C336.748 452.436 340.543 448.54 345.295 448.477Z\" fill=\"null\" />\r\n        <path id=\"group_5_3\" d=\"M577.555 454.021C577.492 449.268 581.287 445.372 586.039 445.31L603.235 445.083C607.988 445.021 611.884 448.816 611.947 453.568C612.009 458.321 608.214 462.217 603.462 462.279L586.266 462.506C581.513 462.568 577.617 458.773 577.555 454.021Z\" fill=\"null\" />\r\n        <path id=\"group_5_4\" d=\"M394.422 385.981C392.222 386.01 390.011 385.199 388.309 383.542L375.991 371.544C372.588 368.229 372.517 362.789 375.831 359.386C379.146 355.983 384.587 355.911 387.989 359.226L400.307 371.224C403.71 374.538 403.782 379.979 400.467 383.382C398.81 385.083 396.621 385.952 394.422 385.981L394.422 385.981Z\" fill=\"null\" />\r\n        <path id=\"group_5_5\" d=\"M558.533 381.302C556.876 383.004 554.687 383.872 552.487 383.901C550.287 383.93 548.076 383.119 546.375 381.462C542.972 378.148 542.9 372.707 546.215 369.304L558.213 356.986C561.527 353.583 566.968 353.512 570.371 356.826C573.774 360.14 573.845 365.581 570.531 368.984L558.533 381.302L558.533 381.302Z\" fill=\"null\" />\r\n        <path id=\"Bulb_6\" d=\"M371.551 507.043L388.749 507.03L388.712 455.438C388.678 408.027 427.227 369.423 474.638 369.389C522.048 369.355 560.653 407.904 560.687 455.315L560.724 506.907L577.921 506.895C582.674 506.891 586.523 510.734 586.526 515.487C586.53 520.24 582.686 524.089 577.934 524.092L526.341 524.129L526.372 567.123C526.375 571.876 522.532 575.725 517.779 575.728C513.027 575.731 509.178 571.888 509.174 567.135L509.144 524.142L440.354 524.191L440.397 584.382C440.4 589.135 436.557 592.984 431.804 592.987C427.051 592.991 423.203 589.147 423.199 584.395L423.156 524.203L371.564 524.24C366.811 524.244 362.962 520.4 362.959 515.648C362.955 510.895 366.798 507.046 371.551 507.043ZM543.526 506.919L543.489 455.327C543.468 425.194 523.952 399.879 496.976 390.594C514.644 403.033 526.269 423.49 526.286 446.74L526.329 506.932L543.526 506.919Z\" fill=\"white\" />\r\n        <path id=\"group_6_1\" d=\"M809.021 352.202C804.268 352.265 800.372 348.47 800.31 343.717L800.083 326.521C800.021 321.769 803.816 317.873 808.568 317.81C813.321 317.748 817.217 321.543 817.279 326.295L817.506 343.491C817.568 348.243 813.773 352.14 809.021 352.202Z\" fill=\"null\" />\r\n        <path id=\"group_6_2\" d=\"M681.295 448.477L698.491 448.251C703.244 448.189 707.14 451.984 707.202 456.736C707.265 461.488 703.47 465.385 698.717 465.447L681.521 465.673C676.769 465.736 672.873 461.941 672.81 457.189C672.748 452.436 676.543 448.54 681.295 448.477Z\" fill=\"null\" />\r\n        <path id=\"group_6_3\" d=\"M913.555 454.021C913.492 449.268 917.287 445.372 922.039 445.31L939.235 445.083C943.988 445.021 947.884 448.816 947.947 453.568C948.009 458.321 944.214 462.217 939.462 462.279L922.266 462.506C917.513 462.568 913.617 458.773 913.555 454.021Z\" fill=\"null\" />\r\n        <path id=\"group_6_4\" d=\"M730.422 385.981C728.222 386.01 726.011 385.199 724.309 383.542L711.991 371.544C708.589 368.229 708.517 362.789 711.831 359.386C715.146 355.983 720.587 355.911 723.989 359.226L736.308 371.224C739.71 374.538 739.782 379.979 736.468 383.382C734.81 385.083 732.621 385.952 730.422 385.981L730.422 385.981Z\" fill=\"null\" />\r\n        <path id=\"group_6_5\" d=\"M894.533 381.302C892.876 383.004 890.687 383.872 888.487 383.901C886.287 383.93 884.076 383.119 882.375 381.462C878.972 378.148 878.9 372.707 882.215 369.304L894.213 356.986C897.527 353.583 902.968 353.512 906.371 356.826C909.774 360.14 909.845 365.581 906.531 368.984L894.533 381.302L894.533 381.302Z\" fill=\"null\" />\r\n        <path id=\"Bulb_7\" d=\"M707.551 507.043L724.749 507.03L724.712 455.438C724.678 408.027 763.227 369.423 810.638 369.389C858.048 369.355 896.653 407.904 896.687 455.315L896.724 506.907L913.921 506.895C918.674 506.891 922.523 510.734 922.526 515.487C922.53 520.24 918.687 524.089 913.934 524.092L862.341 524.129L862.372 567.123C862.375 571.876 858.532 575.725 853.779 575.728C849.027 575.731 845.178 571.888 845.175 567.135L845.144 524.142L776.354 524.191L776.397 584.382C776.4 589.135 772.557 592.984 767.804 592.987C763.051 592.991 759.203 589.147 759.199 584.395L759.156 524.203L707.564 524.24C702.811 524.244 698.962 520.4 698.959 515.648C698.955 510.895 702.798 507.046 707.551 507.043ZM879.526 506.919L879.489 455.327C879.468 425.194 859.952 399.879 832.976 390.594C850.644 403.033 862.269 423.49 862.286 446.74L862.329 506.932L879.526 506.919Z\" fill=\"white\" />\r\n        <path id=\"group_7_1\" d=\"M1145.02 349.124C1140.27 349.187 1136.37 345.392 1136.31 340.64L1136.08 323.444C1136.02 318.691 1139.82 314.795 1144.57 314.732C1149.32 314.67 1153.22 318.465 1153.28 323.217L1153.51 340.413C1153.57 345.166 1149.77 349.062 1145.02 349.124Z\" fill=\"null\" />\r\n        <path id=\"group_7_2\" d=\"M1017.3 445.4L1034.49 445.173C1039.24 445.111 1043.14 448.906 1043.2 453.658C1043.26 458.411 1039.47 462.307 1034.72 462.369L1017.52 462.596C1012.77 462.658 1008.87 458.863 1008.81 454.111C1008.75 449.358 1012.54 445.462 1017.3 445.4Z\" fill=\"null\" />\r\n        <path id=\"group_7_3\" d=\"M1249.55 450.943C1249.49 446.191 1253.29 442.294 1258.04 442.232L1275.24 442.006C1279.99 441.943 1283.88 445.738 1283.95 450.49C1284.01 455.243 1280.21 459.139 1275.46 459.202L1258.27 459.428C1253.51 459.49 1249.62 455.695 1249.55 450.943Z\" fill=\"null\" />\r\n        <path id=\"group_7_4\" d=\"M1066.42 382.903C1064.22 382.932 1062.01 382.121 1060.31 380.464L1047.99 368.466C1044.59 365.152 1044.52 359.711 1047.83 356.308C1051.15 352.905 1056.59 352.834 1059.99 356.148L1072.31 368.146C1075.71 371.461 1075.78 376.901 1072.47 380.304C1070.81 382.006 1068.62 382.874 1066.42 382.903L1066.42 382.903Z\" fill=\"null\" />\r\n        <path id=\"group_7_5\" d=\"M1230.53 378.224C1228.88 379.926 1226.69 380.794 1224.49 380.823C1222.29 380.852 1220.08 380.042 1218.37 378.384C1214.97 375.07 1214.9 369.629 1218.21 366.226L1230.21 353.908C1233.53 350.505 1238.97 350.434 1242.37 353.748C1245.77 357.063 1245.85 362.504 1242.53 365.906L1230.53 378.224L1230.53 378.224Z\" fill=\"null\" />\r\n        <path id=\"Bulb_8\" d=\"M1041.7 504.067L1058.89 504.055L1058.86 452.462C1058.82 405.051 1097.37 366.447 1144.78 366.413C1192.19 366.379 1230.8 404.928 1230.83 452.339L1230.87 503.931L1248.07 503.919C1252.82 503.916 1256.67 507.759 1256.67 512.512C1256.68 517.264 1252.83 521.113 1248.08 521.117L1196.49 521.154L1196.52 564.147C1196.52 568.9 1192.68 572.749 1187.93 572.752C1183.17 572.756 1179.32 568.913 1179.32 564.16L1179.29 521.166L1110.5 521.215L1110.54 581.407C1110.55 586.159 1106.7 590.008 1101.95 590.011C1097.2 590.015 1093.35 586.172 1093.35 581.419L1093.3 521.228L1041.71 521.265C1036.96 521.268 1033.11 517.425 1033.1 512.672C1033.1 507.919 1036.94 504.071 1041.7 504.067ZM1213.67 503.944L1213.64 452.351C1213.61 422.219 1194.1 396.904 1167.12 387.618C1184.79 400.057 1196.42 420.514 1196.43 443.765L1196.48 503.956L1213.67 503.944Z\" fill=\"white\" />\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</div>\r\n`;\r\n/**\r\n * See {@link QtARGB} webcomponent <qt-argb>.\r\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/argbble.html|ARGB BLE} and\r\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/argb.html ARGB BlueTooth}.\r\n */\r\nexport class QtARGB extends HTMLElement {\r\n  static get observedAttributes () {\r\n    return ['state', 'pin', 'port', 'board-name', 'ccs']; // required for v1\r\n  }\r\n\r\n  /**\r\n   * ARGB constructor - Addressable RGB\r\n   *\r\n   */\r\n  constructor () {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this.shadowRoot.appendChild(qtargbtemplate.content.cloneNode(true));\r\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\r\n    // this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\r\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\r\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\r\n    this.shadowRoot.querySelector('#r').value = this.getAttribute('r');\r\n    this.shadowRoot.querySelector('#g').value = this.getAttribute('g');\r\n    this.shadowRoot.querySelector('#b').value = this.getAttribute('b');\r\n    this.state = this.getAttribute('state');\r\n    this.blinkInterval = null;\r\n    this.pinState = 'LOW';\r\n    this.pin = null;\r\n    this.index = null;\r\n  }\r\n\r\n  get ccs () {\r\n    return this.getAttribute('ccs');\r\n  }\r\n\r\n  set ccs (newValue) {\r\n    this.setAttribute('ccs', newValue);\r\n  }\r\n\r\n  /**\r\n   * ccsShow show the config control simulation section\r\n   *\r\n   */\r\n  ccsShow () {\r\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\r\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\r\n  }\r\n\r\n  /**\r\n   * ccsHide hide the config control simulation section\r\n   *\r\n   */\r\n  ccsHide () {\r\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\r\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\r\n  }\r\n\r\n  // TODO: remove?\r\n  dataCb (data) {\r\n    console.log(data);\r\n  }\r\n\r\n  getParameters () {\r\n    const x = this.shadowRoot.getElementById('ip-parameters');\r\n    if (x.style.display === 'none') {\r\n      x.style.display = 'block';\r\n    } else {\r\n      x.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  simulate () {\r\n    const x = this.shadowRoot.getElementById('simulation_box');\r\n    if (x.style.display === 'none') {\r\n      x.style.display = 'block';\r\n    } else {\r\n      x.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  updateSimulation (groupid, color) {\r\n    if (groupid === null || groupid === undefined) {\r\n      return;\r\n    }\r\n    if (this.state === 'on') {\r\n      if (groupid && color !== 'rgb(0, 0, 0)') {\r\n        this.shadowRoot.getElementById('group_' + groupid + '_1').style.fill = color;\r\n        this.shadowRoot.getElementById('group_' + groupid + '_2').style.fill = color;\r\n        this.shadowRoot.getElementById('group_' + groupid + '_3').style.fill = color;\r\n        this.shadowRoot.getElementById('group_' + groupid + '_4').style.fill = color;\r\n        this.shadowRoot.getElementById('group_' + groupid + '_5').style.fill = color;\r\n      } else {\r\n        this.shadowRoot.getElementById('group_' + groupid + '_1').style.fill = 'none';\r\n        this.shadowRoot.getElementById('group_' + groupid + '_2').style.fill = 'none';\r\n        this.shadowRoot.getElementById('group_' + groupid + '_3').style.fill = 'none';\r\n        this.shadowRoot.getElementById('group_' + groupid + '_4').style.fill = 'none';\r\n        this.shadowRoot.getElementById('group_' + groupid + '_5').style.fill = 'none';\r\n      }\r\n    }\r\n  }\r\n\r\n  getPin (port) {\r\n    const boardType = this.getAttribute('boardType');\r\n    if (boardType === 'qtneo') {\r\n      return null;\r\n    }\r\n    const elem = this.shadowRoot.getElementById('board-name');\r\n    let selectedIndex = elem.selectedIndex;\r\n    if (selectedIndex === -1) {\r\n      selectedIndex = 0;\r\n    }\r\n    const bName = elem.options[selectedIndex].value;\r\n    const board = window.boards && window.boards[bName];\r\n    if (board) {\r\n      let pinNumber;\r\n      if (port && this.ports) {\r\n        const digPins = this.ports.rj.digitalPins;\r\n        const keys = Object.keys(digPins);\r\n        for (const value in keys) {\r\n          const portValue = digPins[keys[value]].port;\r\n          if (port.toString() === portValue.toString().trim()) {\r\n            pinNumber = digPins[keys[value]].pin;\r\n            this.setAttribute('pin', pinNumber);\r\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        pinNumber = this.getAttribute('pin');\r\n      }\r\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\r\n      return pin;\r\n    }\r\n  }\r\n\r\n  /**\r\n     *  @example\r\n     * argb(\"on\", 1, 255, 255, 255)\r\n     * Index is a number between 0 - 7\r\n     *\r\n     * to start/stop the ARGB module\r\n     * @param {String} newState - the state of ARGB module\r\n     * @param {Integer} index - index of ARGB\r\n     * @param {Integer} red - the Red value in (R, G, B)\r\n     * @param {Integer} green - the Green value in (R, G, B)\r\n     * @param {Integer} blue - the Blue value in (R, G, B)\r\n     */\r\n  argb (newState, index, red = null, green = null, blue = null) {\r\n    const onIndexes = [];\r\n    let onIndexesStr = '';\r\n    let onIndex = 0;\r\n    const offIndexes = [];\r\n    let offIndexesStr = '';\r\n    let offIndex = 0;\r\n    let checkboxElems = this.shadowRoot.querySelectorAll(\"input[type='checkbox']\");\r\n    if (index) {\r\n      if (newState === 'on') {\r\n        checkboxElems[index].checked = true;\r\n      } else {\r\n        checkboxElems[index].checked = false;\r\n      }\r\n    }\r\n    // if(index === undefined) {\r\n    checkboxElems = this.shadowRoot.querySelectorAll(\"input[type='checkbox']\");\r\n    for (let i = 0; i < checkboxElems.length; i++) {\r\n      if (checkboxElems[i].checked) {\r\n        onIndexesStr += i + ',';\r\n        onIndexes[onIndex] = i;\r\n        onIndex++;\r\n      } else {\r\n        offIndexesStr += i + ',';\r\n        offIndexes[offIndex] = i;\r\n        offIndex++;\r\n      }\r\n    }\r\n    onIndexesStr = onIndexesStr.replace(/(.+),$/, '$1');\r\n    offIndexesStr = offIndexesStr.replace(/(.+),$/, '$1');\r\n    //  }\r\n    console.log('on Pixel Indexes', onIndexesStr, 'off Pixel Indexes', offIndexesStr);\r\n\r\n    if (newState === 'on') {\r\n      if (red === null) {\r\n        red = this.shadowRoot.querySelector('#r').value;\r\n      }\r\n      if (green === null) {\r\n        green = this.shadowRoot.querySelector('#g').value;\r\n      }\r\n      if (blue === null) {\r\n        blue = this.shadowRoot.querySelector('#b').value;\r\n      }\r\n      this.state = 'on';\r\n    } else {\r\n      red = 0;\r\n      green = 0;\r\n      blue = 0;\r\n      this.state = 'off';\r\n    }\r\n    const color = 'rgb(' + red + ', ' + green + ', ' + blue + ')';\r\n    this.updateSimulation(index, color);\r\n    let elem = this.shadowRoot.getElementById('board-name');\r\n    let selectedIndex = elem.selectedIndex;\r\n    if (selectedIndex === -1) {\r\n      selectedIndex = 0;\r\n    }\r\n    const bName = elem.options[selectedIndex].value;\r\n    const board = window.boards && window.boards[bName];\r\n    if (board) {\r\n      elem = this.shadowRoot.getElementById('port');\r\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\r\n      const boardType = this.getAttribute('boardType');\r\n      const portNumber = elem.options[selectedIndex].value;\r\n      if (boardType === 'qtneo') {\r\n        board.writeARGB(Number(portNumber), newState, onIndexesStr, offIndexesStr, Number(red), Number(green), Number(blue));\r\n        return true;\r\n      }\r\n      const pin = this.getPin(portNumber);\r\n\r\n      if (!pin) {\r\n        this.pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'OUTPUT');\r\n      } else {\r\n        this.pin = pin;\r\n      }\r\n\r\n      if (this.state === 'on') {\r\n        onIndexes.forEach(onIndex => {\r\n          const arr1 = [0x13, Number(portNumber), Number(this.getAttribute('pin')), Number(onIndex), Number(red), Number(green), Number(blue)];\r\n          this.pin.sendSysex(arr1, this.dataCb);\r\n        });\r\n      } else {\r\n        offIndexes.forEach(offIndex => {\r\n          const arr1 = [0x12, 0x03, Number(portNumber), Number(this.getAttribute('pin')), Number(offIndex), Number(red), Number(green), Number(blue)];\r\n          this.pin.sendSysex(arr1, this.dataCb);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  updateStateValue (e) {\r\n    this.argb(e.target.value);\r\n    this.setAttribute('state', e.target.value);\r\n  }\r\n\r\n  executeOnStateChange (data) {\r\n    if (this.getAttribute('onStateChange')) {\r\n      window[this.getAttribute('onStateChange')](data);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback () {\r\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#r').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#g').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#b').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function (e) { });\r\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) { });\r\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function (e) { });\r\n    const checkboxElems = this.shadowRoot.querySelectorAll(\"input[type='checkbox']\");\r\n    for (let i = 0; i < checkboxElems.length; i++) {\r\n      checkboxElems[i].removeEventListener('click', function (e) { });\r\n    }\r\n  }\r\n\r\n  connectedCallback () {\r\n    const self = this;\r\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\r\n    this.shadowRoot.querySelector('#r').value = this.getAttribute('r');\r\n    this.shadowRoot.querySelector('#g').value = this.getAttribute('g');\r\n    this.shadowRoot.querySelector('#b').value = this.getAttribute('b');\r\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\r\n      self.updatePinValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\r\n      self.updatePortValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\r\n      self.updateBoardNameValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\r\n      self.updateStateValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#r').addEventListener('change', function (e) {\r\n      self.updateRValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#g').addEventListener('change', function (e) {\r\n      self.updateGValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#b').addEventListener('change', function (e) {\r\n      self.updateBValue(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\r\n      self.updateParameters(e);\r\n    }, false);\r\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\r\n      self.displaySimulation(e);\r\n    }, false);\r\n    window.addEventListener('boardConnected', function (e) {\r\n      self.setAttribute('boardType', e.detail.type);\r\n      self.updateBoardNames();\r\n      self.argb(self.state);\r\n    });\r\n    window.addEventListener('boardDisConnected', function (e) {\r\n      self.setAttribute('boardType', e.detail.type);\r\n      self.updateBoardNames();\r\n    });\r\n    window.addEventListener('boardPorts', function (e) {\r\n      self.updatePorts(e.detail);\r\n    });\r\n\r\n    const checkboxElems = this.shadowRoot.querySelectorAll(\"input[type='checkbox']\");\r\n    for (let i = 0; i < checkboxElems.length; i++) {\r\n      checkboxElems[i].addEventListener('click', function (e) {\r\n        self.updateCheckboxValue(e);\r\n      }, false);\r\n    }\r\n  }\r\n\r\n  updatePorts (ports) {\r\n    this.ports = ports;\r\n    const digPins = ports.rj.digitalPins;\r\n    const keys = Object.keys(digPins);\r\n    let boardOptions = '';\r\n    for (const value in keys) {\r\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\r\n    }\r\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\r\n    this.getPin(1);\r\n  }\r\n\r\n  updateBoardNames () {\r\n    const boards = window.boards || {};\r\n    const keys = Object.keys(boards);\r\n\r\n    if (keys.length === 0) {\r\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\r\n    } else {\r\n      let value;\r\n      let boardOptions = '';\r\n      for (value in keys) {\r\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\r\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\r\n      }\r\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\r\n    }\r\n  }\r\n\r\n  updatePinValue (e) {\r\n    this.setAttribute('pin', e.target.value);\r\n  }\r\n\r\n  updatePortValue (e) {\r\n    this.setAttribute('port', e.target.value);\r\n    const boardType = this.getAttribute('boardType');\r\n    if (boardType === 'qtneo') {\r\n      return true;\r\n    }\r\n    const arr = [0x12, 0x01, Number(e.target.value), Number(this.getAttribute('pin')), 0x08];\r\n    this.pin.sendSysex(arr, this.dataCb);\r\n  }\r\n\r\n  updateBoardNameValue (e) {\r\n    this.setAttribute('board-name', e.target.value);\r\n  }\r\n\r\n  updateRValue (e) {\r\n    this.setAttribute('r', e.target.value);\r\n    this.shadowRoot.querySelector('#red_val').innerHTML = e.target.value;\r\n    this.updateSimulation();\r\n    this.argb(this.state);\r\n  }\r\n\r\n  updateGValue (e) {\r\n    this.setAttribute('g', e.target.value);\r\n    this.shadowRoot.querySelector('#green_val').innerHTML = e.target.value;\r\n    this.updateSimulation();\r\n    this.argb(this.state);\r\n  }\r\n\r\n  updateBValue (e) {\r\n    this.setAttribute('b', e.target.value);\r\n    this.shadowRoot.querySelector('#blue_val').innerHTML = e.target.value;\r\n    this.updateSimulation();\r\n    this.argb(this.state);\r\n  }\r\n\r\n  updateCheckboxValue (e) {\r\n    this.index = e.target.value;\r\n    if (this.state === 'off') {\r\n      return;\r\n    }\r\n    if (e.target.checked) {\r\n      this.argb(Number(this.state, e.target.value));\r\n    } else {\r\n      this.argb(Number(this.state, e.target.value), 0, 0, 0);\r\n    }\r\n  }\r\n\r\n  updateParameters (e) {\r\n    this.getParameters();\r\n  }\r\n\r\n  displaySimulation (e) {\r\n    this.simulate();\r\n  }\r\n\r\n  attributeChangedCallback (name, oldValue, newValue) {\r\n    if (name === 'ccs') {\r\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\r\n    } else {\r\n      if (oldValue !== newValue) {\r\n        this.argb(newValue);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { QtARGB } from './qtargb.js';\nif (!window.customElements.get('qt-argb')) {\n  window.customElements.define('qt-argb', QtARGB);\n}\n","const qtbuzzertemplate = document.createElement('template');\nqtbuzzertemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  input:checked + label {\n      background-color: LightSeaGreen;\n  }\n  .animationbuzzon{\n      fill: rgb(255, 0,0);\n  }\n  .animationbuzzoff{\n      fill: rgb(255, 255, 255);\n  }\n</style>\n<div class=\"box-content rounded-md h-auto w-auto p-4\" id=\"maindiv\" style=\"display: block; background-color:#FF3399\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">BUZZER</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center px\">\n      <legend class=\"font-bold\">Control</legend>\n      <div class=\"inline-flex\" id=\"state\"><input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-d\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-l\" for=\"on\">ON</label> <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-d\" checked=\"checked\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer\" for=\"off\">OFF</label> <input class=\"hidden\" type=\"radio\" id=\"buzz\" value=\"buzz\" name=\"state-d\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-r\" for=\"buzz\">BUZZ</label></div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Interval</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"buzz-interval\" />\n    </div>\n  </div>\n  <br />\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n      <svg style=\"margin: auto;\" width=\"90\" height=\"90\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path id=\"ledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n        <path id=\"ledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n        <path id=\"ledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n        <path id=\"ledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n        <path id=\"ledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n        <path id=\"Bulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n      </svg>\n    </div>\n  </div>\n</div>\n<br />\n<div class=\"flex items-center box-border h-auto w-48 p-4 md:box-content bg-purple-400 rounded shadow-lg\" id=\"canvassimulation\" style=\"display: none\">\n  <svg id=\"canvassimulation\" style=\"margin: auto\" width=\"150\" height=\"150\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path id=\"Simulationledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n    <path id=\"Simulationledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n    <path id=\"Simulationledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n    <path id=\"Simulationledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n    <path id=\"Simulationledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n    <path id=\"SimulationBulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n  </svg>\n</div>\n\n`;\n/**\n * See {@link QtBuzzer} webcomponent <qt-buzzer>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/buzzerble.html|Buzzer BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/buzzer.html Buzzer BlueTooth}.\n */\nexport class QtBuzzer extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 'width', 'height', 'rotate', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtbuzzertemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#buzz-interval').value = this.getAttribute('buzz-interval');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.state = this.getAttribute('state');\n    this.buzzInterval = null;\n    this.pinState = 'LOW';\n    this.buzz(this.state);\n    this.audio = new Audio('https://qtlearncodelab.github.io/qtpi-shared/qtwc/beep.mp3');\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    this.setAttribute('s-style', newValue);\n  }\n\n  /**\n   * setBuzzInterval ]\n   *\n   * @param   int  newValue in ms\n   *\n   */\n  setBuzzInterval (newValue) {\n    this.setAttribute('buzz-interval', newValue);\n  }\n\n  getBuzzInterval (newValue) {\n    return this.getAttribute('buzz-interval');\n  }\n\n  updateStateValue (e) {\n    const retVal = this.buzz(e.target.id);\n    e.target.checked = retVal;\n    if (!retVal) {\n      this.shadowRoot.querySelector('#off').checked = true;\n    }\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('maindiv').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('maindiv').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  animateBuzzer (state) {\n    if (state === 'on') {\n      state = 'animationbuzzon';\n    } else {\n      state = 'animationbuzzoff';\n    }\n    if (this.shadowRoot.getElementById('canvassimulation').style.display === 'block') {\n      this.shadowRoot.getElementById('Simulationledblink').setAttribute('class', state);\n      this.shadowRoot.getElementById('Simulationledblink_2').setAttribute('class', state);\n      this.shadowRoot.getElementById('Simulationledblink_3').setAttribute('class', state);\n      this.shadowRoot.getElementById('Simulationledblink_4').setAttribute('class', state);\n      this.shadowRoot.getElementById('Simulationledblink_5').setAttribute('class', state);\n    } else {\n      this.shadowRoot.getElementById('ledblink').setAttribute('class', state);\n      this.shadowRoot.getElementById('ledblink_2').setAttribute('class', state);\n      this.shadowRoot.getElementById('ledblink_3').setAttribute('class', state);\n      this.shadowRoot.getElementById('ledblink_4').setAttribute('class', state);\n      this.shadowRoot.getElementById('ledblink_5').setAttribute('class', state);\n    }\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  /**\n     * @example\n     * buzz(\"on\")\n     * State - on/off/buzz\n     *\n     * to start/stop the buzzer\n     * @param {String} newState - the state of buzzer - on/off\n     */\n  buzz (newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    const boardType = this.getAttribute('boardType');\n    let portNumber = null;\n    if (board) {\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      portNumber = elem.options[selectedIndex].value;\n      if (boardType !== 'qtneo') {\n        const pin = this.getPin(portNumber);\n        if (!pin) {\n          this.pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'OUTPUT');\n        } else {\n          this.pin = pin;\n        }\n      }\n    } else {\n      return true;\n    }\n    if (newState === 'on') {\n      clearInterval(this.buzzInterval);\n      if (boardType === 'qtneo') {\n        board.buzz(portNumber, newState, this.getAttribute('buzz-interval'));\n      } else {\n        this.pin.write('HIGH');\n      }\n      this.animateBuzzer('animationbuzzon');\n      this.audio.play();\n      this.state = 'on';\n    } else if (newState === 'buzz') {\n      this.buzzing(newState, board, boardType, portNumber);\n    } else {\n      clearInterval(this.buzzInterval);\n      if (boardType === 'qtneo') {\n        board.buzz(portNumber, newState, this.getAttribute('buzz-interval'));\n      } else {\n        this.pin.write('LOW');\n      }\n      this.animateBuzzer('animationbuzzoff');\n      this.audio.pause();\n      this.state = 'off';\n    }\n    this.state = newState;\n    this.executeOnStateChange(newState);\n    return true;\n  }\n\n  buzzing (newState, board, boardType, portNumber) {\n    this.state = newState;\n    const self = this;\n    this.buzzInterval = setInterval(function () {\n      if (this.pinState === 'LOW') {\n        if (boardType === 'qtneo') {\n          board.buzz(portNumber, newState, self.getAttribute('buzz-interval'));\n        } else {\n          self.pin.write('HIGH');\n        }\n        self.audio.play();\n        self.animateBuzzer('animationbuzzon');\n        this.pinState = 'HIGH';\n      } else {\n        if (boardType === 'qtneo') {\n          board.buzz(portNumber, newState, self.getAttribute('buzz-interval'));\n        } else {\n          self.pin.write('LOW');\n        }\n        self.animateBuzzer('animationbuzzoff');\n        self.audio.pause();\n        this.pinState = 'LOW';\n      }\n    }, this.getAttribute('buzz-interval'));\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#buzz-interval').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#buzz-interval').value = this.getAttribute('buzz-interval');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#buzz-interval').addEventListener('change', function (e) {\n      self.updateBlinkIntervalValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      return self.updateStateValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n      self.buzz(self.state);\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    let boardOptions = '';\n    for (const value in keys) {\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateBlinkIntervalValue (e) {\n    this.setAttribute('buzz-interval', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'width') {\n      this.shadowRoot.getElementById('canvassimulation').style.width = newValue;\n    } else if (name === 'height') {\n      this.shadowRoot.getElementById('canvassimulation').style.height = newValue;\n    } else if (name === 'rotate') {\n      const temp = 'rotate(' + newValue + 'deg)';\n      this.shadowRoot.getElementById('canvassimulation').style.transform = temp;\n    } else if (name === 's-style') {\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else if (oldValue !== newValue) {\n      const newState = (newValue === 'true');\n      this.buzz(newState);\n    }\n  }\n}\n","import { QtBuzzer } from './qtbuzzer.js';\nif (!window.customElements.get('qt-buzzer')) {\n  window.customElements.define('qt-buzzer', QtBuzzer);\n}\n","const qtapdstemplate = document.createElement('template');\nqtapdstemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n <style>\n    .switch-toggle {\n        float: left;\n        background: #242729;\n        border-radius: 7px;\n        padding:1px;\n        width: 57%;\n    }\n    .switch-toggle input {\n        position: absolute;\n        opacity: 0;\n    }\n    .switch-toggle input + label {\n        padding: 6px;\n        float:left;\n        color: #fff;\n        cursor: pointer;\n    }\n    .switch-toggle input:checked + label {\n        background: green;\n        border-radius: 5px;\n    }\n</style>\n<div id=\"show-hide\" style=\"display: block\" class=\"bg-gradient-to-r from-blue-300 to-green-400 box-content rounded-md h-auto w-auto p-4\">\n<div class=\"bg-gradient-to-r from-green-300 via-blue-300 to-yellow-400  box-content rounded-md h-auto w-auto p-4 bg-indigo-300\">\n    <div class=\"grid grid-cols-1 gap-4\">\n        <div class=\"bg-gradient-to-r from-red-400 via-pink-600 to-purple-300  box-content rounded-md h-auto w-full\">\n            <p class=\"text-2xl text-center font-sans font-bold \">APDS</p>\n        </div>\n    </div>\n\n    <div class=\"flex flex-wrap gap-3\">\n        <fieldset class=\"flex justify-center text-center \">\n            <legend class=\"font-bold\">Enable</legend>\n            <div class=\"flex text-center  gap-6\" id=\"state\">\n                <label class=\"font-bold \">Color <input type=\"checkbox\" value = \"0\" id = \"color\"></label>\n                <label class=\"font-bold \">Gesture <input type=\"checkbox\" value = \"1\" id = \"gesture\"></label>\n                <label class=\"font-bold \">Proximity <input type=\"checkbox\" value = \"2\" id = \"proximity\"></label>\n            </div>\n        </fieldset>\n        <button>\n            <legend class=\"font-bold\">Config</legend>\n            <svg id = \"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"/></svg>\n        </button>\n        <button>\n            <legend class=\"font-bold\">Simulation</legend>\n            <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n        </button>\n    </div>\n\n    <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n      <div>\n        <legend class=\"font-bold\">Board</legend>\n        <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n          <option value=\"\" disabled selected>Select</option>\n        </select>\n      </div>\n      <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n      <div>\n        <legend class=\"font-bold\">Pin</legend>\n        <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n      </div>\n    </div>\n    <br>\n    <div class=\"grid grid-cols-4 gap-1\">\n        <label class =\"font-bold \" id=\"colorValue\">Color:</label>\n        <label class =\"font-bold \" id=\"ambienceValue\">Ambience:</label>\n        <label class =\"font-bold \" id=\"gestureValue\">Gesture:</label>\n        <label class =\"font-bold \" id=\"proximityValue\">Proximity:</label>\n    </div><br>\n    <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n        <div class=\"rounded bg-blue-500\">\n            <div class=\"relative py-3 px-2 flex\">\n                <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n            </div>\n        </div>\n        <div class=\"bg-gray-400\">\n            <label class=font-semibold md:text-base text-sm\">RED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n            <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"red\">\n            <span id=\"red_val\">127</span>\n            <label class=font-semibold md:text-base text-sm\">GREEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n            <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"green\">\n            <span id=\"green_val\">127</span><br>\n            <label class=font-semibold md:text-base text-sm\">BLUE&nbsp;&nbsp;&nbsp;</label>\n            <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"blue\">\n            <span id=\"blue_val\">127</span>\n            <label class=font-semibold md:text-base text-sm\">AMBIENCE&nbsp;</label>\n            <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"blue\">\n            <span id=\"blue_val\">127</span>\n        </div>\n        <div class=\"bg-gray-400\">\n\n        </div>\n\n    </div>\n</div>\n</div>\n`;\n\n/**\n * See {@link QtAPDS} webcomponent <qt-apds>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/apdsble.html|APDS BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/apds.html APDS BlueTooth}.\n */\nexport class QtAPDS extends HTMLElement {\n  static get observedAttributes () {\n    return ['pin', 'port', 'board-name', 'simulation', 'ccs', 'width', 'height',\n      'rotate', 's-style', 's-class',\n      'proximity', 'gesture', 'color'\n    ]; // required for v1\n  }\n\n  /**\n   * APDS constructor - Ambience Proximity Digital Sensor\n   * Digital RGB, ambient light, proximity and gesture sensor\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtapdstemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.setAttribute('connectionType', null);\n    // if (this.state === \"on\") {\n    //     this.shadowRoot.querySelector(\"#state\").checked = true;\n    // }\n    this.ccs_state = this.getAttribute('ccs');\n    this.enableNotification = false;\n    this.ccs_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    this.setAttribute('s-style', newValue);\n  }\n\n  get class () {\n    return this.getAttribute('s-style');\n  }\n\n  set class (newValue) {\n    this.setAttribute('s-class', newValue);\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  /**\n   * enableProximity enable the proximity\n   *\n   */\n  enableProximity () {\n    this.shadowRoot.querySelector('#proximity').checked = true;\n    this.setAttribute('proximity', true);\n  }\n\n  /**\n   * enableLight enable the light sensor\n   * we can get color and ambience values\n   *\n   */\n  enableLight () {\n    this.shadowRoot.querySelector('#color').checked = true;\n    this.setAttribute('color', true);\n  }\n\n  /**\n   * enableGesture enable gesture sensor\n   *\n   */\n  enableGesture () {\n    this.shadowRoot.querySelector('#gesture').checked = true;\n    this.setAttribute('gesture', true);\n  }\n\n  /**\n   * disableProximity disable the proximity\n   *\n   */\n  disableProximity () {\n    this.shadowRoot.querySelector('#proximity').checked = false;\n    this.setAttribute('proximity', false);\n  }\n\n  /**\n   * disableLight disable the light sensor\n   *\n   */\n  disableLight () {\n    this.shadowRoot.querySelector('#color').checked = false;\n    this.setAttribute('color', false);\n  }\n\n  /**\n   * disableGesture disable gesture sensor\n   *\n   */\n  disableGesture () {\n    this.shadowRoot.querySelector('#gesture').checked = false;\n    this.setAttribute('gesture', false);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * onData callback\n   *\n   * @param   data\n   */\n  onData (data) {\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n\n    const proximity = this.shadowRoot.querySelector('#proximity').checked;\n    const gesture = this.shadowRoot.querySelector('#gesture').checked;\n    const color = this.shadowRoot.querySelector('#color').checked;\n    try {\n      const dataObj = JSON.parse(data);\n      if (proximity) {\n        //this.dispatchEvent(new CustomEvent('onProximityData', { detail:  dataObj.d }));\n        this.shadowRoot.querySelector('#proximityValue').textContent = dataObj.d;\n        if (this.getAttribute('onProximityData')) {\n          window[this.getAttribute('onProximityData')](dataObj.d);\n        }\n      }\n      if (gesture) {\n        this.shadowRoot.querySelector('#gestureValue').textContent = dataObj.g;\n        //this.dispatchEvent(new CustomEvent('onGestureData', { detail:  dataObj.g }));\n        if (this.getAttribute('onGestureData')) {\n          window[this.getAttribute('onGestureData')](dataObj.g);\n        }\n      }\n      if (color) {\n        if (dataObj.c && dataObj.c.length > 2) {\n          const red = dataObj.c[0];\n          const green = dataObj.c[1];\n          const blue = dataObj.c[2];\n          const colorValue = 'red(' + red + ') : green(' + green + ') : blue(' + blue + ')';\n          this.shadowRoot.querySelector('#colorValue').textContent = colorValue;\n          if (this.getAttribute('onColorData')) {\n            window[this.getAttribute('onColorData')](red, green, blue);\n          }\n        }\n\n        this.shadowRoot.querySelector('#ambienceValue').textContent = dataObj.a;\n        //this.dispatchEvent(new CustomEvent('onAmbienceData', { detail:  dataObj.a }));\n        if (this.getAttribute('onAmbienceData')) {\n          window[this.getAttribute('onAmbienceData')](dataObj.a);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * apds\n   * @example\n   * apds('color',true)\n   * @param   string property color , proximity, gesture\n   * @param   boolean  newState true or false\n   *\n   */\n  apds (property, newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    const boardType = this.getAttribute('boardType');\n    // var connectionType = this.getAttribute('connectionType');\n    const self = this;\n    if (boardType === 'qtneo') {\n      const proximity = this.shadowRoot.querySelector('#proximity').checked;\n      const gesture = this.shadowRoot.querySelector('#gesture').checked;\n      const color = this.shadowRoot.querySelector('#color').checked;\n      const flag = (proximity || gesture || color);\n      console.log('Flag is ', flag, 'this.enableNotification', this.enableNotification);\n      for (let index = 0; index < board.characteristics.length; index++) {\n        const element = board.characteristics[index];\n        if (element.uuid === '00001001-0000-1000-8000-00805f9b34fb') {\n          if (flag) {\n            if (!this.enableNotification) {\n              board.startNotifications(element, function (data) {\n                self.onData(data);\n              }, 'string');\n              self.enableNotification = true;\n            }\n          } else {\n            board.stopNotifications(element);\n            self.enableNotification = false;\n          }\n        }\n      }\n\n      board.writeAPDS(newState, property);\n      return true;\n    }\n\n    elem = this.shadowRoot.getElementById('port');\n    selectedIndex = elem.selectedIndex;\n    let pin;\n    try {\n      if (selectedIndex === -1) {\n        pin = this.getPin();\n      } else {\n        const portNumber = elem.options[selectedIndex].value;\n        pin = this.getPin(portNumber);\n      }\n    } catch (err) {\n      console.log('Error ---> ', err);\n    }\n    if (pin && (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32')) {\n      switch (property) {\n        case 'color':\n          {\n            if (newState) {\n              pin.sendSysex([0x1A, 0x1C, 0x00, 0x02], function (data) { self.onData(data); });\n            } else {\n              self.shadowRoot.querySelector('#colorValue').textContent = '0';\n              this.shadowRoot.querySelector('#ambienceValue').textContent = '0';\n              pin.sendSysex([0x1A, 0x1C, 0x05], null);\n            }\n            break;\n          }\n        case 'proximity':\n          {\n            if (newState) {\n              pin.sendSysex([0x1A, 0x1C, 0x00, 0x04], function (data) { self.onData(data); });\n            } else {\n              self.shadowRoot.querySelector('#proximityValue').textContent = '0';\n              pin.sendSysex([0x1A, 0x1C, 0x05], null);\n            }\n            break;\n          }\n        case 'gesture':\n          {\n            if (newState) {\n              pin.sendSysex([0x1A, 0x1C, 0x00, 0x01], function (data) { self.onData(data); });\n            } else {\n              self.shadowRoot.querySelector('#gestureValue').textContent = 'None';\n              pin.sendSysex([0x1A, 0x1C, 0x05], null);\n            }\n            break;\n          }\n      }\n    }\n    return true;\n  }\n\n  onChangeValue (e) {\n    const retVal = this.apds(e.target.id, e.target.checked);\n    if (!retVal) {\n      this.shadowRoot.querySelector('#' + e.target.id).checked = false;\n    }\n    return retVal;\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#color').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#proximity').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#gesture').removeEventListener('change', function (e) { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#color').addEventListener('change', function (e) {\n      return self.onChangeValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#proximity').addEventListener('change', function (e) {\n      return self.onChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#gesture').addEventListener('change', function (e) {\n      return self.onChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.setAttribute('connectionType', e.detail.connectionType);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      if (e.detail) { self.setAttribute('boardType', e.detail.type); }\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    let boardOptions = '';\n    for (const value in keys) {\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '( ' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback', name, oldValue, newValue);\n    newValue = (newValue === 'true');\n    if (name === 'ccs') {\n      newValue === false ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'proximity') {\n      this.apds('proximity', newValue);\n    } else if (name === 'color') {\n      this.apds('color', newValue);\n    } else if (name === 'gesture') {\n      this.apds('gesture', newValue);\n    } else if (name === 'port') {\n      const proximity = this.shadowRoot.querySelector('#proximity').checked;\n      const gesture = this.shadowRoot.querySelector('#gesture').checked;\n      const color = this.shadowRoot.querySelector('#color').checked;\n      this.apds('color', color);\n      this.apds('proximity', proximity);\n      this.apds('gesture', gesture);\n    }\n  }\n}\n","import { QtAPDS } from './qtapds.js';\nif (!window.customElements.get('qt-apds')) {\n  window.customElements.define('qt-apds', QtAPDS);\n}\n","const qtirtemplate = document.createElement('template');\nqtirtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n      @apply: bg-green-400;\n      background-color: #68D391;\n  }\n  .rotated {\n      transform: rotate(-54deg);\n  }\n  .img_svg{\n      position: relative;\n      top : 20%;\n  }\n  .slidecontainer {\n      width: 100%;\n  }\n\n  .slider {\n      -webkit-appearance: none;\n      width: 100%;\n      height: 15px;\n      border-radius: 5px;\n      background: #9CA3AF;\n      outline: none;\n      opacity: 0.7;\n      -webkit-transition: .2s;\n      transition: opacity .2s;\n  }\n\n  .slider:hover {\n      opacity: 1;\n  }\n\n  .slider::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      width: 45px;\n      height:50px;\n      border-radius: 50%;\n      background: #ffb700;\n      cursor: pointer;\n  }\n\n  .slider::-moz-range-thumb {\n      width: 45px;\n      height: 50px;\n      border-radius: 50%;\n      background: #ffb700;\n      cursor: pointer;\n  }\n</style>\n\n<div class=\"box-content rounded-md h-auto w-auto p-4\" id=\"show-hide\" style=\"display:block;background-color:#FFCC00\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#FF3399\">\n      <p class=\"text-2xl text-center font-sans font-bold\">IR SENSOR</p>\n    </div>\n  </div>\n\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <br />\n    <div>\n      <legend class=\"font-bold\">State</legend>\n      <p class=\"text-center py-1\" id=\"irvalue\">false</p>\n    </div>\n  </div>\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n      <div class=\"grid grid-cols-3 gap-4\">\n        <svg id=\"img_svg\" class=\"place-self-end\" style=\"transform: rotate(90deg);\" width=\"95\" height=\"95\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path id=\"ledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n          <path id=\"ledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n          <path id=\"ledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n          <path id=\"ledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n          <path id=\"ledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n          <path id=\"Bulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n        </svg>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"5\" class=\"slider place-self-center\" id=\"obstacleSlider\" />\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"bg-gray-400 md:text-base rounded-md text-sm border-b h-auto w-52\" id=\"canvassimulation\" style=\"display: none\">\n  <div class=\"grid grid-cols-2 gap-2 w-52\">\n    <svg id=\"simulation_img_svg\" class=\"place-self-end\" style=\"transform: rotate(90deg);\" width=\"95\" height=\"95\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path id=\"simulationledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n      <path id=\"simulationledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n      <path id=\"simulationledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n      <path id=\"simulationledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n      <path id=\"simulationledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n      <path id=\"simulationBulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n    </svg>\n    <input type=\"range\" min=\"1\" max=\"10\" value=\"5\" class=\"slider place-self-center\" id=\"simulationobstacleSlider\" />\n  </div>\n</div>\n`;\n/**\n * See {@link QtIR} webcomponent <qt-ir>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/qt-ir.html|InfraRed Bluetooth}.\n */\nexport class QtIR extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtirtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    // this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n    this.boardstate = null;\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  executeOnData (data) {\n    // console.log(\"data from execute Data: \", data);\n    if (data === 1) {\n      this.shadowRoot.querySelector('#irvalue').textContent = true;\n      this.shadowRoot.getElementById('Bulb').style.fill = 'rgb(255, 0, 0)';\n      this.shadowRoot.getElementById('simulationBulb').style.fill = 'rgb(255, 0, 0)';\n    } else {\n      this.shadowRoot.querySelector('#irvalue').textContent = false;\n      this.shadowRoot.getElementById('Bulb').style.fill = 'rgb(255, 255, 255)';\n      this.shadowRoot.getElementById('simulationBulb').style.fill = 'rgb(255, 255, 255)';\n    }\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'INPUT');\n      return pin;\n    }\n  }\n\n  read () {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      this.boardstate = true;\n      // var pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'INPUT');\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n      const self = this;\n      if (self.getAttribute('state') === 'on') {\n        console.log('state is on and reading IR value every 1 second');\n        self.readIR = setInterval(function () {\n          pin.read(function (val) {\n            self.executeOnData(val);\n          });\n        }, 1000);\n      } else {\n        if (self.readIR) {\n          clearInterval(this.readIR);\n        }\n      }\n    } else {\n      console.log('Board not Connected');\n    }\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n    this.read();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#obstacleSlider').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#simulationobstacleSlider').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () {});\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.onStateChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#obstacleSlider').addEventListener('change', function (e) {\n      self.shadowRoot.querySelector('#simulationobstacleSlider').value = e.target.value;\n      self.updateobstacleSlider(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulationobstacleSlider').addEventListener('change', function (e) {\n      self.shadowRoot.querySelector('#obstacleSlider').value = e.target.value;\n      self.updateobstacleSlider(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      self.updateBoardNames();\n    });\n\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    console.log('updatePorts(ports) ', ports.rj.digitalPins);\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boards[keys[value]].type + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  updateobstacleSlider (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        if (e.target.value <= 5) {\n          this.executeOnData(1);\n        } else {\n          this.executeOnData(0);\n        }\n      }\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n      }\n      if (name === 's-style') {\n        console.log('s-style: ', newValue);\n        this.shadowRoot.getElementById('canvassimulation').style = newValue;\n      }\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtIR } from './qtir.js';\nif (!window.customElements.get('qt-ir')) {\n  window.customElements.define('qt-ir', QtIR);\n}\n","const qtldrtemplate = document.createElement('template');\nqtldrtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n      @apply: bg-green-400;\n      background-color: #68D391;\n  }\n  .rotated {\n      transform: rotate(-54deg);\n  }\n  .img_svg{\n      position: relative;\n      top : 20%;\n  }\n  .slidecontainer {\n      width: 100%;\n  }\n  .slider {\n      -webkit-appearance: none;\n      width: 100%;\n      height: 15px;\n      border-radius: 5px;\n      background: #7C3AED;\n      outline: none;\n      opacity: 0.7;\n      -webkit-transition: .2s;\n      transition: opacity .2s;\n  }\n\n  .slider:hover {\n      opacity: 1;\n  }\n\n  .slider::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      width: 25px;\n      height: 25px;\n      border-radius: 50%;\n      background: #111827;\n      cursor: pointer;\n  }\n\n  .slider::-moz-range-thumb {\n      width: 25px;\n      height: 25px;\n      border-radius: 50%;\n      background: #111827;\n      cursor: pointer;\n  }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4\" style=\"display: block; background-color:#FFCC00\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">LDR SENSOR</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"state\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Value</legend>\n      <p class=\"text-center py-2\" id=\"LDRvalue\">0</p>\n    </div>\n    <br />\n  </div>\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24 py-10\">\n      <input type=\"range\" min=\"0\" max=\"1023\" value=\"512\" class=\"slider place-self-center\" id=\"obstacleSlider\" />\n    </div>\n  </div>\n</div>\n<input type=\"range\" min=\"0\" max=\"1023\" value=\"512\" class=\"slider place-self-center\" id=\"canvasobstacleSlider\" width=\"150\" height=\"150\" style=\"display:none\" />\n\n`;\n/**\n * See {@link QtLDR} webcomponent <qt-ldr>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/qt-ldr.html|LDR Bluetooth}.\n */\nexport class QtLDR extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'simulation', 'ccs', 'width', 'height', 'rotate', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtldrtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    console.log('width get method');\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    console.log('width set method', newValue);\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    console.log('height get method');\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    console.log('height set method', newValue);\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    console.log('rotate get method');\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    console.log('rotate set method', newValue);\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  executeOnData (data) {\n    console.log('data from Execute Data: ', data);\n    this.shadowRoot.querySelector('#LDRvalue').textContent = data;\n    this.shadowRoot.querySelector('#obstacleSlider').value = data;\n    this.shadowRoot.querySelector('#canvasobstacleSlider').value = data;\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvasobstacleSlider').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvasobstacleSlider').style.display = 'block';\n  }\n\n  /**\n   * read ldr values\n   * callback data will be get via onData\n   *\n   */\n  read () {\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    // const boardType = this.getAttribute('boardType');\n    console.log('qt-ldr', elem.options, selectedIndex, board, bName);\n    const self = this;\n    console.log('HERE ====>', board);\n    if (board) {\n      const elemPort = this.shadowRoot.getElementById('port');\n      const selectedIndexPort = elemPort.selectedIndex === -1 ? 0 : elemPort.selectedIndex;\n      console.log('elem: ', elemPort.options, selectedIndexPort);\n      const portNumber = elemPort.options[selectedIndexPort].value;\n      const pin = this.getPin(portNumber);\n      if (!pin) {\n        console.log('pin');\n        this.pin = board.pin(this.getAttribute('pin'), 'ANALOG', 'INPUT');\n      } else {\n        this.pin = pin;\n      }\n\n      pin.read(function (val) {\n        console.log('LDR: get attribute: ', self.getAttribute('state'), val);\n        if (self.getAttribute('state') === 'on') {\n          self.executeOnData(val);\n        } else {\n          self.shadowRoot.querySelector('#LDRvalue').textContent = 0;\n        }\n      });\n    } else {\n      this.boardstate = false;\n      console.log('Board not connected');\n    }\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n      this.read();\n    } else {\n      this.setAttribute('state', 'off');\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#obstacleSlider').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#canvasobstacleSlider').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () {});\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      console.log('State changed');\n      self.onStateChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#obstacleSlider').addEventListener('change', function (e) {\n      self.updateobstacleSlider(e);\n      self.shadowRoot.querySelector('#canvasobstacleSlider').value = e.target.value;\n    }, false);\n    this.shadowRoot.querySelector('#canvasobstacleSlider').addEventListener('change', function (e) {\n      self.updateobstacleSlider(e);\n      self.shadowRoot.querySelector('#obstacleSlider').value = e.target.value;\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames(e.detail);\n      self.board = e.detail;\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.board = null;\n      self.updateBoardNames(e.detail);\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const anaPins = ports.rj.analogPins;\n    const keys = Object.keys(anaPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(anaPins[keys[value]]);\n      boardOptions += \"<option value='\" + anaPins[keys[value]].port + \"'>\" + anaPins[keys[value]].port + '(pin ' + anaPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames (boardData) {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '( ' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateobstacleSlider (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        this.executeOnData(e.target.value);\n        if (this.board !== null) {\n          this.board.sendData('ldr', this.getAttribute('port'), e.target.value);\n        }\n      }\n    }\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  getPin (port) {\n    // let boardType = this.getAttribute('boardType');\n    console.log('getPin', port);\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const anaPins = this.ports.rj.analogPins;\n        console.log('analogPins', anaPins);\n        const keys = Object.keys(anaPins);\n        for (const value in keys) {\n          const portValue = anaPins[keys[value]].port;\n          console.log(' ===> ', port, portValue);\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = anaPins[keys[value]].pin;\n            console.log(' ===>port, pin ', port, pinNumber);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      console.log('PIN Number = ', pinNumber);\n      const pin = board.pin(pinNumber, 'ANALOG', 'INPUT');\n      console.log(' ===>pin ', pin);\n      return pin;\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'port') {\n      const pin = this.getPin(newValue);\n      if (!pin) {\n        console.log('Could not get the pin details');\n      }\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n        this.read();\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n        this.shadowRoot.querySelector('#LDRvalue').textContent = 0;\n      }\n    } else if (name === 'width') {\n      this.shadowRoot.getElementById('canvasobstacleSlider').style.width = newValue;\n    } else if (name === 'height') {\n      this.shadowRoot.getElementById('canvasobstacleSlider').style.height = newValue;\n    } else if (name === 'rotate') {\n      const temp = 'rotate(' + newValue + 'deg)';\n      console.log('temp', temp);\n      this.shadowRoot.getElementById('canvasobstacleSlider').style.transform = temp;\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    }\n  }\n}\n","import { QtLDR } from './qtldr.js';\nif (!window.customElements.get('qt-ldr')) {\n  window.customElements.define('qt-ldr', QtLDR);\n}\n","const qtlimitswitchtemplate = document.createElement('template');\nqtlimitswitchtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n      @apply: bg-green-400;\n      background-color: #68D391;\n  }\n  .toggle__dot {\n      top: -.25rem;\n      left: -.25rem;\n      transition: all 0.3s ease-in-out;\n  }\n\n  input:checked ~ .toggle__dot {\n      transform: translateX(100%);\n      background-color: #48bb78;\n  }\n</style>\n\n<div class=\"box-content rounded-md h-auto w-auto p-4\" id=\"show-hide\" style=\"display:block; background-color:#33CC99\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">LIMIT SWITCH</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">State</legend>\n      <p class=\"text-center py-2\" id=\"limitswitchvalue\">false</p>\n    </div>\n  </div>\n\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <br />\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n      <fieldset class=\"flex justify-center text-center\">\n        <legend class=\"font-bold\">Click</legend>\n        <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n          <input type=\"checkbox\" name=\"toggle\" id=\"simulationstate\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n          <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n\n<div class=\"bg-blue-500 rounded h-20 w-36 shadow-lg\" id=\"canvassimulation\" style=\"display: none\">\n  <br />\n  <fieldset class=\"flex justify-center text-center\">\n    <legend class=\"font-bold\">Click</legend>\n    <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n      <input type=\"checkbox\" name=\"toggle\" id=\"canvassimulationstate\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n      <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n    </div>\n  </fieldset>\n</div>\n\n\n`;\n/**\n * See {@link QtLimitSwitch} webcomponent <qt-limitswitch>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/limitswitch.html|LimitSwitch BlueTooth}\n */\nexport class QtLimitSwitch extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtlimitswitchtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    this.boardstate = null;\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  executeOnData (data) {\n    // console.log(\"data from Execute Data: \", data);\n    if (data === 1) {\n      this.shadowRoot.querySelector('#limitswitchvalue').textContent = true;\n      this.shadowRoot.querySelector('#simulationstate').checked = true;\n      this.shadowRoot.querySelector('#canvassimulationstate').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#limitswitchvalue').textContent = false;\n      this.shadowRoot.querySelector('#simulationstate').checked = false;\n      this.shadowRoot.querySelector('#canvassimulationstate').checked = false;\n    }\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  read () {\n    var elem = this.shadowRoot.getElementById('board-name');\n    var selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    // const boardType = this.getAttribute('boardType');\n    console.log('qt-limitswitch', elem.options, selectedIndex, board, bName);\n    if (board) {\n      const elem = this.shadowRoot.getElementById('port');\n      const selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n      const self = this;\n      if (self.getAttribute('state') === 'on') {\n        console.log('state is on and reading IR value every 1 second');\n        self.readLimitSwitch = setInterval(function () {\n          pin.read(function (val) {\n            self.executeOnData(val);\n          });\n        }, 500);\n      } else {\n        if (self.readLimitSwitch) {\n          clearInterval(this.readLimitSwitch);\n        }\n      }\n    } else {\n      this.boardstate = false;\n      console.log('Board not connected');\n    }\n    return true;\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n    this.read();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#simulationstate').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#canvassimulationstate').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulationstate').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#canvassimulationstate').checked = e.target.checked;\n      self.updatesimulationstate(e);\n    }, false);\n    this.shadowRoot.querySelector('#canvassimulationstate').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#simulationstate').checked = e.target.checked;\n      self.updatesimulationstate(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      console.log('State changed');\n      self.onStateChangeValue(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '( ' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  updatesimulationstate (e) {\n    if (this.shadowRoot.querySelector('#state').checked === true) {\n      if (!this.boardstate) {\n        const self = this;\n        if (e.target.checked) {\n          self.shadowRoot.getElementById('limitswitchvalue').textContent = true;\n          this.executeOnData(1);\n          setTimeout(function () {\n            self.shadowRoot.getElementById('limitswitchvalue').textContent = false;\n            console.log('Inside TIMEOUT', e.target.checked);\n            self.shadowRoot.querySelector('#simulationstate').checked = false;\n            self.shadowRoot.querySelector('#canvassimulationstate').checked = false;\n            self.executeOnData(0);\n          }, 200);\n\n          console.log('Inside if', e.target.checked);\n        }\n      } else {\n        this.shadowRoot.querySelector('#simulationstate').checked = false;\n        this.shadowRoot.querySelector('#canvassimulationstate').checked = false;\n      }\n    } else {\n      this.shadowRoot.querySelector('#simulationstate').checked = false;\n      this.shadowRoot.querySelector('#canvassimulationstate').checked = false;\n    }\n  }\n\n  getPin (port) {\n    // let boardType = this.getAttribute('boardType');\n    console.log('getPin', port);\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          console.log(' ===> ', port, portValue);\n          if (port.toString() === portValue.toString().trim()) {\n            console.log(' ===> ', port, portValue);\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      console.log('PIN Number = ', pinNumber);\n      const pin = board.pin(pinNumber, 'DIGITAL', 'INPUT');\n      console.log(' ===>pin ', pin);\n      return pin;\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'port') {\n      const pin = this.getPin(newValue);\n      if (!pin) {\n        console.log('Could not get the pin details');\n      }\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n      }\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtLimitSwitch } from './qtlimitswitch.js';\nif (!window.customElements.get('qt-limitswitch')) {\n  window.customElements.define('qt-limitswitch', QtLimitSwitch);\n}\n","const motortemplate = document.createElement('template');\nmotortemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n    input:checked + label {\n        background-color: LightSeaGreen;\n    }\n    .wheels img{\n        width: 150px;\n        height: 150px;\n        animation: wheels 2s linear infinite ;\n    }\n    @keyframes wheels {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<div class=\"box-content rounded-md h-auto w-auto p-4 text-center\" id=\"show-hide\" style=\"display: block; background-color:#00CCFF\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">DC MOTOR</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">State</legend>\n      <div class=\"inline-flex text-gray-800\" id=\"state\">\n        <input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-s\" />\n        <label class=\"bg-gray-300 hover:bg-gray-400 font-semibold py-2 px-3 cursor-pointer rounded-l\" for=\"on\">START</label>\n        <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-s\" checked=\"checked\" />\n        <label class=\"bg-gray-300 hover:bg-gray-400 font-semibold py-2 px-3 cursor-pointer rounded-r\" for=\"off\">STOP</label>\n      </div>\n    </div>\n    <div>\n      <fieldset class=\"flex justify-center text-center\">\n        <legend class=\"font-bold\">Direction</legend>\n        <div class=\"inline-flex\" id=\"direction\">\n          <input class=\"hidden\" type=\"radio\" id=\"clockwise\" value=\"clockwise\" name=\"state-d\" checked />\n          <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-3 cursor-pointer rounded-l\" for=\"clockwise\">CLOCKWISE</label>\n          <input class=\"hidden\" type=\"radio\" id=\"anticlockwise\" value=\"anticlockwise\" name=\"state-d\" />\n          <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-3 cursor-pointer rounded-r\" for=\"anticlockwise\">ANTICLOCKWISE</label>\n        </div>\n      </fieldset>\n    </div>\n    <div>\n      <button id=\"config_button\">\n        <legend class=\"font-bold\">Config</legend>\n        <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n      </button>\n    </div>\n    <div>\n      <div>\n        <button>\n          <legend class=\"font-bold\">Simulation</legend>\n          <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n        </button>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Speed</legend>\n      <input type=\"range\" min=\"0\" max=\"255\" value=\"127\" name=\"speed\" id=\"speed\" /> \n       <span id=\"slider_val\">127</span>\n       </div>\n\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n     <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n    </div\n  </div>\n\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n        <!--<div class=\"absolute right-0 top-0 -mr-2 -mt-2 border cursor-pointer shadow-lg bg-white z-10 p-1 rounded-full p-2\">\n                <img src=\"https://image.flaticon.com/icons/svg/151/151882.svg\"/ class=\"w-2 h-2\">\n            </div>-->\n      </div>\n    </div>\n    <div class=\"flex bg-gray-400 justify-center md:text-base text-sm border-b h-full\">\n      <div class=\"wheels\">\n        <img src=\"https://qtlearncodelab.github.io/qtpi-shared/images/wheel.png\" id=\"motor_wheel\" />\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"flex p-10 md:text-base\" id=\"canvassimulation\" style=\"display: none\">\n  <div class=\"wheels\">\n    <img src=\"https://qtlearncodelab.github.io/qtpi-shared/images/wheel.png\" id=\"simulation_motor_wheel\" />\n  </div>\n</div>\n\n`;\n/**\n * See {@link QtMotor} webcomponent <qt-motor>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/motorble.html|Motor BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/motor.html Motor BlueTooth}.\n */\nexport class QtMotor extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  /**\n   * QtMotor Constructor\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(motortemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    // this.shadowRoot.querySelector('#board-type').value = this.getAttribute('board-type');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const speed = this.getAttribute('speed') ? this.getAttribute('speed') : 127;\n    this.shadowRoot.querySelector('#speed').value = speed;\n    this.state = this.getAttribute('state'); // Run/stop\n    this.direction = this.getAttribute('direction') ? this.getAttribute('direction') : 'clockwise';\n    this.shadowRoot.querySelector('#direction').value = this.direction;\n    this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n    this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  /**\n   * setSpeed set the motor speed\n   *\n   * @param   {Number}  motor speed value 128-255\n   *\n   */\n  setSpeed (newValue) {\n    this.setAttribute('speed', newValue);\n  }\n\n  /**\n   * getSpeed get the current speed of the motor been set\n   *\n   * @return  {Number} return the current motor speed\n   */\n  getSpeed () {\n    return this.getAttribute('speed');\n  }\n\n  /**\n   * setDirection set the direction of motor\n   *\n   * @param   {String}  clockwise/anticlockwise\n   *\n   */\n  setDirection (newValue) {\n    this.setAttribute('direction', newValue);\n  }\n\n  /**\n   * getDirection get the current direction\n   *\n   * @return  {String}  returns current direction\n   */\n  getDirection () {\n    return this.getAttribute('direction');\n  }\n\n  updateStateValue (e) {\n    console.log(e.target.id, e.target.value);\n    this.state = e.target.value;\n    console.log(e.target.value);\n    if (e.target.id === 'on') {\n      console.log('wheel Running');\n      this.run();\n    } else {\n      this.run('clockwise', '0');\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n    }\n  }\n\n  getParameters (e) {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    console.log(e.target.id, e.target.tagName, 'Event ');\n    console.log(x.classList);\n\n    if (e.target.id === 'config_gear') {\n      x.classList.toggle('invisible');\n    }\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n     * @run\n     * m1.run(\"clockwise\", 255);\n     *\n     * to start the motor in the given direction with the given speed\n     * @param {String} direction - direction of the motor - clockwise/anticlockwise\n     * @param {int} speed - speed of the motor 125 to 255\n     */\n  run (direction = null, speed = null) {\n    const elem = this.shadowRoot.getElementById('board-name');\n    // var BreakException = {};\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    // console.log(\"elem: \", elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    // console.log(\"motor run ===> \", bName, window.boards);\n    const boardType = this.getAttribute('boardType');\n    const board = window.boards && window.boards[bName];\n    let pin1 = -1;\n    let pin2 = -1;\n    if (board && board.port !== 'simulated') {\n      const mPort = this.getAttribute('port');\n      if (mPort === '1') {\n        if (board.type === 'veda') {\n          pin1 = board.pin(4, 'PWM', 'OUTPUT'); // veda pin1\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'veda-esp32') {\n          pin1 = board.pin(13, 'PWM', 'OUTPUT'); // veda pin1\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'rio') {\n          pin1 = board.pin(4, 'DIGITAL', 'OUTPUT'); // rio digital -direction\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // rio analog - speed\n        }\n      } else if (mPort === '2') {\n        if (board.type === 'veda') {\n          pin1 = board.pin(7, 'PWM', 'OUTPUT'); // veda pin 1\n          pin2 = board.pin(6, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'veda-esp32') {\n          pin1 = board.pin(18, 'PWM', 'OUTPUT'); // veda pin 1\n          pin2 = board.pin(19, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'rio') {\n          pin1 = board.pin(7, 'DIGITAL', 'OUTPUT'); // rio digital direction\n          pin2 = board.pin(6, 'PWM', 'OUTPUT'); // rio analog - speed\n        } else if (boardType === 'qtneo' && board.isConnected()) {\n          console.log('Qt ESP32 ble');\n        }\n      }\n    } else {\n      console.log('Board Not Connected');\n    }\n    const motorState = this.state;\n\n    if (motorState === 'on') {\n      console.log(motorState, direction, speed);\n      if (direction === null) {\n        direction = this.getAttribute('direction');\n        console.log('direction: ', direction);\n      }\n      if (speed === null) {\n        speed = this.getAttribute('speed');\n      }\n      console.log('speed    ====> ', speed);\n    } else {\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n    }\n\n    if (direction === true) {\n      direction = 'clockwise';\n    } else if (direction === false) {\n      direction = 'anticlockwise';\n    }\n\n    if (speed > 0) {\n      let animationSpeed = 0;\n      if (direction === 'anticlockwise') {\n        console.log('anticlockwise Running');\n        this.shadowRoot.getElementById('motor_wheel').style.animationDirection = 'reverse';\n        this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'running';\n\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDirection = 'reverse';\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'running';\n\n        if (speed === 0) {\n          animationSpeed = 0;\n        } else {\n          animationSpeed = Math.floor((500 / speed));\n        }\n        this.shadowRoot.getElementById('motor_wheel').style.animationDuration = animationSpeed + 's';\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDuration = animationSpeed + 's';\n        if (board && board.port !== 'simulated') {\n          // veda\n          if (board.type === 'veda' || board.type === 'veda-esp32') {\n            pin1.write(0);\n            pin2.write(Number(speed));\n          } else if (board.type === 'rio') {\n            pin2.write(Number(speed)); // analog speed\n            pin1.write(0); // digital direction\n          } else if (boardType === 'qtneo' && board.isConnected()) {\n            const portNumber = Number(this.getAttribute('port'));\n            board.runMotor(portNumber, speed, direction);\n          }\n        }\n      } else {\n        console.log('clockwise running');\n        if (speed === 0) {\n          animationSpeed = 0;\n        } else {\n          animationSpeed = Math.floor((500 / speed));\n        }\n        this.shadowRoot.getElementById('motor_wheel').style.animationDirection = 'normal';\n        this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'running';\n        this.shadowRoot.getElementById('motor_wheel').style.animationDuration = animationSpeed + 's';\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDirection = 'normal';\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'running';\n        this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDuration = animationSpeed + 's';\n        if (board && board.port !== 'simulated') {\n          const portNumber = Number(this.getAttribute('port'));\n          console.log('board ===> ', boardType, speed, direction, portNumber);\n          if (board.type === 'veda' || board.type === 'veda-esp32') {\n            pin1.write(Number(speed));\n            pin2.write(0);\n          } else if (board.type === 'rio') {\n            pin2.write(Number(speed)); // analog speed\n            pin1.write(1); // digital direction\n          } else if (boardType === 'qtneo' && board.isConnected()) {\n            console.log('inside neo boardType ');\n            const portNumber = Number(this.getAttribute('port'));\n            board.runMotor(portNumber, speed, direction);\n          }\n        }\n      }\n    } else {\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n      if (board && board.port !== 'simulated') {\n        if (boardType === 'qtneo' && board.isConnected()) {\n          const portNumber = Number(this.getAttribute('port'));\n          board.stopMotor(portNumber);\n        } else {\n          try {\n            pin1.write(0);\n            pin2.write(0);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#direction').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#speed').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.updateStateValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#direction').addEventListener('change', function (e) {\n      // console.log(e.target.checked, e.target.value);\n      self.updateDirectionValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#speed').addEventListener('change', function (e) {\n      self.updateSpeedValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n\n      self.updateBoardNames(e.detail);\n      self.run(self.direction, self.speed);\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames(e.detail);\n    });\n  }\n\n  simulateCb (dataCb) {\n    const port = this.shadowRoot.querySelector('#port').value;\n    console.log('simulateCb ------------> ', dataCb.s.d, dataCb.s.s, 'rec port', dataCb.s.p, 'conf port', port);\n    if (parseInt(port) === parseInt(dataCb.s.p)) {\n      this.run(dataCb.s.d, dataCb.s.s);\n      if (this.getAttribute('onData')) {\n        window[this.getAttribute('onData')](dataCb.s);\n      }\n    }\n  }\n\n  convertToArray (msg) {\n    const arr = [];\n    for (let i = 0; i < msg.length; i++) {\n      arr.push(msg.charCodeAt(i));\n    }\n    arr.push();\n    return arr;\n  }\n\n  updateBoardNames (boardData) {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    console.log('=== motor updateBoardNames ', boardData);\n    const self = this;\n    if (boardData.registerCb) { boardData.registerCb('motor', function (dataObj) { self.simulateCb(dataObj); }); }\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  // updateBoardValue(e) {\n  //     console.log('board', e.target.value);\n  //     this.setAttribute('board', e.target.value);\n  // }\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateDirectionValue (e) {\n    console.log('direction', e.target.id, e.target.checked);\n    console.log(e.target.id);\n    if (e.target.id === 'anticlockwise') {\n      this.setAttribute('direction', 'anticlockwise');\n    } else {\n      this.setAttribute('direction', 'clockwise');\n    }\n    if (this.state === 'on') {\n      this.run();\n    }\n  }\n\n  updateSpeedValue (e) {\n    console.log('speed', e.target.value);\n    this.setAttribute('speed', e.target.value);\n    this.shadowRoot.querySelector('#slider_val').innerHTML = e.target.value;\n    if (this.state === 'on') {\n      this.run();\n    }\n  }\n\n  updateParameters (e) {\n    this.getParameters(e);\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    }\n  }\n}\n","import { QtMotor } from './qtmotor.js';\nif (!window.customElements.get('qt-motor')) {\n  window.customElements.define('qt-motor', QtMotor);\n}\n","const qtrgbtemplate = document.createElement('template');\nqtrgbtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  input:checked + label {\n      background-color: LightSeaGreen;\n  }\n</style>\n<div id=\"show-hide\" style=\"display: block; background-color: #00CCFF\" class=\"box-content rounded-md h-auto w-auto p-4\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color: #FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">RGB LED</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Control</legend>\n      <div class=\"inline-flex\" id=\"state\"><input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-d\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-l\" for=\"on\">ON</label> <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-d\" checked=\"checked\" /><label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 cursor-pointer rounded-r\" for=\"off\">OFF</label></div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:70px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Red</legend>\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"red\" />\n      <span id=\"red_val\">127</span>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Green</legend>\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"green\" />\n      <span id=\"green_val\">127</span>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Blue</legend>\n      <input type=\"range\" value=\"127\" min=\"0\" max=\"255\" id=\"blue\" />\n      <span id=\"blue_val\">127</span>\n    </div>\n\n    <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n      <div class=\"rounded-t bg-blue-500\">\n        <div class=\"relative py-3 px-2 flex\">\n          <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n          <!--<div class=\"absolute right-0 top-0 -mr-2 -mt-2 border cursor-pointer shadow-lg bg-white z-10 p-1 rounded-full p-2\">\n                <img src=\"https://image.flaticon.com/icons/svg/151/151882.svg\"/ class=\"w-2 h-2\">\n            </div>-->\n        </div>\n      </div>\n      <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n        <svg style=\"margin: auto\" width=\"95\" height=\"95\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path id=\"ledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n          <path id=\"ledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n          <path id=\"ledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n          <path id=\"ledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n          <path id=\"ledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n          <path id=\"Bulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n        </svg>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div class=\"flex items-center h-auto w-48 md:box-content rounded\" id=\"canvassimulation\" style=\"display: none\">\n    <div class=\"flex rounded items-center md:text-base text-sm\">\n      <svg style=\"margin: auto\" width=\"150\" height=\"150\" viewBox=\"0 0 276 276\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path id=\"Simulationledblink\" d=\"M136.324 34.5052C131.571 34.5677 127.675 30.7727 127.613 26.0203L127.386 8.82428C127.324 4.07187 131.119 0.175668 135.871 0.113134C140.624 0.0506011 144.52 3.8456 144.582 8.59801L144.809 25.794C144.871 30.5465 141.076 34.4427 136.324 34.5052Z\" fill=\"white\" />\n        <path id=\"Simulationledblink_2\" d=\"M8.59805 130.78L25.7941 130.554C30.5465 130.492 34.4427 134.287 34.5052 139.039C34.5678 143.791 30.7728 147.688 26.0203 147.75L8.82431 147.976C4.0719 148.039 0.175699 144.244 0.113166 139.492C0.0506329 134.739 3.84563 130.843 8.59805 130.78Z\" fill=\"white\" />\n        <path id=\"Simulationledblink_3\" d=\"M240.858 136.324C240.795 131.571 244.59 127.675 249.342 127.613L266.538 127.386C271.291 127.324 275.187 131.119 275.25 135.871C275.312 140.624 271.517 144.52 266.765 144.582L249.569 144.809C244.816 144.871 240.92 141.076 240.858 136.324Z\" fill=\"white\" />\n        <path id=\"Simulationledblink_4\" d=\"M57.7245 68.2839C55.5246 68.3129 53.3137 67.5022 51.6123 65.845L39.2942 53.8468C35.8914 50.5324 35.8198 45.0915 39.1342 41.6887C42.4486 38.2859 47.8896 38.2143 51.2924 41.5287L63.6105 53.5269C67.0132 56.8413 67.0848 62.2822 63.7704 65.685C62.1132 67.3864 59.9244 68.255 57.7245 68.2839L57.7245 68.2839Z\" fill=\"white\" />\n        <path id=\"Simulationledblink_5\" d=\"M221.836 63.6052C220.179 65.3066 217.99 66.1752 215.79 66.2041C213.59 66.2331 211.379 65.4224 209.678 63.7652C206.275 60.4508 206.203 55.0099 209.518 51.6071L221.516 39.289C224.83 35.8862 230.271 35.8146 233.674 39.129C237.077 42.4434 237.148 47.8843 233.834 51.2871L221.836 63.6052L221.836 63.6052Z\" fill=\"white\" />\n        <path id=\"SimulationBulb\" d=\"M33.0004 189.448L50.1979 189.436L50.1609 137.843C50.1269 90.4322 88.676 51.8277 136.087 51.7937C183.498 51.7597 222.102 90.3088 222.136 137.72L222.173 189.312L239.371 189.3C244.123 189.296 247.972 193.14 247.975 197.892C247.979 202.645 244.136 206.494 239.383 206.497L187.79 206.534L187.778 266.8C187.781 271.552 183.938 275.401 179.185 275.405C174.433 275.408 170.584 271.565 170.58 266.812L170.593 206.547L101.803 206.596L101.846 266.787C101.849 271.54 98.0062 275.389 93.2534 275.392C88.5006 275.396 84.6519 271.552 84.6485 266.8L84.6053 206.608L33.0128 206.645C28.2599 206.649 24.4112 202.806 24.4078 198.053C24.4044 193.3 28.2476 189.451 33.0004 189.448ZM204.976 189.324L204.939 137.732C204.917 107.6 185.401 82.2843 158.425 72.9986C176.093 85.438 187.718 105.895 187.735 129.146L187.778 189.337L204.976 189.324Z\" fill=\"white\" />\n      </svg>\n    </div>\n  </div>\n</div>\n\n\n`;\n\n/**\n * See {@link QtRGB} webcomponent <qt-rgb>.\n * Tutorials, check out\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/rgb.html RGB BlueTooth}.\n */\nexport class QtRGB extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  /**\n   * RGB Constructor\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtrgbtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#red').value = this.getAttribute('red');\n    this.shadowRoot.querySelector('#green').value = this.getAttribute('green');\n    this.shadowRoot.querySelector('#blue').value = this.getAttribute('blue');\n    this.state = this.getAttribute('state');\n    this.pinState = 'LOW';\n    this.rgb(this.state);\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  dataCb (data) {\n    // console.log(data);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  /**\n       *\n       * to change the state of RGB LED - On/Off, uses the R, G, B color combination\n       * @param {String} newState - the state of RGB LED\n       * @param {Integer} redvalue - the Red value in RGB\n       * @param {Integer} greenvalue - the Green value in RGB\n       * @param {Integer} bluevalue - the Blue value in RGB\n       */\n  rgb (newState = null, redvalue = null, greenvalue = null, bluevalue = null) {\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    console.log('RGB ===> ', bName, window.boards);\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let rpin, gpin, bpin;\n      console.log(this.getAttribute('port'));\n      if (this.getAttribute('port') === 2) {\n        rpin = 55;\n        gpin = 26;\n        bpin = 9;\n      } else if (this.getAttribute('port') === 3) {\n        rpin = 56;\n        gpin = 59;\n        bpin = 10;\n      }\n      const redpin = board.pin(rpin, 'DIGITAL', 'OUTPUT');\n      const greenpin = board.pin(gpin, 'DIGITAL', 'OUTPUT');\n      const bluepin = board.pin(bpin, 'DIGITAL', 'OUTPUT');\n\n      if (newState === 'on') {\n        console.log('rgbled On');\n        if (!redvalue) {\n          redvalue = this.shadowRoot.querySelector('#red').value;\n        }\n        if (!greenvalue) {\n          greenvalue = this.shadowRoot.querySelector('#green').value;\n        }\n        if (!bluevalue) {\n          bluevalue = this.shadowRoot.querySelector('#blue').value;\n        }\n        const redarr = [0x08, rpin, redvalue];\n        const greenarr = [0x08, gpin, greenvalue];\n        const bluearr = [0x08, bpin, bluevalue];\n        if (board) {\n          redpin.sendSysex(redarr, this.dataCb);\n          greenpin.sendSysex(greenarr, this.dataCb);\n          bluepin.sendSysex(bluearr, this.dataCb);\n        }\n\n        this.state = 'on';\n      } else {\n        const redarr = [0x08, rpin, 0];\n        const greenarr = [0x08, gpin, 0];\n        const bluearr = [0x08, bpin, 0];\n        if (board) {\n          redpin.sendSysex(redarr, this.dataCb);\n          greenpin.sendSysex(greenarr, this.dataCb);\n          bluepin.sendSysex(bluearr, this.dataCb);\n        }\n        this.state = 'off';\n      }\n    } else {\n      console.log('Board Not Connected');\n    }\n    this.updatesimulationcolor(redvalue, greenvalue, bluevalue);\n    this.state = newState;\n    this.executeOnStateChange(newState);\n    return true;\n  }\n\n  updateStateValue (e) {\n    const retVal = this.rgb(e.target.id);\n    e.target.checked = retVal;\n    if (!retVal) {\n      this.shadowRoot.querySelector('#off').checked = true;\n    }\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener();\n    this.shadowRoot.querySelector('#port').removeEventListener();\n    this.shadowRoot.querySelector('#board-name').removeEventListener();\n    this.shadowRoot.querySelector('#board').removeEventListener();\n    this.shadowRoot.querySelector('#red').removeEventListener();\n    this.shadowRoot.querySelector('#green').removeEventListener();\n    this.shadowRoot.querySelector('#blue').removeEventListener();\n    this.shadowRoot.querySelector('#state').removeEventListener();\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#red').value = this.getAttribute('red');\n    this.shadowRoot.querySelector('#green').value = this.getAttribute('green');\n    this.shadowRoot.querySelector('#blue').value = this.getAttribute('blue');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      return self.updateStateValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#red').addEventListener('change', function (e) {\n      self.updateRedValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#green').addEventListener('change', function (e) {\n      self.updateGreenValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#blue').addEventListener('change', function (e) {\n      self.updateBlueValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames();\n      self.rgb(self.state);\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boards[keys[value]].type + ')' + '</option>';\n        console.log('boardOptions', boardOptions);\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateRedValue (e) {\n    this.setAttribute('r', e.target.value);\n    this.shadowRoot.querySelector('#red_val').innerHTML = e.target.value;\n    this.updatesimulationcolor();\n    this.rgb(this.state);\n  }\n\n  updateGreenValue (e) {\n    this.setAttribute('g', e.target.value);\n    this.shadowRoot.querySelector('#green_val').innerHTML = e.target.value;\n    this.updatesimulationcolor();\n    this.rgb(this.state);\n  }\n\n  updateBlueValue (e) {\n    this.setAttribute('b', e.target.value);\n    this.shadowRoot.querySelector('#blue_val').innerHTML = e.target.value;\n    this.updatesimulationcolor();\n    this.rgb(this.state);\n  }\n\n  updatesimulationcolor (r = null, g = null, b = null) {\n    console.log('RGB SIm');\n    if (r || g || b) {\n      if (this.state === 'on') {\n        var color = 'rgb(' + r + ',' + g + ',' + b + ')';\n        this.shadowRoot.getElementById('SimulationBulb').style.fill = color;\n        this.shadowRoot.getElementById('Simulationledblink').style.fill = color;\n        this.shadowRoot.getElementById('Simulationledblink_2').style.fill = color;\n        this.shadowRoot.getElementById('Simulationledblink_3').style.fill = color;\n        this.shadowRoot.getElementById('Simulationledblink_4').style.fill = color;\n        this.shadowRoot.getElementById('Simulationledblink_5').style.fill = color;\n      } else {\n        this.shadowRoot.getElementById('SimulationBulb').style.fill = 'rgb(0,0,0)';\n        this.shadowRoot.getElementById('Simulationledblink').style.fill = 'rgb(0,0,0)';\n        this.shadowRoot.getElementById('Simulationledblink_2').style.fill = 'rgb(0,0,0)';\n        this.shadowRoot.getElementById('Simulationledblink_3').style.fill = 'rgb(0,0,0)';\n        this.shadowRoot.getElementById('Simulationledblink_4').style.fill = 'rgb(0,0,0)';\n        this.shadowRoot.getElementById('Simulationledblink_5').style.fill = 'rgb(0,0,0)';\n      }\n    } else {\n      const valueRed = this.shadowRoot.getElementById('red').value;\n      const valueGreen = this.shadowRoot.getElementById('green').value;\n      const valueBlue = this.shadowRoot.getElementById('blue').value;\n      color = 'rgb(' + valueRed + ',' + valueGreen + ',' + valueBlue + ')';\n      if (this.state === 'on') {\n        this.shadowRoot.getElementById('Bulb').style.fill = color;\n      }\n    }\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    }\n  }\n}\n","import { QtRGB } from './qtrgb.js';\nif (!window.customElements.get('qt-rgb')) {\n  window.customElements.define('qt-rgb', QtRGB);\n}\n","const QtServotemplate = document.createElement('template');\nQtServotemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n      @apply: bg-green-400;\n      background-color: #68D391;\n  }\n  .rotated {\n      transform: rotate(-54deg);\n  }\n  .img_svg{\n      position: relative;\n      top : 20%;\n  }\n  .slidecontainer {\n      width: 100%;\n  }\n\n  .slider {\n      -webkit-appearance: none;\n      width: 100%;\n      height: 15px;\n      border-radius: 5px;\n      background: #7C3AED;\n      outline: none;\n      opacity: 0.7;\n      -webkit-transition: .2s;\n      transition: opacity .2s;\n  }\n\n  .slider:hover {\n      opacity: 1;\n  }\n\n  .slider::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      width: 25px;\n      height: 25px;\n      border-radius: 50%;\n      background: #111827;\n      cursor: pointer;\n  }\n\n  .slider::-moz-range-thumb {\n      width: 25px;\n      height: 25px;\n      border-radius: 50%;\n      background: #111827;\n      cursor: pointer;\n  }\n  #servoknob {\n      margin: auto;\n      border: 1px solid black;\n      width: 80px;\n      height: 40px;\n      background-color: coral;\n      color: white;\n  }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4\" style=\"display:block; background-color:#FFCC00\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color: #00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">SERVO</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Read</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Sweep</legend>\n      <input type=\"range\" value=\"0\" min=\"0\" max=\"180\" id=\"sweeppos\" />\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Initial Pos</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"initial\" />\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">End Pos</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"final\" />\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n  </div>\n  <br />\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"flex flex-wrap content-center bg-gray-400 md:text-base text-sm border-b h-24\">\n      <div id=\"servoknob\" class=\"font-sans text-2xl text-left font-bold\">------></div>\n    </div>\n  </div>\n</div>\n\n`;\n/**\n * See {@link QtServo} webcomponent <qt-servo>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/servoble.html|Servo BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/servo.html Servo BlueTooth}.\n */\nexport class QtServo extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  /**\n   * Servo constructor\n   * A servo can be told at what angle to turn 0 to 180 degree\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(QtServotemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#sweeppos').value = this.getAttribute('sweeppos');\n    this.shadowRoot.querySelector('#initial').value = this.getAttribute('initialValue');\n    this.shadowRoot.querySelector('#final').value = this.getAttribute('finalvalue');\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  /**\n * ccsHide hide the config control simulation section\n *\n */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  dataCb (data) {\n    console.log(data);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  /**\n     * @example\n     * sweep(0, 180)\n     *\n     * to start the servo with the given initial and final positions\n     * @param {Integer} initPos - initial position of the servo in degrees (0-180)\n     * @param {Integer} finalPos - fianl position of the servo in degrees (0-180)\n     */\n  sweep (initPos = null, finalPos = null) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    console.log('Servo ===> ', bName, window.boards);\n    const board = window.boards && window.boards[bName];\n    const boardType = this.getAttribute('boardType');\n    if (board) {\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n      const portNumber = elem.options[selectedIndex].value;\n      initPos = initPos !== null ? initPos : this.shadowRoot.querySelector('#initial').value;\n      finalPos = finalPos !== null ? finalPos : this.shadowRoot.querySelector('#final').value;\n      if (boardType === 'qtneo') {\n        board.servoSweep(portNumber, initPos, finalPos);\n      } else {\n        const pin = this.getPin(portNumber);\n\n        if (!pin) {\n          console.log('pin');\n          this.pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'OUTPUT');\n        } else {\n          this.pin = pin;\n        }\n\n        // var pin = board.pin(this.getAttribute('pin'), \"DIGITAL\", \"OUTPUT\")\n        let arr = [];\n        if (initPos) {\n          arr = [0x11, this.getAttribute('pin'), initPos, finalPos, 0x01];\n        } else {\n          arr = [0x11, this.getAttribute('pin'), this.shadowRoot.querySelector('#initial').value, this.shadowRoot.querySelector('#final').value, 0x01];\n        }\n        this.pin.sendSysex(arr, this.dataCb);\n      }\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#sweeppos').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#sweeppos').value = this.getAttribute('sweeppos');\n    this.shadowRoot.querySelector('#initial').value = this.getAttribute('initialValue');\n    this.shadowRoot.querySelector('#final').value = this.getAttribute('finalvalue');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#sweeppos').addEventListener('change', function (e) {\n      self.updateSweepValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n      self.sweep();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    console.log('updatePorts(ports) ', ports.rj.digitalPins);\n    this.getPin(1);\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateSweepValue (e) {\n    console.log('init value', this.shadowRoot.querySelector('#initial').value);\n    this.shadowRoot.querySelector('#initial').value = this.shadowRoot.querySelector('#final').value;\n    this.setAttribute('sweeppos', e.target.value);\n    this.shadowRoot.querySelector('#final').value = e.target.value;\n    this.sweep();\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        const angle = 'rotate(' + e.target.value + 'deg)';\n        console.log(angle);\n        this.shadowRoot.querySelector('#servoknob').style.transform = angle;\n      }\n    }\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n    }\n  }\n}\n","import { QtServo } from './qtservo.js';\nif (!window.customElements.get('qt-servo')) {\n  window.customElements.define('qt-servo', QtServo);\n}\n","const qttemptemplate = document.createElement('template');\nqttemptemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n  @apply: bg-green-400;\n  background-color: #68D391;\n  }\n  .slider {\n    overflow: hidden;\n    width: 100%;\n  }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4\" style=\"display:block; background-color:#FF3399\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">TEMPERATURE</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:70px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Value</legend>\n      <p class=\"text-center py-2\" id=\"tempvalue\">0</p>\n    </div>\n  </div>\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n      <div class=\"grid grid-cols-1 gap-4 p-9 w-auto\">\n        <input type=\"range\" min=\"20\" max=\"45\" value=\"25\" class=\"slider place-self-center\" id=\"tempSlider\" />\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"bg-pink-600 rounded-md md:text-base text-sm border-b h-16 w-36\" id=\"canvassimulation\" style=\"display: none\">\n  <div class=\"grid grid-cols-1 gap-4 py-6 px-2 w-auto\">\n    <input type=\"range\" min=\"20\" max=\"45\" value=\"25\" class=\"slider place-self-center\" id=\"canvastempSlider\" />\n  </div>\n</div>\n\n\n`;\n/**\n * See {@link QtTemperature} webcomponent <qt-temperature>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/temperature.html|UltraSonic BlueTooth}\n */\nexport class QtTemperature extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  /**\n   * QtTemperature constructor\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qttemptemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    this.readTemperature = null;\n    this.boardState = null;\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  executeOnData (data) {\n    const strData = data.substring(data.indexOf(':') + 1);\n    const tempVal = strData.split(':')[0];\n    if (tempVal !== 0.00) {\n      if (this.shadowRoot.querySelector('#state').checked) {\n        this.shadowRoot.querySelector('#tempvalue').textContent = tempVal;\n      } else {\n        this.shadowRoot.querySelector('#tempvalue').textContent = 0;\n      }\n    }\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  /**\n   * read the temperature, which will fire event of onData\n   *\n   */\n  read () {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      this.boardState = true;\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n\n      // var pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'INPUT');\n\n      const self = this;\n      const arr = [0x9, this.getAttribute('pin')];\n      if (self.getAttribute('state') === 'on') {\n        this.readTemperature = setInterval(function () {\n          pin.sendSysex(arr, function (data) { self.executeOnData(data); });\n        }, 500);\n      } else {\n        clearInterval(this.readTemperature);\n      }\n    } else {\n      console.log('Board Not connected');\n    }\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n    this.read();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#tempSlider').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#canvastempSlider').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#tempSlider').addEventListener('change', function (e) {\n      self.shadowRoot.querySelector('#canvastempSlider').value = e.target.value;\n      self.updateTempSlider(e);\n    }, false);\n    this.shadowRoot.querySelector('#canvastempSlider').addEventListener('change', function (e) {\n      self.shadowRoot.querySelector('#tempSlider').value = e.target.value;\n      self.updateTempSlider(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.onStateChangeValue(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    console.log('updatePorts(ports) ', ports.rj.digitalPins);\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boards[keys[value]].type + ')' + '</option>';\n        console.log('boardOptions', boardOptions);\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  updateTempSlider (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardState) {\n        this.shadowRoot.querySelector('#tempvalue').textContent = e.target.value;\n        this.executeOnData(e.target.value);\n      }\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n        this.shadowRoot.querySelector('#tempvalue').textContent = 0;\n      }\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtTemperature } from './qttemperature.js';\nif (!window.customElements.get('qt-temperature')) {\n  window.customElements.define('qt-temperature', QtTemperature);\n}\n","const QtUSSensorTemplate = document.createElement('template');\nQtUSSensorTemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n\n<style>\n  .toggle-checkbox:checked {\n      @apply: right-0 border-green-400;\n      right: 0;\n      border-color: #68D391;\n  }\n  .toggle-checkbox:checked + .toggle-label {\n      @apply: bg-green-400;\n      background-color: #68D391;\n  }\n  .slider {\n    overflow: hidden;\n    width: 100%;\n  }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4\" style=\"display: block; background-color: #FFCC00\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#FF3399\">\n      <p class=\"text-2xl text-center font-sans font-bold\">ULTRASONIC</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n        <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\" />\n        <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n      </div>\n    </fieldset>\n\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:70px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Value</legend>\n      <p class=\"text-center py-2\" id=\"ultrasonicvalue\">0</p>\n    </div>\n  </div>\n\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded-t bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n      </div>\n    </div>\n    <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\">\n      <div class=\"grid grid-cols-1 gap-4 p-10 w-auto\">\n        <input type=\"range\" min=\"0\" max=\"400\" value=\"512\" class=\"slider place-self-center\" id=\"usvalueSlider\" />\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bg-green-400 rounded-md md:text-base text-sm h-16 w-36 border-b\" id=\"canvassimulation\" style=\"display: none\">\n  <div class=\"grid grid-cols-1 gap-4 py-6 px-2 w-auto\">\n    <input type=\"range\" min=\"0\" max=\"400\" value=\"512\" class=\"slider place-self-center\" id=\"canvasusvalueSlider\" />\n  </div>\n</div>\n`;\n/**\n * See {@link QtUltraSonic} webcomponent <qt-ultrasonic>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/ultrasonicble.html|UltraSonic BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/ultrasonic.html UltraSonic BlueTooth}.\n */\nexport class QtUltraSonic extends HTMLElement {\n  static get observedAttributes () {\n    return ['pin', 'port', 'board-name', 'state', 'ccs', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(QtUSSensorTemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.readultrasonic = null;\n    const state = this.getAttribute('state');\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n    this.boardstate = null;\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  executeOnData (data) {\n    console.log('data from execute Data: ', data);\n    const strData = data.substring(data.indexOf(':') + 1);\n    const usVal = strData.split(':')[0];\n    console.log(this.shadowRoot.querySelector('#ultrasonicvalue'));\n    this.shadowRoot.querySelector('#ultrasonicvalue').textContent = usVal;\n    this.shadowRoot.querySelector('#usvalueSlider').value = usVal;\n    this.shadowRoot.querySelector('#canvasusvalueSlider').value = usVal;\n    if (this.getAttribute('onData')) {\n      window[this.getAttribute('onData')](usVal);\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  enableUltrasonic () {\n    this.setAttribute('state', 'on');\n  }\n\n  disableUltrasonic () {\n    this.setAttribute('state', 'off');\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'INPUT');\n      return pin;\n    }\n  }\n\n  onData (data) {\n    console.log('onData', data);\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n\n    try {\n      const dataObj = JSON.parse(data);\n      console.log(dataObj);\n      this.shadowRoot.querySelector('#ultrasonicvalue').textContent = dataObj.v + '   ' + dataObj.m;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * read enable to collect ultrasonic distance data\n   *\n   * This will send onData event when data received\n   *\n   */\n  read () {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      this.boardstate = true;\n      // var us_pin1 = board.pin(this.getAttribute('port'), 'DIGITAL', 'OUTPUT');\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      const portNumber = elem.options[selectedIndex].value;\n      const boardType = this.getAttribute('boardType');\n      console.log('elem: ', elem.options, boardType);\n      const self = this;\n      if (boardType !== 'qtneo') {\n        const usPin1 = this.getPin(portNumber);\n        const arr = [0x10, Number(this.getAttribute('port'))];\n        if (self.getAttribute('state') === 'on') {\n          this.readultrasonic = setInterval(function () {\n            usPin1.sendSysex(arr, function (data) { self.executeOnData(data); });\n          }, 1000);\n        } else {\n          clearInterval(this.readultrasonic);\n          self.shadowRoot.querySelector('#ultrasonicvalue').textContent = '0';\n        }\n      } else {\n        const newState = self.getAttribute('state') === 'on';\n        for (let index = 0; index < board.characteristics.length; index++) {\n          const element = board.characteristics[index];\n          if (element.uuid === '00001007-0000-1000-8000-00805f9b34fb') {\n            if (newState) {\n              board.startNotifications(element, function (data) {\n                self.onData(data);\n              }, 'string');\n              self.enableNotification = true;\n            } else {\n              board.stopNotifications(element);\n              self.enableNotification = false;\n            }\n          }\n        }\n        board.writeUS(newState, portNumber);\n      }\n    } else {\n      console.log('Board not connected');\n    }\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n    this.read();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#usvalueSlider').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#canvasusvalueSlider').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.onStateChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#usvalueSlider').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#canvasusvalueSlider').value = e.target.value;\n      self.usValueChange(e);\n    }, false);\n    this.shadowRoot.querySelector('#canvasusvalueSlider').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#usvalueSlider').value = e.target.value;\n      self.usValueChange(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  usValueChange (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        const usStr = 'US:' + e.target.value + ':1';\n        this.executeOnData(usStr);\n      }\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n        this.shadowRoot.querySelector('#ultrasonicvalue').textContent = 0;\n      }\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtUltraSonic } from './qtultrasonic.js';\nif (!window.customElements.get('qt-ultrasonic')) {\n  window.customElements.define('qt-ultrasonic', QtUltraSonic);\n}\n","const qtgvtemplate = document.createElement('template');\nqtgvtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n\n<div class=\"box-content rounded-md h-auto w-auto p-4\" id=\"gvmain\" style=\"display:block; background-color:#00CCFF\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"display:block; background-color:#33CC99\">\n      <p class=\"text-2xl text-center font-sans font-bold\">Google Assistant</p>\n    </div>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex\" style=\"display: block\">\n    <br />\n    <div>\n      <div class=\"font-sans text-left font-bold\">Config URL</div>\n      <input class=\"form-input rounded-md box-border\" id=\"url\" />\n    </div>\n  </div>\n</div>\n`;\n/**\n * See {@link QtBuzzer} webcomponent <qt-gv>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/qt-gv.html|Google Voice Bluetooth}.\n */\nexport class QtGv extends HTMLElement {\n  static get observedAttributes () {\n    return ['url', 'ccs']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtgvtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n\n    this.ccs_state = this.getAttribute('ccs');\n    this.css_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  getparameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  togglePropsDisplay () {\n    this.shadowRoot.getElementById('props').classList.toggle('qt-led-props-hide');\n  }\n\n  listen () {\n    if (this.listenInterval) {\n      clearInterval(this.listenInterval);\n    }\n    const url = this.getAttribute('url');\n    const self = this;\n    this.listenInterval = setInterval(this.httpGet, 500, url, self);\n  }\n\n  stopListen () {\n    if (this.listenInterval) {\n      clearInterval(this.listenInterval);\n    }\n  }\n\n  executeOnData (data) {\n    if (this.onData && typeof (this.onData) === 'function') {\n      // eslint-disable-next-line no-useless-call\n      this.onData.call(this, data);\n    } else {\n      console.log('onData not a function', this.onData);\n    }\n  }\n\n  httpGet (theUrl, self) {\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.open('GET', theUrl, false); // false for synchronous request\n    xmlHttp.send(null);\n    console.log(xmlHttp.responseText);\n    self.executeOnData(xmlHttp.responseText);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('gvmain').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('gvmain').style.display = 'none';\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#url').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#url').removeEventListener('click', function () {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.shadowRoot.querySelector('#url').addEventListener('change', function (e) {\n      self.updateUrlValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateparameters(e);\n    }, false);\n  }\n\n  updateUrlValue (e) {\n    console.log('url', e.target.value, this);\n    this.setAttribute('url', e.target.value);\n  }\n\n  updateparameters (e) {\n    this.getparameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    }\n  }\n}\n","import { QtGv } from './qtgv.js';\nif (!window.customElements.get('qt-gv')) {\n  window.customElements.define('qt-gv', QtGv);\n}\n","const qtalexatemplate = document.createElement('template');\nqtalexatemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n\n<div class=\"box-content rounded-md p-4\" id=\"alexamain\" style=\"background-color: #33CC99; display: block\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color: #00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">Alexa</p>\n    </div>\n  </div>\n  <br />\n  <div id=\"ip-parameters\" class=\"flex\" style=\"display: block\">\n    <div class=\"flex gap-x-4\">\n      <div class=\"font-sans text-2xl text-left font-bold\">Config URL</div>\n      <input class=\"form-input rounded-md box-border\" id=\"url\" />\n    </div>\n    <br />\n  </div>\n</div>\n\n`;\n/**\n * Qt-Alexa webcomponent\n *  {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/qt-alexa.html Click Here for Tutorial}\n */\nexport class QtAlexa extends HTMLElement {\n  static get observedAttributes () {\n    return ['url', 'ccs']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtalexatemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n\n    this.ccs_state = this.getAttribute('ccs');\n    this.css_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  getparameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  /**\n     * to check the command given to alexa via given adafruit url\n     */\n  listen () {\n    if (this.listenInterval) {\n      clearInterval(this.listenInterval);\n    }\n    const url = this.getAttribute('url');\n    const self = this;\n    this.listenInterval = setInterval(this.httpGet, 500, url, self);\n  }\n\n  stopListen () {\n    if (this.listenInterval) {\n      clearInterval(this.listenInterval);\n    }\n  }\n\n  executeOnData (data) {\n    if (this.onData && typeof (this.onData) === 'function') {\n      this.onData.call(this, data);\n    } else {\n      console.log('onData not a function', this.onData);\n    }\n  }\n\n  httpGet (theUrl, self) {\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.open('GET', theUrl, false); // false for synchronous request\n    xmlHttp.send(null);\n    console.log(xmlHttp.responseText);\n    self.executeOnData(xmlHttp.responseText);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('alexamain').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('alexamain').style.display = 'none';\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#url').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.shadowRoot.querySelector('#url').addEventListener('change', function (e) {\n      self.updateUrlValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateparameters(e);\n    }, false);\n  }\n\n  updateUrlValue (e) {\n    console.log('url', e.target.value, this);\n    this.setAttribute('url', e.target.value);\n  }\n\n  updateparameters (e) {\n    this.getparameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    }\n  }\n}\n","import { QtAlexa } from './qtalexa.js';\nif (!window.customElements.get('qt-alexa')) {\n  window.customElements.define('qt-alexa', QtAlexa);\n}\n","const QtGasSensortemplate = document.createElement('template');\nQtGasSensortemplate.innerHTML = `\n<link rel='stylesheet' type='text/css' href='https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css' />\n<style>\n    .toggle-checkbox:checked {\n        @apply: right-0 border-green-400;\n        right: 0;\n        border-color: #68D391;\n    }\n    .toggle-checkbox:checked + .toggle-label {\n        @apply: bg-green-400;\n        background-color: #68D391;\n    }\n    .slider {\n      overflow: hidden;\n      width: 100%;\n    }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4 bg-green-400\" style=\"display: block\">\n    <div class=\"grid grid-cols-1 gap-4\">\n        <div class=\"box-content rounded-md h-auto w-full bg-purple-400\">\n            <p class=\"text-2xl text-center font-sans font-bold \">GAS SENSOR</p>\n        </div>\n    </div>\n    <div class=\"grid grid-cols-4 md:grid-flow-col  py-3\">\n        <fieldset class=\"flex justify-center text-center \">\n            <legend class=\"font-bold\">Read</legend>\n            <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n                <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\"/>\n                <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n            </div>\n        </fieldset>\n        <div class=\"font-bold align-center text-justify \">\n            <p class=\"text-center \">Value</p>\n            <p class=\" text-center  py-2\" id=\"gassensorvalue\">0</p>\n        </div>\n        <button>\n            <legend class=\"font-bold\">Config</legend>\n            <svg id = \"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"/></svg>\n        </button>\n        <button>\n            <legend class=\"font-bold\">Simulation</legend>\n            <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n        </button>  \n    </div>\n    <div class=\"flex flex-col \" style=\"display: none\" id=\"ip-parameters\">\n    <div class=\"flex flex-row gap-x-8\">\n        <div class=\"font-sans text-2xl text-left font-bold \">Board Name</div>\n            <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n                <option value=\"\" disabled selected>Select</option>\n            </select>\n        </div><br>\n        <div class=\"flex flex-row gap-x-8\">\n            <div class=\"font-sans text-2xl text-left font-bold\">Port Number</div>\n            <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n                <option value=\"1\">&nbsp;1&nbsp;</option>\n                <option value=\"2\">&nbsp;2&nbsp;</option>\n                <option value=\"3\">&nbsp;3&nbsp;</option>\n                <option value=\"4\">&nbsp;4&nbsp;</option>\n                <option value=\"5\">&nbsp;5&nbsp;</option>\n                <option value=\"6\">&nbsp;6&nbsp;</option>\n            </select>\n            <div class=\"font-sans text-2xl text-left font-bold\">Pin Number&nbsp;</div>\n            <input class=\"form-input rounded-md box-border\" id=\"pin\">\n        </div><br>\n    </div>\n\n    <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n        <div class=\"rounded-t bg-blue-500\">\n          <div class=\"relative py-3 px-2 flex\">\n              <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n          </div>\n        </div>\n        <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\"> \n            <div class=\"grid grid-cols-1 gap-4 p-10 w-auto\">\n                <input type=\"range\" min=\"0\" max=\"1023\" value=\"512\" class=\"slider place-self-center\" id=\"gasvalueSlider\">\n            </div>            \n        </div>\n    </div>\n</div>\n\n<div class=\" bg-green-400 rounded-md md:text-base text-sm h-16 w-36 border-b\" id=\"canvassimulation\" style=\"display: none\"> \n    <div class=\"grid grid-cols-1 gap-4 py-6 px-2 w-auto\">\n        <input type=\"range\" min=\"0\" max=\"1023\" value=\"512\" class=\"slider place-self-center\" id=\"canvasgasvalueSlider\">\n    </div>            \n</div>\n`;\n/**\n * See {@link QtGas} webcomponent <qt-gas>.\n * Tutorials, check out\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/gas.html Buzzer BlueTooth}.\n */\nexport class QtGas extends HTMLElement {\n  static get observedAttributes () {\n    return ['pin', 'port', 'board-name', 'state', 'ccs', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(QtGasSensortemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n    this.boardstate = null;\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  executeOnData (data) {\n    console.log('data from execute Data: ', data);\n    this.shadowRoot.querySelector('#gassensorvalue').textContent = data;\n    this.shadowRoot.querySelector('#gasvalueSlider').value = data;\n    this.shadowRoot.querySelector('#canvasgasvalueSlider').value = data;\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getDigitalPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          console.log(' ===> ', port, portValue);\n          if (port.toString() === portValue.toString().trim()) {\n            console.log(' ===> ', port, portValue);\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            // this.setAttribute('pin', pinNumber);\n            // this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      console.log('PIN Number = ', pinNumber);\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      console.log(' ===>pin ', pin);\n      return pin;\n    }\n  }\n\n  getPin (port) {\n    // let boardType = this.getAttribute('boardType');\n    console.log('getPin', port);\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const anaPins = this.ports.rj.analogPins;\n        const keys = Object.keys(anaPins);\n        for (const value in keys) {\n          const portValue = anaPins[keys[value]].port;\n          console.log(' ===> ', port, portValue);\n          if (port.toString() === portValue.toString().trim()) {\n            console.log(' ===> ', port, portValue);\n            pinNumber = anaPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      console.log('PIN Number = ', pinNumber);\n      const pin = board.pin(pinNumber, 'ANALOG', 'INPUT');\n      console.log(' ===>pin ', pin);\n      return pin;\n    }\n  }\n\n  read () {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n      const digitalPin = this.getDigitalPin(portNumber);\n\n      this.boardstate = true;\n      // var pin = board.pin(this.getAttribute('pin'), 'ANALOG', 'INPUT');\n      // var digitalPin = board.pin(this.getAttribute('digitalpin'), 'DIGITAL', 'OUTPUT');\n      const self = this;\n      digitalPin.write('HIGH');\n      pin.read(function (val) {\n        if (self.getAttribute('state') === 'on') {\n          self.executeOnData(val);\n        } else {\n          digitalPin.write('LOW');\n          self.shadowRoot.querySelector('#gassensorvalue').textContent = '0';\n        }\n      });\n    } else {\n      console.log('Board not connected');\n    }\n  }\n\n  onStateChangeValue (e) {\n    if (e.target.checked) {\n      this.setAttribute('state', 'on');\n    } else {\n      this.setAttribute('state', 'off');\n    }\n    this.read();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function (e) {});\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function (e) {});\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function (e) {});\n    this.shadowRoot.querySelector('#gasvalueSlider').removeEventListener('click', function (e) {});\n    this.shadowRoot.querySelector('#canvasgasvalueSlider').removeEventListener('click', function (e) {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.onStateChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#gasvalueSlider').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#canvasgasvalueSlider').value = e.target.value;\n      self.gasvaluechange(e);\n    }, false);\n    this.shadowRoot.querySelector('#canvasgasvalueSlider').addEventListener('click', function (e) {\n      self.shadowRoot.querySelector('#gasvalueSlider').value = e.target.value;\n      self.gasvaluechange(e);\n    }, false);\n\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const anaPins = ports.rj.analogPins;\n    const keys = Object.keys(anaPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(anaPins[keys[value]]);\n      boardOptions += \"<option value='\" + anaPins[keys[value]].port + \"'>\" + anaPins[keys[value]].port + '(pin ' + anaPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boards[keys[value]].type + ')' + '</option>';\n        console.log('boardOptions', boardOptions);\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  gasvaluechange (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        this.executeOnData(e.target.value);\n      }\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else if (name === 'state') {\n      if (newValue === 'on') {\n        this.shadowRoot.querySelector('#state').checked = true;\n      } else {\n        this.shadowRoot.querySelector('#state').checked = false;\n        this.shadowRoot.querySelector('#gassensorvalue').textContent = 0;\n      }\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtGas } from './qtgas.js';\nif (!window.customElements.get('qt-gas')) {\n  window.customElements.define('qt-gas', QtGas);\n}\n","const QtHumiditytemplate = document.createElement('template');\nQtHumiditytemplate.innerHTML = `\n<link rel='stylesheet' type='text/css' href='https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css' />\n<style>\n    .toggle-checkbox:checked {\n        @apply: right-0 border-green-400;\n        right: 0;\n        border-color: #68D391;\n    }\n    .toggle-checkbox:checked + .toggle-label {\n        @apply: bg-green-400;\n        background-color: #68D391;\n    }\n</style>\n\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4 bg-green-400\">\n    <div class=\"grid grid-cols-1 gap-4\">\n        <div class=\"box-content rounded-md h-auto w-full bg-purple-400\">\n            <p class=\"text-2xl text-center font-sans font-bold \">HUMIDITY SENSOR</p>\n        </div>\n    </div>\n    <div class=\"grid grid-cols-4 md:grid-flow-col  py-3\">\n        <fieldset class=\"flex justify-center text-center \">\n            <legend class=\"font-bold\">Read</legend>\n            <div class=\"relative inline-block w-20 mr-2 align-middle select-none transition duration-200 ease-in\">\n                <input type=\"checkbox\" name=\"toggle\" id=\"state\" class=\"toggle-checkbox absolute block w-10 h-10 rounded-full bg-white border-4 appearance-none cursor-pointer\"/>\n                <label for=\"state\" class=\"toggle-label block overflow-hidden h-10 rounded-full bg-gray-300 cursor-pointer\"></label>\n            </div>\n        </fieldset>\n        <div class=\"font-bold align-center text-justify \">\n            <p class=\"text-center \">Value</p>\n            <p class=\" text-center  py-2\" id=\"humidityvalue\">0</p>\n        </div>\n        <button>\n            <legend class=\"font-bold\">Config</legend>\n            <svg id = \"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"/></svg>\n        </button>\n        <button>\n            <legend class=\"font-bold\">Simulation</legend>\n            <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n        </button>  \n    </div>\n    <div class=\"flex flex-col \" style=\"display: none\" id=\"ip-parameters\">\n        <div class=\"flex flex-row gap-x-8\">\n            <div class=\"font-sans text-2xl text-left font-bold \">Board Name</div>\n            <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n            <option value=\"\" disabled selected>Select</option>\n            </select>\n        </div><br>\n        <div class=\"flex flex-row gap-x-8\">\n            <div class=\"font-sans text-2xl text-left font-bold\">Port Number</div>\n            <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n                <option value=\"1\">&nbsp;1&nbsp;</option>\n                <option value=\"2\">&nbsp;2&nbsp;</option>\n                <option value=\"3\">&nbsp;3&nbsp;</option>\n                <option value=\"4\">&nbsp;4&nbsp;</option>\n                <option value=\"5\">&nbsp;5&nbsp;</option>\n                <option value=\"6\">&nbsp;6&nbsp;</option>\n            </select>\n            <div class=\"font-sans text-2xl text-left font-bold\">Pin Number&nbsp;</div>\n            <input class=\"form-input rounded-md box-border\" id=\"pin\">\n        </div><br>\n    </div>\n    <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n        <div class=\"rounded-t bg-blue-500\">\n        <div class=\"relative py-3 px-2 flex\">\n            <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n        </div>\n        </div>\n        <div class=\"bg-gray-400 md:text-base text-sm border-b h-24\"> \n            <div class=\"grid grid-cols-1 gap-4\">\n                <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider place-self-center\" id=\"humiditySlider\">\n            </div>            \n        </div>\n    </div>\n</div>\n<div class=\"md:text-base text-sm border-b\" id=\"canvassimulation\" style=\"display: none\"> \n            <div class=\"grid grid-cols-1 gap-4 p-8\">\n                <input type=\"range\" min=\"0\" max=\"1023\" value=\"512\" class=\"slider place-self-center\" id=\"humidityvalueSlider\">\n            </div>            \n        </div>\n`;\n\n/**\n * See {@link QtHumidity} webcomponent <qt-humidity>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/qt-humidity.html|Humidity Bluetooth}.\n */\nexport class QtHumidity extends HTMLElement {\n  static get observedAttributes () {\n    return ['pin', 'port', 'board-name', 'state', 'ccs', 's-style']; // required for v1\n  }\n\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(QtHumiditytemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const state = this.getAttribute('state');\n    if (state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    } else {\n      this.shadowRoot.querySelector('#state').checked = false;\n    }\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  executeOnData (data) {\n    this.shadowRoot.querySelector('#humidityvalue').textContent = data;\n    this.shadowRoot.querySelector('#humiditySlider').value = data;\n    this.shadowRoot.querySelector('#humidityvalueSlider').value = data;\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  show () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  hide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      console.log('this.port==>', this.ports);\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            console.log(' ===>pin ', pinNumber, board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  read (newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    console.log('elem: ', elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    console.log('HUMIDITY ===> ', bName, window.boards);\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      // var pin = board.pin(this.getAttribute('pin'), 'DIGITAL', 'INPUT');\n      elem = this.shadowRoot.getElementById('port');\n      selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n      console.log('elem: ', elem.options, selectedIndex);\n      const portNumber = elem.options[selectedIndex].value;\n      const pin = this.getPin(portNumber);\n      const self = this;\n      if (newState) {\n        pin.read(function (val) {\n          if (self.shadowRoot.querySelector('#state').value === 'on') {\n            if (val === 1) {\n              self.shadowRoot.querySelector('#humidityvalue').textContent = true;\n            } else {\n              self.shadowRoot.querySelector('#humidityvalue').textContent = false;\n            }\n\n            self.executeOnData(val);\n          } else {\n            return false;\n          }\n        });\n        this.setAttribute('state', 'on');\n        self.shadowRoot.querySelector('#state').value = 'on';\n      } else {\n        this.setAttribute('state', 'off');\n        self.shadowRoot.querySelector('#state').value = 'off';\n        self.shadowRoot.querySelector('#humidityvalue').textContent = '0';\n      }\n      return true;\n    } else {\n      console.log('Board not connected');\n      return true;\n    }\n  }\n\n  onChangeValue (e) {\n    this.setAttribute('state', e.target.value);\n    const retVal = this.read(e.target.checked);\n    if (!retVal) {\n      self.shadowRoot.querySelector('#state').value = 'off';\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () {});\n    this.shadowRoot.querySelector('#state-color').removeEventListener('change', function () {});\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    this.shadowRoot.querySelector('#humiditySlider').addEventListener('change', function (e) {\n      self.updatehumiditySlider(e);\n    }, false);\n    this.shadowRoot.querySelector('#humiditySlider').addEventListener('change', function (e) {\n      self.updatehumiditySlider(e);\n      self.shadowRoot.querySelector('#humidityvalueSlider').value = e.target.value;\n    }, false);\n    this.shadowRoot.querySelector('#humidityvalueSlider').addEventListener('change', function (e) {\n      self.updatehumiditySlider(e);\n      self.shadowRoot.querySelector('#humiditySlider').value = e.target.value;\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.updateBoardNames();\n      self.read();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail, window.boards);\n      self.updateBoardNames();\n    });\n\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    console.log('updatePorts(ports) ', ports.rj.digitalPins);\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boards[keys[value]].type + ')' + '</option>';\n        console.log('boardOptions', boardOptions);\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  updatehumiditySlider (e) {\n    if (this.shadowRoot.querySelector('#state').checked) {\n      if (!this.boardstate) {\n        this.shadowRoot.querySelector('#humidityvalue').textContent = e.target.value;\n        this.executeOnData(e.target.value);\n      }\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      console.log('s-style: ', newValue);\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    } else {\n      if (oldValue !== newValue) {\n        this.read();\n      }\n    }\n  }\n}\n","import { QtHumidity } from './qthumidity.js';\nif (!window.customElements.get('qt-humidity')) {\n  window.customElements.define('qt-humidity', QtHumidity);\n}\n","const qtmputemplate = document.createElement('template');\nqtmputemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n   .switch-toggle {\n      float: left;\n      background: #242729;\n      border-radius: 7px;\n      padding:1px;\n      width: 57%;\n  }\n  .switch-toggle input {\n      position: absolute;\n      opacity: 0;\n  }\n  .switch-toggle input + label {\n      padding: 6px;\n      float:left;\n      color: #fff;\n      cursor: pointer;\n  }\n  .switch-toggle input:checked + label {\n      background: green;\n      border-radius: 5px;\n  }\n</style>\n<div id=\"show-hide\" style=\"display: block; background-color: #33CC99\" class=\"box-content rounded-md h-auto w-auto p-4\">\n  <div class=\"grid grid-cols-1 gap-1\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color: #FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">MPU(Accelerometer & Gyro)</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3 py-2\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"flex text-center gap-6\" id=\"state\">\n        <label class=\"font-bold\">MPU<input type=\"checkbox\" value=\"0\" id=\"accel\" /></label>\n      </div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n    </div>\n  </div>\n  <br />\n  <div class=\"grid grid-cols-3 gap-1 overflow-hidden\">\n    <label class=\"font-bold\" id=\"Gyrovalue\">Gyro value: </label>\n    <label class=\"font-bold\" id=\"Accelvalue\">Accel value: </label>\n    <label class=\"font-bold\" id=\"Tempvalue\">Temp value: </label>\n  </div>\n  <br />\n\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n        <!--<div class=\"absolute right-0 top-0 -mr-2 -mt-2 border cursor-pointer shadow-lg bg-white z-10 p-1 rounded-full p-2\">\n                    <img src=\"https://image.flaticon.com/icons/svg/151/151882.svg\"/ class=\"w-2 h-2\">\n                </div>-->\n      </div>\n    </div>\n  </div>\n</div>\n\n\n`;\n\n/**\n * See {@link QtMPU6050} webcomponent <qt-mpu>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/mpuble.html|MPU BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/mpu.html MPU BlueTooth}.\n */\nexport class QtMPU6050 extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'simulation', 'ccs', 'width', 'height', 'rotate', 's-style', 's-class']; // required for v1\n  }\n\n  /**\n   * MPU Constructor\n   * highly accurate inertial measurement unit (IMU) with six degrees of freedom (DOF)\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtmputemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    if (this.state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    }\n    this.ccs_state = this.getAttribute('ccs');\n    this.ccs_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    this.setAttribute('s-style', newValue);\n  }\n\n  get class () {\n    return this.getAttribute('s-style');\n  }\n\n  set class (newValue) {\n    this.setAttribute('s-class', newValue);\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  /**\n   * onData callback\n   *\n   * @param   data\n   */\n  onData (data) {\n    console.log('MPU', data);\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n    try {\n      const dataObj = JSON.parse(data);\n      if (this.shadowRoot.querySelector('#accel').checked) {\n        const accelData = 'x:' + dataObj.a[0].toFixed(3) + ',y:' + dataObj.a[1].toFixed(3) + ',z:' + dataObj.a[2].toFixed(3);\n        this.shadowRoot.querySelector('#Accelvalue').textContent = accelData;\n        const gyroData = 'x:' + dataObj.g[0].toFixed(3) + ',y:' + dataObj.g[1].toFixed(3) + ',z:' + dataObj.g[2].toFixed(3);\n        this.shadowRoot.querySelector('#Gyrovalue').textContent = gyroData;\n        this.shadowRoot.querySelector('#Tempvalue').textContent = 'temp:' + dataObj.t;\n      } else {\n        this.shadowRoot.querySelector('#Accelvalue').textContent = 0;\n        this.shadowRoot.querySelector('#Gyrovalue').textContent = 0;\n        this.shadowRoot.querySelector('#Tempvalue').textContent = 0;\n      }\n    } catch (err) {\n      console.log('error', err);\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * @example\n   * mpu(true)\n   *\n   * Accelerometer , Gyroscope and Temperature\n   *\n   * @param   boolean  newState  true or false\n   *\n   */\n  mpu (newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    const boardType = this.getAttribute('boardType');\n\n    if (board) {\n      const self = this;\n      if (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32') {\n        elem = this.shadowRoot.getElementById('port');\n        selectedIndex = elem.selectedIndex;\n        let pin;\n        try {\n          if (selectedIndex === -1) {\n            pin = this.getPin();\n          } else {\n            const portNumber = elem.options[selectedIndex].value;\n            pin = this.getPin(portNumber);\n          }\n        } catch (err) {\n          console.log('Error ---> ', err);\n        }\n        if (newState) {\n          if (self.shadowRoot.querySelector('#accel').checked) {\n            pin.sendSysex([0x1A, 0x26, 0x00], function (data) { self.onData(data); });\n          }\n        } else {\n          pin.sendSysex([0x1A, 0X26, 0X01], null);\n        }\n      } else if (boardType === 'qtneo') {\n        if (!board.isConnected()) {\n          return true;\n        }\n        self.shadowRoot.querySelector('#accel').checked = newState;\n        board.writeMPU(newState, 'mpu');\n        let charcteristic = null;\n        for (let index = 0; index < board.characteristics.length; index++) {\n          const element = board.characteristics[index];\n          if (element.uuid === '00001008-0000-1000-8000-00805f9b34fb') {\n            charcteristic = element;\n            break;\n          }\n        }\n        if (newState && charcteristic) {\n          board.startNotifications(charcteristic, function (data) {\n            self.onData(data);\n          }, 'string');\n        } else {\n          board.stopNotifications(charcteristic);\n        }\n      }\n    }\n    return true;\n  }\n\n  onChangeValue (e) {\n    const retVal = this.mpu(e.target.checked);\n    if (!retVal) {\n      this.shadowRoot.querySelector('#' + e.target.id).checked = false;\n    }\n    return retVal;\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#accel').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#accel').addEventListener('change', function (e) {\n      return self.onChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      self.mpu(self.pin, false);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    let boardOptions = '';\n    for (const value in keys) {\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '( ' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          if (port.toString() === portValue.toString().trim()) {\n            pinNumber = digPins[keys[value]].pin;\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      return pin;\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'port') {\n      const mpuEnabled = this.shadowRoot.querySelector('#accel').checked;\n      this.mpu(mpuEnabled);\n    }\n  }\n}\n","import { QtMPU6050 } from './qtmpu6050.js';\nif (!window.customElements.get('qt-mpu')) {\n  window.customElements.define('qt-mpu', QtMPU6050);\n}\n","// import '@google-web-components/google-chart';\n// import {dataTable} from '@google-web-components/google-chart/loader.js';\nconst qtTOFTemplate = document.createElement('template');\nqtTOFTemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n   .switch-toggle {\n      float: left;\n      background: #242729;\n      border-radius: 7px;\n      padding:1px;\n      width: 57%;\n  }\n  .switch-toggle input {\n      position: absolute;\n      opacity: 0;\n  }\n  .switch-toggle input + label {\n      padding: 6px;\n      float:left;\n      color: #fff;\n      cursor: pointer;\n  }\n  .switch-toggle input:checked + label {\n      background: green;\n      border-radius: 5px;\n  }\n</style>\n<div id=\"show-hide\" class=\"box-content rounded-md h-auto w-auto p-4\" style=\"display: block; background-color: #33CC99\">\n  <div class=\"grid grid-cols-1 gap-1\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color: #FFCC00\">\n      <p class=\"text-2xl text-center font-sans font-bold\">TOF(Time of Flight)</p>\n    </div>\n  </div>\n  <div class=\"flex flex-wrap gap-3\">\n    <fieldset class=\"flex justify-center text-center\">\n      <legend class=\"font-bold\">Enable</legend>\n      <div class=\"flex text-center gap-6\" id=\"state\">\n        <label class=\"font-bold\">TOF<input type=\"checkbox\" value=\"0\" id=\"tof\" /></label>\n      </div>\n    </fieldset>\n    <button>\n      <legend class=\"font-bold\">Config</legend>\n      <svg id=\"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" /></svg>\n    </button>\n    <button>\n      <legend class=\"font-bold\">Simulation</legend>\n      <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n    </button>\n  </div>\n\n  <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:70px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-16\" id=\"pin\" />\n    </div>\n    <div>\n      <legend class=\"font-bold\">Obj Distance</legend>\n      <p class=\"text-center py-2 overflow-hidden\" id=\"range1\">0</p>\n    </div>\n    \n  </div>\n\n  <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n    <div class=\"rounded bg-blue-500\">\n      <div class=\"relative py-3 px-2 flex\">\n        <!--<google-chart id='tofbar'\n                type=\"bar\"\n                \"vAxis\": {\"minValue\" : 0, \"maxValue\": 4000}}'\n                options='{\"title\": \"ToF Object Distance Range\"}'\n                cols='[{\"label\": \"Object\", \"type\": \"string\"},{\"label\": \"Range(mm)\", \"type\": \"number\"}]'\n                rows='[[\"Object\", 0]]'>\n              </google-chart>-->\n      </div>\n    </div>\n  </div>\n</div>\n\n`;\n/**\n * See {@link QtTOF} webcomponent <qt-tof>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/tofble.html|TOF BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/tof.html TOF BlueTooth}.\n */\nexport class QtTOF extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'simulation', 'ccs', 'width', 'height', 'rotate', 's-style', 's-class']; // required for v1\n  }\n\n  /**\n   * TOF Constructor\n   * Advanced Time-Of-Flight (ToF) laser ranging sensor with an accurate measurement range of up to 4 m.\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtTOFTemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    if (this.state === 'on') {\n      this.shadowRoot.querySelector('#state').checked = true;\n    }\n    this.ccs_state = this.getAttribute('ccs');\n\n    this.enableNotification = false;\n    this.ccs_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  get width () {\n    console.log('width get method');\n    return this.getAttribute('width');\n  }\n\n  set width (newValue) {\n    console.log('width set method', newValue);\n    this.setAttribute('width', newValue);\n  }\n\n  get height () {\n    console.log('height get method');\n    return this.getAttribute('height');\n  }\n\n  set height (newValue) {\n    console.log('height set method', newValue);\n    this.setAttribute('height', newValue);\n  }\n\n  get rotate () {\n    console.log('rotate get method');\n    return this.getAttribute('rotate');\n  }\n\n  set rotate (newValue) {\n    console.log('rotate set method', newValue);\n    this.setAttribute('rotate', newValue);\n  }\n\n  get style () {\n    console.log('s-style get method');\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    console.log('s-style set method', newValue);\n    this.setAttribute('s-style', newValue);\n  }\n\n  get class () {\n    console.log('s-class get method');\n    return this.getAttribute('s-style');\n  }\n\n  set class (newValue) {\n    console.log('s-class set method', newValue);\n    this.setAttribute('s-class', newValue);\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n  }\n\n  /**\n * ccsHide hide the config control simulation section\n *\n */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n  }\n\n  /**\n   * enableTOF enable gesture sensor\n   *\n   */\n  enableTOF () {\n    this.shadowRoot.querySelector('#tof').checked = true;\n    this.setAttribute('tof', true);\n  }\n\n  /**\n   * disableTOF disable the TOF\n   *\n   */\n  disableTOF () {\n    this.shadowRoot.querySelector('#tof').checked = false;\n    this.setAttribute('tof', false);\n  }\n\n  onData (data) {\n    this.dispatchEvent(new CustomEvent('onData', { detail: data }));\n    // if (this.onData && typeof (this.onData) === 'function') {\n    //   this.onData.call(this, data);\n    // } \n    try {\n      const fnName = this.getAttribute('onData');\n      if (fnName) {\n        window[fnName](data);\n      }\n    } catch (error) {\n      // Nothing to do\n    }\n    try {\n      const dataObj = JSON.parse(data);\n      if (this.shadowRoot.querySelector('#tof').checked) {\n        if (dataObj) {\n          console.log('onData received tof', JSON.stringify(dataObj));\n          // {\"name\": \"TOF\", \"p\": 1, \"rmm\": 91, \"acr\": 23, \"rs\": 9, \"pscr\": 877}\n          this.shadowRoot.querySelector('#range1').textContent = dataObj.rmm;\n\n          /* var chart = this.shadowRoot.querySelector('#tofbar');\n                    var chartData = [];\n                    chartData.push(['Label', 'Range']);\n                    for(var i=0 ;i<tofData.length;i++) {\n                        chartData.push(['Obj '+(i+1),tofData[i].r]);\n                    }\n                    dataTable(chartData).then((dataTable) => {\n                        console.log(\"setting datatable ..\",dataTable);\n                        chart.data = dataTable;\n                      });\n                      */\n        }\n      } else {\n        this.shadowRoot.querySelector('#range1').textContent = '';\n      }\n    } catch (err) {\n      // console.log(err);\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * @example\n   * tof(true)\n   * TOF enabling and disabling\n   */\n  tof (newState) {\n    let elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    const boardType = this.getAttribute('boardType');\n    elem = this.shadowRoot.getElementById('port');\n    selectedIndex = elem.selectedIndex === -1 ? 0 : elem.selectedIndex;\n    const portNumber = elem.options[selectedIndex].value;\n    console.log('qt-tof tof method', newState, portNumber);\n\n    if (board) {\n      const elem = this.shadowRoot.getElementById('port');\n      const selectedIndex = elem.selectedIndex;\n      let pin;\n      try {\n        if (selectedIndex === -1) {\n          pin = this.getPin();\n        } else {\n          const portNumber = elem.options[selectedIndex].value;\n          pin = this.getPin(portNumber);\n        }\n      } catch (err) {\n        console.log('Error ---> ', err);\n      }\n      const self = this;\n      if (boardType === 'rio' || boardType === 'veda' || boardType === 'veda-esp32') {\n        if (newState) {\n          if (self.shadowRoot.querySelector('#tof').checked) {\n            console.log('starting tof ..');\n            pin.sendSysex([0x1A, 0x1D, 0x00], function (data) { self.onData(data); });\n          }\n        } else {\n          console.log('stopping tof ..');\n          pin.sendSysex([0x1A, 0X1D, 0X01], null);\n        }\n      } else if (boardType === 'qtneo') {\n        for (let index = 0; index < board.characteristics.length; index++) {\n          const element = board.characteristics[index];\n          if (element.uuid === '00001013-0000-1000-8000-00805f9b34fb') {\n            if (!self.enableNotification) {\n              board.startNotifications(element, function (data) {\n                self.onData(data);\n              }, 'string');\n              self.enableNotification = true;\n            } else {\n              board.stopNotifications(element);\n              self.enableNotification = false;\n            }\n          }\n        }\n\n        board.writeTOF(newState, portNumber);\n        return true;\n      }\n    }\n    return true;\n  }\n\n  onChangeValue (e) {\n    const retVal = this.tof(e.target.checked);\n    if (!retVal) {\n      this.shadowRoot.querySelector('#' + e.target.id).checked = false;\n    }\n    console.log('onChangeValue', e.target, e.target.checked, e.target.id, retVal);\n    return retVal;\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#tof').addEventListener('change', function (e) {\n      console.log('tof changed');\n      return self.onChangeValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      console.log('boardConnected', e.detail, window.boards);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      console.log('boardDisConnected', e.detail);\n      self.tof(false);\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames();\n    });\n    window.addEventListener('boardPorts', function (e) {\n      console.log('boardPorts event received');\n      self.updatePorts(e.detail);\n    });\n  }\n\n  updatePorts (ports) {\n    this.ports = ports;\n    const digPins = ports.rj.digitalPins;\n    const keys = Object.keys(digPins);\n    console.log('updatePorts(ports) ', keys);\n    let boardOptions = '';\n    for (const value in keys) {\n      // console.log(digPins[keys[value]]);\n      boardOptions += \"<option value='\" + digPins[keys[value]].port + \"'>\" + digPins[keys[value]].port + '(pin ' + digPins[keys[value]].pin + ')' + '</option>';\n    }\n    this.shadowRoot.getElementById('port').innerHTML = boardOptions;\n    this.getPin(1);\n  }\n\n  updateBoardNames () {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '( ' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    console.log('pin', e.target.value, this);\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    console.log('port', e.target.value);\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    console.log('board-name', e.target.value);\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener();\n    this.shadowRoot.querySelector('#port').removeEventListener();\n    this.shadowRoot.querySelector('#board-name').removeEventListener();\n    this.shadowRoot.querySelector('#gyro').removeEventListener();\n  }\n\n  getPin (port) {\n    const boardType = this.getAttribute('boardType');\n    console.log('getPin', port, boardType);\n    if (boardType === 'qtneo') {\n      return null;\n    }\n    const elem = this.shadowRoot.getElementById('board-name');\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    // console.log(\"elem: \", elem.options, selectedIndex);\n    const bName = elem.options[selectedIndex].value;\n    const board = window.boards && window.boards[bName];\n    if (board) {\n      let pinNumber;\n      if (port && this.ports) {\n        const digPins = this.ports.rj.digitalPins;\n        const keys = Object.keys(digPins);\n        for (const value in keys) {\n          const portValue = digPins[keys[value]].port;\n          // console.log(\" ===> \", port,portValue);\n          if (port.toString() === portValue.toString().trim()) {\n            // console.log(\" ===> \", port,portValue);\n            pinNumber = digPins[keys[value]].pin;\n            // console.log(\" ===>pin \", pinNumber,board);\n            this.setAttribute('pin', pinNumber);\n            this.shadowRoot.querySelector('#pin').value = pinNumber;\n            break;\n          }\n        }\n      } else {\n        pinNumber = this.getAttribute('pin');\n      }\n      // console.log(\"PIN Number = \", pinNumber);\n      const pin = board.pin(pinNumber, 'DIGITAL', 'OUTPUT');\n      // console.log(\" ===>pin \", pin);\n      return pin;\n    }\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    newValue = (newValue === 'true');\n    if (name === 'ccs') {\n      newValue === false ? this.ccsHide() : this.ccsShow();\n    } else if (name === 'port') {\n      const pin = this.getPin(newValue);\n      if (!pin) {\n        console.log('Could not get the pin details');\n      }\n      const tofEnabled = this.shadowRoot.querySelector('#tof').checked;\n      this.tof(tofEnabled);\n    } else if (name === 'tof') {\n      this.tof(newValue);\n    }\n  }\n}\n","import { QtTOF } from './qttof.js';\nif (!window.customElements.get('qt-tof')) {\n  window.customElements.define('qt-tof', QtTOF);\n}\n","const motortemplate = document.createElement('template');\nmotortemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<style>\n    input:checked + label {\n        background-color: LightSeaGreen;\n    }\n    .wheels img{\n        width: 100px;\n        height: 100px;\n        animation: wheels 2s linear infinite ;    \n    }\n    @keyframes wheels {\n    100% {\n      transform: rotate(360deg);\n    }   \n  }\n</style>\n\n<div class=\"box-content rounded-md h-auto w-auto p-4 text-center \" id=\"show-hide\" style=\"display: block; background-color:#00CCFF\">\n    <div class=\"grid grid-cols-1 gap-4\">\n        <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#FFCC00\">\n            <p class=\"text-2xl text-center font-sans font-bold \">PUMP MOTOR</p>\n        </div>\n    </div>\n   <div class=\"flex flex-wrap gap-3\">\n        <div>\n            <legend class=\"font-bold\">State</legend>\n            <div class=\"inline-flex text-gray-800\" id=\"state\">\n                <input class=\"hidden\" type=\"radio\" id=\"on\" value=\"on\" name=\"state-s\"/>\n                <label class=\"bg-gray-300 hover:bg-gray-400 font-semibold py-2 px-3 cursor-pointer rounded-l\" for=\"on\">START</label>\n                <input class=\"hidden\" type=\"radio\" id=\"off\" value=\"off\" name=\"state-s\" checked=\"checked\"/>\n                <label class=\"bg-gray-300 hover:bg-gray-400 font-semibold py-2 px-3 cursor-pointer rounded-r\" for=\"off\">STOP</label>\n            </div>\n        </div>\n        <div>\n        <fieldset class=\"flex justify-center text-center \">\n            <legend class=\"font-bold\">Direction</legend>\n            <div class=\"inline-flex\" id=\"direction\">\n                <input class=\"hidden\" type=\"radio\" id=\"clockwise\" value=\"clockwise\" name=\"state-d\"  checked/>\n                <label class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-3 cursor-pointer rounded-l\" for=\"clockwise\">CLOCKWISE</label>\n                \n            </div>\n        </fieldset>\n        </div>\n        <div>\n        <button>\n            <legend class=\"font-bold\">Config</legend>\n            <svg id = \"config_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" viewBox=\"0 0 24 24\"><path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\"/></svg>\n        </button>\n        </div>\n        <div>\n        <button>\n            <legend class=\"font-bold\">Simulation</legend>\n            <svg id=\"simulation_gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"38\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n        </button>    \n        </div>     \n    </div>\n\n     <div id=\"ip-parameters\" class=\"flex flex-wrap gap-3\">\n        <div>\n      <legend class=\"font-bold\">Speed</legend>\n      <input type=\"range\" min=\"0\" max=\"255\" value=\"127\" name=\"speed\" id=\"speed\" /> \n       <span id=\"slider_val\">127</span>\n       </div>\n\n    <div>\n      <legend class=\"font-bold\">Board</legend>\n      <select class=\"form-select rounded-md box-border\" style=\"width:75px; overflow:hidden\" id=\"board-name\">\n        <option value=\"\" disabled selected>Select</option>\n      </select>\n    </div>\n    <div>\n     <legend class=\"font-bold\">Port</legend>\n      <select class=\"form-select rounded-md box-border\" id=\"port\" style=\"width:75px; overflow:hidden\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n      </select>\n    </div>\n    <div>\n      <legend class=\"font-bold\">Pin</legend>\n      <input class=\"form-input rounded-md box-border w-20\" id=\"pin\" />\n    </div\n    </div>\n\n    \n    <div class=\"bg-white rounded border shadow-lg\" id=\"simulation_box\" style=\"display: none\">\n        <div class=\"rounded-t bg-blue-500\">\n        <div class=\"relative py-3 px-2 flex\">\n            <span class=\"font-semibold text-white md:text-base text-sm\">Simulation</span>\n           \n        </div>\n        </div>\n        <div class=\" flex justify-center  md:text-base text-sm border-b h-full\">\n            <div class=\"wheels h-24\"> \n                <img src=\"https://qtlearncodelab.github.io/qtpi-shared/images/wheel.png\"  id=\"motor_wheel\">\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\" flex p-10 md:text-base\" id=\"canvassimulation\" style=\"display: none\">\n    <div class=\"wheels\"> \n        <img src=\"https://qtlearncodelab.github.io/qtpi-shared/images/wheel.png\" id=\"simulation_motor_wheel\">\n    </div>\n</div>\n\n\n`;\n\n/**\n * See {@link QtPumpMotor} webcomponent <qt-pumpmotor>.\n * Tutorials, check out {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/pumpmotorble.html|PumpMotor BLE} and\n * {@link https://qtlearncodelab.github.io/qtpi-shared/qtwc/pumpmotor.html PumpMotor BlueTooth}.\n */\nexport class QtPumpMotor extends HTMLElement {\n  static get observedAttributes () {\n    return ['state', 'pin', 'port', 'board-name', 'ccs', 's-style']; // required for v1\n  }\n\n  /**\n   * PumpMotor Constructor\n   *\n   */\n  constructor () {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(motortemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#pin').value = this.getAttribute('pin');\n    this.shadowRoot.querySelector('#board-name').value = this.getAttribute('board-name');\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    const speed = this.getAttribute('speed') ? this.getAttribute('speed') : 127;\n    this.shadowRoot.querySelector('#speed').value = speed;\n    this.shadowRoot.querySelector('#speed').value = 'clockwise';\n    this.state = this.getAttribute('state'); // Run/stop\n    this.direction = this.shadowRoot.querySelector('#direction').value;\n    this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n    this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n  }\n\n  get ccs () {\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    this.setAttribute('ccs', newValue);\n  }\n\n  get style () {\n    return this.getAttribute('s-style');\n  }\n\n  set style (newValue) {\n    this.setAttribute('s-style', newValue);\n  }\n\n  /**\n   * setSpeed set the motor speed\n   *\n   * @param   {Number}  motor speed value 128-255\n   *\n   */\n  setSpeed (newValue) {\n    this.setAttribute('speed', newValue);\n  }\n\n  /**\n   * getSpeed get the current speed of the motor been set\n   *\n   * @return  {Number} return the current motor speed\n   */\n  getSpeed () {\n    return this.getAttribute('speed');\n  }\n\n  updateStateValue (e) {\n    this.state = e.target.value;\n    if (e.target.id === 'on') {\n      this.run();\n    } else {\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n    }\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n   * ccsShow show the config control simulation section\n   *\n   */\n  ccsShow () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'block';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'none';\n  }\n\n  /**\n   * ccsHide hide the config control simulation section\n   *\n   */\n  ccsHide () {\n    this.shadowRoot.getElementById('show-hide').style.display = 'none';\n    this.shadowRoot.getElementById('canvassimulation').style.display = 'block';\n  }\n\n  simulate () {\n    const x = this.shadowRoot.getElementById('simulation_box');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  /**\n     * @run\n     * run(\"clockwise\", 255);\n     *\n     * to start the motor in the given direction with the given speed\n     * @param {String} direction - direction of the motor - clockwise\n     * @param {any} speed - speed of the motor\n     */\n  run (direction = null, speed = null) {\n    const elem = this.shadowRoot.getElementById('board-name');\n    // var BreakException = {};\n    let selectedIndex = elem.selectedIndex;\n    if (selectedIndex === -1) {\n      selectedIndex = 0;\n    }\n    const bName = elem.options[selectedIndex].value;\n    const boardType = this.getAttribute('boardType');\n    const board = window.boards && window.boards[bName];\n    let pin1 = -1;\n    let pin2 = -2;\n    if (board && board.port !== 'simulated') {\n      const mPort = this.getAttribute('port');\n      if (mPort === '1') {\n        if (board.type === 'veda') {\n          pin1 = board.pin(4, 'PWM', 'OUTPUT'); // veda pin1\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'veda-esp32') {\n          pin1 = board.pin(13, 'PWM', 'OUTPUT'); // veda pin1\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'rio') {\n          pin1 = board.pin(4, 'DIGITAL', 'OUTPUT'); // rio digital -direction\n          pin2 = board.pin(5, 'PWM', 'OUTPUT'); // rio analog - speed\n        }\n      } else if (mPort === '2') {\n        if (board.type === 'veda') {\n          pin1 = board.pin(7, 'PWM', 'OUTPUT'); // veda pin 1\n          pin2 = board.pin(6, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'veda-esp32') {\n          pin1 = board.pin(18, 'PWM', 'OUTPUT'); // veda pin 1\n          pin2 = board.pin(19, 'PWM', 'OUTPUT'); // veda pin 2\n        } else if (board.type === 'rio') {\n          pin1 = board.pin(7, 'DIGITAL', 'OUTPUT'); // rio digital direction\n          pin2 = board.pin(6, 'PWM', 'OUTPUT'); // rio analog - speed\n        } else if (boardType === 'qtneo' && board.isConnected()) {\n          console.log('Qt ESP32 ble');\n        }\n      }\n    } else {\n      console.log('Board Not Connected');\n    }\n    const motorState = this.state;\n\n    if (motorState === 'on') {\n      if (direction === null) {\n        direction = this.getAttribute('direction');\n      }\n      if (speed === null) {\n        speed = this.getAttribute('speed');\n      }\n    } else {\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n    }\n    let animationSpeed = 0;\n    if (speed > 0) {\n      if (speed === 0) {\n        animationSpeed = 0;\n      } else {\n        animationSpeed = Math.floor((500 / speed));\n      }\n      this.shadowRoot.getElementById('motor_wheel').style.animationDirection = 'normal';\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'running';\n      this.shadowRoot.getElementById('motor_wheel').style.animationDuration = animationSpeed + 's';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDirection = 'normal';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'running';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationDuration = animationSpeed + 's';\n      if (board && board.port !== 'simulated') {\n        if (board.type === 'veda' || board.type === 'veda-esp32') {\n          pin1.write(Number(speed));\n          pin2.write(0);\n          // veda\n        } else if (board.type === 'rio') {\n          pin2.write(Number(speed)); // analog speed\n          pin1.write(1); // digital direction\n        } else if (boardType === 'qtneo' && board.isConnected()) {\n          const portNumber = Number(this.getAttribute('port'));\n          board.runPumpMotor(portNumber, speed, 'clockwise');\n        }\n      }\n    } else {\n      this.shadowRoot.getElementById('motor_wheel').style.animationPlayState = 'paused';\n      this.shadowRoot.getElementById('simulation_motor_wheel').style.animationPlayState = 'paused';\n      if (board && board.port !== 'simulated') {\n        if (boardType === 'qtneo' && board.isConnected()) {\n          const portNumber = Number(this.getAttribute('port'));\n          board.stopPumpMotor(portNumber);\n        } else {\n          try {\n            pin1.write(0);\n            pin2.write(0);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#pin').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#port').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#board-name').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#state').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#direction').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#speed').removeEventListener('change', function () { });\n    this.shadowRoot.querySelector('#config_gear').removeEventListener('click', function () { });\n    this.shadowRoot.querySelector('#simulation_gear').removeEventListener('click', function () { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    this.shadowRoot.querySelector('#port').value = this.getAttribute('port');\n    this.shadowRoot.querySelector('#speed').value = this.getAttribute('speed');\n    this.shadowRoot.querySelector('#speed').value = 'clockwise';\n    this.shadowRoot.querySelector('#pin').addEventListener('change', function (e) {\n      self.updatePinValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#port').addEventListener('change', function (e) {\n      self.updatePortValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#board-name').addEventListener('change', function (e) {\n      self.updateBoardNameValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#state').addEventListener('change', function (e) {\n      self.updateStateValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#direction').addEventListener('change', function (e) {\n      self.updateDirectionValue(e);\n    }, false);\n\n    this.shadowRoot.querySelector('#speed').addEventListener('change', function (e) {\n      self.updateSpeedValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#config_gear').addEventListener('click', function (e) {\n      self.updateParameters(e);\n    }, false);\n    this.shadowRoot.querySelector('#simulation_gear').addEventListener('click', function (e) {\n      self.displaySimulation(e);\n    }, false);\n    window.addEventListener('boardConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n\n      self.updateBoardNames(e.detail);\n      self.run(self.direction, self.speed);\n    });\n    window.addEventListener('boardDisConnected', function (e) {\n      self.setAttribute('boardType', e.detail.type);\n      self.updateBoardNames(e.detail);\n    });\n  }\n\n  simulateCb (dataCb) {\n    const port = this.shadowRoot.querySelector('#port').value;\n    if (parseInt(port) === parseInt(dataCb.s.p)) {\n      this.run(dataCb.s.d, dataCb.s.s);\n      if (this.getAttribute('onData')) {\n        window[this.getAttribute('onData')](dataCb.s);\n      }\n    }\n  }\n\n  convertToArray (msg) {\n    const arr = [];\n    for (let i = 0; i < msg.length; i++) {\n      arr.push(msg.charCodeAt(i));\n    }\n    arr.push();\n    return arr;\n  }\n\n  updateBoardNames (boardData) {\n    const boards = window.boards || {};\n    const keys = Object.keys(boards);\n    const self = this;\n    if (boardData.registerCb) { boardData.registerCb('motor', function (dataObj) { self.simulateCb(dataObj); }); }\n    if (keys.length === 0) {\n      this.shadowRoot.getElementById('board-name').innerHTML = '<option></option>';\n    } else {\n      let value;\n      let boardOptions = '';\n      for (value in keys) {\n        const boardType = boards[keys[value]].type ? boards[keys[value]].type : this.getAttribute('boardType'); // Todo change\n        boardOptions += \"<option value='\" + keys[value] + \"'>\" + keys[value] + '(' + boardType + ')' + '</option>';\n      }\n      this.shadowRoot.getElementById('board-name').innerHTML = boardOptions;\n    }\n  }\n\n  updatePinValue (e) {\n    this.setAttribute('pin', e.target.value);\n  }\n\n  updatePortValue (e) {\n    this.setAttribute('port', e.target.value);\n  }\n\n  updateBoardNameValue (e) {\n    this.setAttribute('board-name', e.target.value);\n  }\n\n  updateDirectionValue (e) {\n    this.setAttribute('direction', 'clockwise');\n    if (this.state === 'on') {\n      this.run();\n    }\n  }\n\n  updateSpeedValue (e) {\n    this.setAttribute('speed', e.target.value);\n    this.shadowRoot.querySelector('#slider_val').innerHTML = e.target.value;\n    if (this.state === 'on') {\n      this.run();\n    }\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  displaySimulation (e) {\n    this.simulate();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    } else if (name === 's-style') {\n      this.shadowRoot.getElementById('canvassimulation').style = newValue;\n    }\n  }\n}\n","import { QtPumpMotor } from './qtpumpmotor.js';\nif (!window.customElements.get('qt-pumpmotor')) {\n  window.customElements.define('qt-pumpmotor', QtPumpMotor);\n}\n","const qtposetemplate = document.createElement('template');\nqtposetemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<div class=\"box-content rounded-md h-auto w-auto p-4 bg-gradient-to-r from-indigo-500\" id=\"qtpose\" style=\"display: block; background-color:#FFCC00\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">Pose Detection</p>\n    </div>\n  </div>\n  <br>\n   <div id=\"ip-parameters\" class=\"flex justify-center\" style=\"display: block\">\n      <div id=\"model-input\" class=\"flex gap-x-4\">\n         <div class=\"font-sans text-xl text-left font-bold\">Model URL</div>\n         <input class=\"form-input rounded-md box-border\" id=\"url\" />\n      </div>\n      <br>\n      <div class=\"flex gap-x-4\">\n        <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\" id=\"start\">Start</button>\n         <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out \" id=\"stop\">Stop</button>\n      </div>\n   </div>\n   <br>\n   <div id=\"cam-pose-prediction\" class=\"flex gap-x-4\">\n      <div >\n         <canvas class=\"rounded-md\" id=\"pose-canvas\"></canvas>\n      </div>\n      <div id=\"label-container\"></div>\n   </div>\n</div>\n`;\n/**\n *  qt-pose component\n *  {@link  Click Here for Tutorial}\n */\nexport class QtPose extends HTMLElement {\n  static get observedAttributes () {\n    return ['url', 'ccs', 'onPrediction']; // required for v1\n  }\n\n  constructor () {\n    super();\n    console.log('qt-pose constructor');\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtposetemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.ccs_state = this.getAttribute('ccs');\n    this.css_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  /**\n   * get the current model base url\n   *\n   * @return  {String} return url\n   */\n  get url () {\n    return this.getAttribute('url');\n  }\n\n  /**\n   * set the model base url\n   *\n   * @param   {String}  valid http url\n\n   */\n  set url (value) {\n    this.setAttribute('url', value);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('qtpose').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('qtpose').style.display = 'none';\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#url').removeEventListener('change', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    console.log('qt-pose connected callback');\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.shadowRoot.querySelector('#url').addEventListener('change', function (e) {\n      self.updateUrlValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#start').addEventListener('click', function (e) {\n      console.log(e);\n      self.init();\n    }, false);\n    this.shadowRoot.querySelector('#stop').addEventListener('click', function (e) {\n      console.log(e);\n      self.deinit();\n    }, false);\n  }\n\n  updateUrlValue (e) {\n    console.log('url', e.target.value, this);\n    this.setAttribute('url', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    }\n  }\n\n  /**\n   * deinit stop camera input\n   *\n   */\n  async deinit () {\n    this.webcam.stop();\n    this.willAnimate = false;\n  }\n\n  /**\n   * init start camera and detect pose\n   *\n   */\n  async init () {\n    const url = this.getAttribute('url');\n    if (!url) {\n      const errElem = this.shadowRoot.querySelector('#err-msg');\n      if (!errElem) {\n        const elem = this.shadowRoot.querySelector('#model-input');\n        const spanElem = document.createElement('span');\n        spanElem.id = 'err-msg';\n        spanElem.innerHTML = 'enter model base url';\n        elem.appendChild(spanElem);\n      }\n      return;\n    }\n    const modelURL = url + 'model.json';\n    const metadataURL = url + 'metadata.json';\n\n    // load the model and metadata\n    // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n    // Note: the pose library adds a tmPose object to your window (window.tmPose)\n    this.model = await window.tmPose.load(modelURL, metadataURL);\n    this.maxPredictions = this.model.getTotalClasses();\n\n    // Convenience function to setup a webcam\n    const size = 200;\n    const flip = true; // whether to flip the webcam\n    this.webcam = new window.tmPose.Webcam(size, size, flip); // width, height, flip\n    await this.webcam.setup(); // request access to the webcam\n    await this.webcam.play();\n    window.requestAnimationFrame(this.loop.bind(this));\n    this.willAnimate = true;\n    // append/get elements to the DOM\n    const canvas = this.shadowRoot.querySelector('#pose-canvas');\n    canvas.width = size;\n    canvas.height = size;\n    this.ctx = canvas.getContext('2d');\n    this.labelContainer = this.shadowRoot.querySelector('#label-container');\n    for (let i = 0; i < this.maxPredictions; i++) { // and class labels\n      this.labelContainer.appendChild(document.createElement('div'));\n    }\n  }\n\n  /**\n   * onPrediction responsible for calling callback of onPrediction attribute method\n   * This is a internal method, which will be invoked when pose is detected by cam input\n   * @param   {Number}  index\n   * @param   {String}  className pose classification name\n   * @param   {String}  probability of the detected pose\n   *\n   */\n  onPrediction (index, className, probability) {\n    // console.log('TM Pose', className, probability);\n    if (this.getAttribute('onPrediction')) {\n      window[this.getAttribute('onPrediction')](index, className, probability);\n    }\n    this.labelContainer.childNodes[index].innerHTML = className + ' : ' + probability;\n  }\n\n  async loop (timestamp) {\n    this.webcam.update(); // update the webcam frame\n    await this.predict();\n    if (this.willAnimate) { window.requestAnimationFrame(this.loop.bind(this)); }\n  }\n\n  async predict () {\n    // Prediction #1: run input through posenet\n    // estimatePose can take in an image, video or canvas html element\n    const { pose, posenetOutput } = await this.model.estimatePose(this.webcam.canvas);\n    // Prediction 2: run input through teachable machine classification model\n    const prediction = await this.model.predict(posenetOutput);\n\n    for (let i = 0; i < this.maxPredictions; i++) {\n      this.onPrediction(i, prediction[i].className, prediction[i].probability.toFixed(2));\n    }\n\n    // finally draw the poses\n    this.drawPose(pose);\n  }\n\n  drawPose (pose) {\n    if (this.webcam.canvas) {\n      this.ctx.drawImage(this.webcam.canvas, 0, 0);\n      // draw the keypoints and skeleton\n      if (pose) {\n        const minPartConfidence = 0.5;\n        window.tmPose.drawKeypoints(pose.keypoints, minPartConfidence, this.ctx);\n        window.tmPose.drawSkeleton(pose.keypoints, minPartConfidence, this.ctx);\n      }\n    }\n  }\n}\n","import { QtPose } from './qtpose.js';\nif (!window.customElements.get('qt-pose')) {\n  window.customElements.define('qt-pose', QtPose);\n}\n","const qtimagetemplate = document.createElement('template');\nqtimagetemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<div class=\"box-content rounded-md h-auto w-auto p-4 bg-gradient-to-r from-indigo-500\" id=\"qtimage\" style=\"display: block; background-color:#33CC99\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">Image Recognition</p>\n    </div>\n  </div>\n  <br>\n   <div id=\"ip-parameters\" class=\"flex justify-center\" style=\"display: block\">\n      <div id=\"model-input\" class=\"flex gap-x-4\">\n         <div class=\"font-sans text-xl text-left font-bold\">Model URL</div>\n         <input class=\"form-input rounded-md box-border\" id=\"url\" />\n      </div>\n      <br>\n      <div class=\"flex gap-x-4\">\n        <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\" id=\"start\">Start</button>\n         <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out \" id=\"stop\">Stop</button>\n      </div>\n   </div>\n   <br>\n   <div id=\"cam-image-prediction\" class=\"flex gap-x-4\">\n      <div id=\"webcam-container\" class=\"rounded-md\"></div>\n      <div id=\"label-container\"></div>\n   </div>\n</div>\n`;\n/**\n *  qt-image component\n *  {@link  Click Here for Tutorial}\n */\nexport class QtImage extends HTMLElement {\n  static get observedAttributes () {\n    return ['url', 'ccs', 'onPrediction']; // required for v1\n  }\n\n  constructor () {\n    super();\n    console.log('qt-image constructor');\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtimagetemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.ccs_state = this.getAttribute('ccs');\n    this.css_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  /**\n   * get the current model base url\n   *\n   * @return  {String} return url\n   */\n  get url () {\n    return this.getAttribute('url');\n  }\n\n  /**\n   * set the model base url\n   *\n   * @param   {String}  valid http url\n\n   */\n  set url (value) {\n    this.setAttribute('url', value);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('qtimage').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('qtimage').style.display = 'none';\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#url').removeEventListener('change', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    console.log('qt-image connected callback');\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.shadowRoot.querySelector('#url').addEventListener('change', function (e) {\n      self.updateUrlValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#start').addEventListener('click', function (e) {\n      console.log(e);\n      self.init();\n    }, false);\n    this.shadowRoot.querySelector('#stop').addEventListener('click', function (e) {\n      console.log(e);\n      self.deinit();\n    }, false);\n  }\n\n  updateUrlValue (e) {\n    console.log('url', e.target.value, this);\n    this.setAttribute('url', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    }\n  }\n\n  /**\n   * deinit stop camera input\n   *\n   */\n  async deinit () {\n    this.webcam.stop();\n    this.willAnimate = false;\n  }\n\n  /**\n   * init start camera and detect image\n   *\n   */\n  async init () {\n    const url = this.getAttribute('url');\n    if (!url) {\n      const errElem = this.shadowRoot.querySelector('#err-msg');\n      if (!errElem) {\n        const elem = this.shadowRoot.querySelector('#model-input');\n        const spanElem = document.createElement('span');\n        spanElem.id = 'err-msg';\n        spanElem.innerHTML = 'enter model base url';\n        elem.appendChild(spanElem);\n      }\n      return;\n    }\n    const modelURL = url + 'model.json';\n    const metadataURL = url + 'metadata.json';\n\n    // load the model and metadata\n    // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n    // or files from your local hard drive\n    // Note: the pose library adds \"tmImage\" object to your window (window.tmImage)\n    this.model = await window.tmImage.load(modelURL, metadataURL);\n    this.maxPredictions = this.model.getTotalClasses();\n\n    // Convenience function to setup a webcam\n    const size = 200;\n    const flip = true; // whether to flip the webcam\n    this.webcam = new window.tmImage.Webcam(size, size, flip); // width, height, flip\n    await this.webcam.setup(); // request access to the webcam\n    await this.webcam.play();\n    window.requestAnimationFrame(this.loop.bind(this));\n    this.willAnimate = true;\n    // append/get elements to the DOM\n    const wContainer = this.shadowRoot.querySelector('#webcam-container');\n    wContainer.appendChild(this.webcam.canvas);\n    this.labelContainer = this.shadowRoot.querySelector('#label-container');\n    for (let i = 0; i < this.maxPredictions; i++) { // and class labels\n      this.labelContainer.appendChild(document.createElement('div'));\n    }\n  }\n\n  /**\n   * onPrediction responsible for calling callback of onPrediction attribute method\n   * This is a internal method, which will be invoked when image is detected by cam input\n   * @param   {Number}  index\n   * @param   {String}  className image classification name\n   * @param   {String}  probability of the detected image\n   *\n   */\n  onPrediction (index, className, probability) {\n    // console.log('TM Pose', className, probability);\n    if (this.getAttribute('onPrediction')) {\n      window[this.getAttribute('onPrediction')](index, className, probability);\n    }\n    this.labelContainer.childNodes[index].innerHTML = className + ' : ' + probability;\n  }\n\n  async loop (timestamp) {\n    this.webcam.update(); // update the webcam frame\n    await this.predict();\n    if (this.willAnimate) { window.requestAnimationFrame(this.loop.bind(this)); }\n  }\n\n  async predict () {\n    // Prediction 1: run input through teachable machine classification model\n    const prediction = await this.model.predict(this.webcam.canvas);\n\n    for (let i = 0; i < this.maxPredictions; i++) {\n      this.onPrediction(i, prediction[i].className, prediction[i].probability.toFixed(2));\n    }\n  }\n}\n","import { QtImage } from './qtimage.js';\nif (!window.customElements.get('qt-image')) {\n  window.customElements.define('qt-image', QtImage);\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import styles from './styles.css';\nconst qtsoundtemplate = document.createElement('template');\nqtsoundtemplate.innerHTML = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css\" />\n<div class=\"box-content rounded-md h-auto w-auto p-4 bg-gradient-to-r from-indigo-500\" id=\"qtsound\" style=\"display: block; background-color:#FF3399\">\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div class=\"box-content rounded-md h-auto w-full\" style=\"background-color:#00CCFF\">\n      <p class=\"text-2xl text-center font-sans font-bold\">Sound Detection</p>\n    </div>\n  </div>\n  <br>\n   <div id=\"ip-parameters\" class=\"flex justify-center\" style=\"display: block\">\n      <div id=\"model-input\" class=\"flex gap-x-4\">\n         <div class=\"font-sans text-xl text-left font-bold\">Model URL</div>\n         <input class=\"form-input rounded-md box-border\" id=\"url\" />\n      </div>\n      <br>\n      <div class=\"flex gap-x-4\">\n        <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\" id=\"start\">Start</button>\n         <button type=\"button\" class=\"inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out \" id=\"stop\">Stop</button>\n      </div>\n   </div>\n   <br>\n   <div id=\"cam-sound-prediction\" class=\"flex gap-x-4\">\n      <div id=\"label-container\"></div>\n   </div>\n</div>\n`;\n/**\n *  qt-sound component\n *  {@link  Click Here for Tutorial}\n */\nexport class QtSound extends HTMLElement {\n  static get observedAttributes () {\n    return ['url', 'ccs', 'onPrediction']; // required for v1\n  }\n\n  constructor () {\n    super();\n    console.log('qt-sound constructor');\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(qtsoundtemplate.content.cloneNode(true));\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.adoptedStyleSheets = [styles];\n    this.ccs_state = this.getAttribute('ccs');\n    this.css_state === 'false' ? this.ccsHide() : this.ccsShow();\n  }\n\n  get ccs () {\n    console.log('ccs get method');\n    return this.getAttribute('ccs');\n  }\n\n  set ccs (newValue) {\n    console.log('ccs set method', newValue);\n    this.setAttribute('ccs', newValue);\n  }\n\n  /**\n   * get the current model base url\n   *\n   * @return  {String} return url\n   */\n  get url () {\n    return this.getAttribute('url');\n  }\n\n  /**\n   * set the model base url\n   *\n   * @param   {String}  valid http url\n\n   */\n  set url (value) {\n    this.setAttribute('url', value);\n  }\n\n  getParameters () {\n    const x = this.shadowRoot.getElementById('ip-parameters');\n    if (x.style.display === 'none') {\n      x.style.display = 'block';\n    } else {\n      x.style.display = 'none';\n    }\n  }\n\n  getProperty (property) {\n    return this.getAttribute(property);\n  }\n\n  setProperty (property, value) {\n    this.setAttribute(property, value);\n  }\n\n  ccsShow () {\n    this.shadowRoot.getElementById('qtsound').style.display = 'block';\n  }\n\n  ccsHide () {\n    this.shadowRoot.getElementById('qtsound').style.display = 'none';\n  }\n\n  executeOnStateChange (data) {\n    if (this.getAttribute('onStateChange')) {\n      window[this.getAttribute('onStateChange')](data);\n    }\n  }\n\n  disconnectedCallback () {\n    this.shadowRoot.querySelector('#url').removeEventListener('change', function (e) { });\n  }\n\n  connectedCallback () {\n    const self = this;\n    console.log('qt-sound connected callback');\n    this.shadowRoot.querySelector('#url').value = this.getAttribute('url');\n    this.shadowRoot.querySelector('#url').addEventListener('change', function (e) {\n      self.updateUrlValue(e);\n    }, false);\n    this.shadowRoot.querySelector('#start').addEventListener('click', function (e) {\n      console.log(e);\n      self.init();\n    }, false);\n    this.shadowRoot.querySelector('#stop').addEventListener('click', function (e) {\n      console.log(e);\n      self.deinit();\n    }, false);\n  }\n\n  updateUrlValue (e) {\n    console.log('url', e.target.value, this);\n    this.setAttribute('url', e.target.value);\n  }\n\n  updateParameters (e) {\n    this.getParameters();\n  }\n\n  attributeChangedCallback (name, oldValue, newValue) {\n    console.log('attributeChangedCallback ', name, oldValue, newValue);\n    if (name === 'ccs') {\n      newValue === 'false' ? this.ccsHide() : this.ccsShow();\n    }\n  }\n\n  /**\n   * deinit stop camera input\n   *\n   */\n  async deinit () {\n    this.recognizer.stopListening();\n  }\n\n  async createModel (baseUrl) {\n    const checkpointURL = baseUrl + 'model.json'; // model topology\n    const metadataURL = baseUrl + 'metadata.json'; // model metadata\n\n    const recognizer = window.speechCommands.create(\n      'BROWSER_FFT', // fourier transform type, not useful to change\n      undefined, // speech commands vocabulary feature, not useful for your models\n      checkpointURL,\n      metadataURL);\n\n    // check that model and metadata are loaded via HTTPS requests.\n    await recognizer.ensureModelLoaded();\n\n    return recognizer;\n  }\n\n  /**\n   * init start camera and detect sound\n   *\n   */\n  async init () {\n    const url = this.getAttribute('url');\n    if (!url) {\n      const errElem = this.shadowRoot.querySelector('#err-msg');\n      if (!errElem) {\n        const elem = this.shadowRoot.querySelector('#model-input');\n        const spanElem = document.createElement('span');\n        spanElem.id = 'err-msg';\n        spanElem.innerHTML = 'enter model base url';\n        elem.appendChild(spanElem);\n      }\n      return;\n    }\n    this.recognizer = await this.createModel(url);\n    const classLabels = this.recognizer.wordLabels(); // get class labels\n    this.labelContainer = this.shadowRoot.querySelector('#label-container');\n    for (let i = 0; i < classLabels.length; i++) {\n      this.labelContainer.appendChild(document.createElement('div'));\n    }\n\n    // listen() takes two arguments:\n    // 1. A callback function that is invoked anytime a word is recognized.\n    // 2. A configuration object with adjustable fields\n    this.recognizer.listen(result => {\n      const scores = result.scores; // probability of prediction for each class\n      // render the probability scores per class\n      for (let i = 0; i < classLabels.length; i++) {\n        this.onPrediction(i, classLabels[i], scores[i].toFixed(2));\n      }\n    }, {\n      includeSpectrogram: true, // in case listen should return result.spectrogram\n      probabilityThreshold: 0.75,\n      invokeCallbackOnNoiseAndUnknown: true,\n      overlapFactor: 0.50 // probably want between 0.5 and 0.75. More info in README\n    });\n  }\n\n  /**\n   * onPrediction responsible for calling callback of onPrediction attribute method\n   * This is a internal method, which will be invoked when sound is detected by cam input\n   * @param   {Number}  index\n   * @param   {String}  className sound classification name\n   * @param   {String}  probability of the detected sound\n   *\n   */\n  onPrediction (index, className, probability) {\n    // console.log('TM Pose', className, probability);\n    if (this.getAttribute('onPrediction')) {\n      window[this.getAttribute('onPrediction')](index, className, probability);\n    }\n    this.labelContainer.childNodes[index].innerHTML = className + ' : ' + probability;\n  }\n}\n","import { QtSound } from './qtsound.js';\nif (!window.customElements.get('qt-sound')) {\n  window.customElements.define('qt-sound', QtSound);\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","boardtemplate","innerHTML","QtBoard","HTMLElement","observedAttributes","constructor","super","attachShadow","mode","shadowRoot","cloneNode","value","getAttribute","state","checked","ccs","console","log","newValue","ccsShow","getElementById","display","ccsHide","getParameters","x","updateState","disconnectCb","portsCb","event","CustomEvent","detail","dispatchEvent","getBoardType","elem","selectedIndex","connectCb","boardData","boards","board","type","self","ports","connect","cName","loadingIcon","commName","bType","p5","disconnectedCallback","removeEventListener","connectedCallback","addEventListener","updateComPort","updateBoardName","updateBoardType","updateParameters","serial","createCOMPort","boardType","comOptions","portName","attributeChangedCallback","name","oldValue","customElements","define","QtBLEConstants","callCallback","promise","callback","then","catch","error","stack","parseData","t","encoding","toLowerCase","getUint8","getUint16","getUint32","getInt8","getInt16","getInt32","getFloat32","getFloat64","TextDecoder","decode","trim","QtBLE","device","server","service","characteristics","handleNotifications","pinState","BreakException","serviceUuidOrOptions","serviceUuid","filters","services","servicesArray","find","f","newF","s","navigator","bluetooth","requestDevice","gatt","getPrimaryService","getCharacteristics","uuid","findAllMethods","getOwnPropertyNames","filter","property","delayPromise","ms","Promise","resolve","setTimeout","read","characteristic","dataTypeOrcallback","cb","dataType","char","readValue","writeWithRetries","inputValue","leftTries","bufferToSend","Uint8Array","writeValueWithoutResponse","reject","concatTypedArrays","b","c","set","concatBytes","ui8a","byte","write","startNotifications","onData","buffer","pData","String","fromCharCode","stopNotifications","disconnect","connected","onDisconnected","handleDisconnected","isConnected","ledOn","portNumber","blink","clearInterval","commandJson","convertToArray","ledOff","ledBlink","blinkInterval","setInterval","stopMotor","Number","runMotor","speed","direction","runPumpMotor","stopPumpMotor","writeARGB","onIndexesStr","offIndexesStr","red","green","blue","buzz","interval","servoSweep","start","end","writeAPDS","newState","writeMPU","writeUS","port","writeTOF","msg","arr","charCodeAt","QtBoardBLE","serviceUUIDTemplate","connectionType","newType","newName","uuidStr","onDisConnected","characteristicsCB","serviceUUID","replace","err","chars","updateServiceUUID","qtledtemplate","QtLED","ccs_state","simBlinkInterval","led","width","height","rotate","class","getProperty","setProperty","togglePropsDisplay","classList","toggle","updateStateValue","setBlinkInterval","getBlinkInterval","simulate","executeOnStateChange","animateLed","getPin","bName","pinNumber","digPins","rj","digitalPins","keys","portValue","pin","parseInt","simState","updatePinValue","updatePortValue","updateBoardNameValue","updateBlinkIntervalValue","displaySimulation","updateBoardNames","updatePorts","boardOptions","setWidth","temp","transform","qtargbtemplate","QtARGB","dataCb","updateSimulation","groupid","color","fill","argb","onIndexes","onIndex","offIndexes","offIndex","checkboxElems","querySelectorAll","forEach","arr1","sendSysex","updateRValue","updateGValue","updateBValue","updateCheckboxValue","qtbuzzertemplate","QtBuzzer","buzzInterval","audio","Audio","setBuzzInterval","getBuzzInterval","retVal","animateBuzzer","play","buzzing","pause","qtapdstemplate","QtAPDS","enableNotification","enableProximity","enableLight","enableGesture","disableProximity","disableLight","disableGesture","fnName","proximity","gesture","dataObj","parse","textContent","g","colorValue","apds","flag","onChangeValue","qtirtemplate","QtIR","boardstate","executeOnData","readIR","val","onStateChangeValue","updateobstacleSlider","qtldrtemplate","QtLDR","elemPort","selectedIndexPort","anaPins","analogPins","sendData","qtlimitswitchtemplate","QtLimitSwitch","readLimitSwitch","updatesimulationstate","motortemplate","QtMotor","animationPlayState","setSpeed","getSpeed","setDirection","getDirection","run","tagName","pin1","pin2","mPort","motorState","animationSpeed","animationDirection","Math","floor","animationDuration","updateDirectionValue","updateSpeedValue","simulateCb","p","registerCb","qtrgbtemplate","QtRGB","rgb","redvalue","greenvalue","bluevalue","rpin","gpin","bpin","redpin","greenpin","bluepin","redarr","greenarr","bluearr","updatesimulationcolor","updateRedValue","updateGreenValue","updateBlueValue","r","QtServotemplate","QtServo","sweep","initPos","finalPos","updateSweepValue","angle","qttemptemplate","QtTemperature","readTemperature","boardState","tempVal","substring","indexOf","split","updateTempSlider","QtUSSensorTemplate","QtUltraSonic","readultrasonic","usVal","enableUltrasonic","disableUltrasonic","v","m","usPin1","usValueChange","usStr","qtgvtemplate","QtGv","css_state","getparameters","listen","listenInterval","url","httpGet","stopListen","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","updateUrlValue","updateparameters","qtalexatemplate","QtAlexa","QtGasSensortemplate","QtGas","getDigitalPin","digitalPin","gasvaluechange","QtHumiditytemplate","QtHumidity","show","hide","updatehumiditySlider","qtmputemplate","QtMPU6050","accelData","toFixed","gyroData","mpu","charcteristic","mpuEnabled","qtTOFTemplate","QtTOF","enableTOF","disableTOF","rmm","tof","tofEnabled","QtPumpMotor","qtposetemplate","QtPose","init","deinit","webcam","stop","willAnimate","modelURL","metadataURL","model","tmPose","load","maxPredictions","getTotalClasses","size","Webcam","setup","requestAnimationFrame","loop","bind","canvas","ctx","getContext","labelContainer","spanElem","onPrediction","className","probability","childNodes","timestamp","predict","pose","posenetOutput","estimatePose","prediction","drawPose","drawImage","drawKeypoints","keypoints","drawSkeleton","qtimagetemplate","QtImage","tmImage","qtsoundtemplate","QtSound","adoptedStyleSheets","styles","recognizer","stopListening","createModel","baseUrl","checkpointURL","speechCommands","create","ensureModelLoaded","classLabels","wordLabels","scores","includeSpectrogram","probabilityThreshold","invokeCallbackOnNoiseAndUnknown","overlapFactor"],"sourceRoot":""}